// Code generated by goyacc -o sql.go .\sql.y. DO NOT EDIT.

//line .\sql.y:17

package sqlparser

import __yyfmt__ "fmt"

//line .\sql.y:19

import "github.com/vedadiyan/sqlparser/pkg/ptr"

func setParseTrees(yylex yyLexer, stmts []Statement) {
	if len(stmts) > 1 && stmts[len(stmts)-1] == nil {
		stmts = stmts[:len(stmts)-1]
	}
	yylex.(*Tokenizer).ParseTrees = stmts
}

func resetTokenizer(yylex yyLexer) {
	yylex.(*Tokenizer).reset()
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

//line .\sql.y:54
type yySymType struct {
	yys                int
	statement          Statement
	statements         []Statement
	selStmt            SelectStatement
	compoundStatement  CompoundStatement
	compoundStatements *CompoundStatements
	tableStmt          TableStatement
	tableExpr          TableExpr
	expr               Expr
	colTuple           ColTuple
	optVal             Expr
	constraintInfo     ConstraintInfo
	alterOption        AlterOption
	empty              struct{}
	LengthScaleOption  LengthScaleOption
	tableName          TableName
	identifierCS       IdentifierCS
	str                string
	strs               []string
	vindexParam        VindexParam
	jsonObjectParam    *JSONObjectParam
	identifierCI       IdentifierCI
	joinCondition      *JoinCondition
	databaseOption     DatabaseOption
	columnType         *ColumnType
	columnCharset      ColumnCharset

	ins              *Insert
	colName          *ColName
	colNames         []*ColName
	indexHint        *IndexHint
	indexHints       IndexHints
	indexHintForType IndexHintForType
	literal          *Literal
	subquery         *Subquery
	derivedTable     *DerivedTable
	when             *When
	with             *With
	cte              *CommonTableExpr
	ctes             []*CommonTableExpr
	order            *Order
	limit            *Limit
	rowAlias         *RowAlias

	updateExpr                    *UpdateExpr
	setExpr                       *SetExpr
	convertType                   *ConvertType
	aliasedTableName              *AliasedTableExpr
	tableSpec                     *TableSpec
	columnDefinition              *ColumnDefinition
	indexDefinition               *IndexDefinition
	indexInfo                     *IndexInfo
	indexOption                   *IndexOption
	indexColumn                   *IndexColumn
	partDef                       *PartitionDefinition
	partSpec                      *PartitionSpec
	showFilter                    *ShowFilter
	optLike                       *OptLike
	selectInto                    *SelectInto
	createDatabase                *CreateDatabase
	alterDatabase                 *AlterDatabase
	createTable                   *CreateTable
	createView                    *CreateView
	createProcedure               *CreateProcedure
	tableAndLockType              *TableAndLockType
	alterTable                    *AlterTable
	tableOption                   *TableOption
	columnTypeOptions             *ColumnTypeOptions
	partitionDefinitionOptions    *PartitionDefinitionOptions
	subPartitionDefinition        *SubPartitionDefinition
	subPartitionDefinitions       SubPartitionDefinitions
	subPartitionDefinitionOptions *SubPartitionDefinitionOptions
	constraintDefinition          *ConstraintDefinition
	revertMigration               *RevertMigration
	alterMigration                *AlterMigration
	elseIf                        *ElseIfBlock
	elseIfs                       []*ElseIfBlock
	trimType                      TrimType
	frameClause                   *FrameClause
	framePoint                    *FramePoint
	frameUnitType                 FrameUnitType
	framePointType                FramePointType
	argumentLessWindowExprType    ArgumentLessWindowExprType
	windowSpecification           *WindowSpecification
	overClause                    *OverClause
	nullTreatmentClause           *NullTreatmentClause
	nullTreatmentType             NullTreatmentType
	firstOrLastValueExprType      FirstOrLastValueExprType
	fromFirstLastType             FromFirstLastType
	fromFirstLastClause           *FromFirstLastClause
	lagLeadExprType               LagLeadExprType
	windowDefinition              *WindowDefinition
	windowDefinitions             WindowDefinitions
	namedWindow                   *NamedWindow
	namedWindows                  NamedWindows

	whens               []*When
	columnDefinitions   []*ColumnDefinition
	indexOptions        []*IndexOption
	indexColumns        []*IndexColumn
	databaseOptions     []DatabaseOption
	tableAndLockTypes   TableAndLockTypes
	renameTablePairs    []*RenameTablePair
	alterOptions        []AlterOption
	vindexParams        []VindexParam
	jsonObjectParams    []*JSONObjectParam
	procParam           *ProcParameter
	procParams          []*ProcParameter
	handlerAction       HandlerAction
	handlerCondition    HandlerCondition
	handlerConditions   []HandlerCondition
	signalSet           *SignalSet
	signalSets          []*SignalSet
	signalConditionName SignalConditionName
	partDefs            []*PartitionDefinition
	partitionValueRange *PartitionValueRange
	partitionEngine     *PartitionEngine
	partSpecs           []*PartitionSpec
	selectExpr          SelectExpr
	columns             Columns
	partitions          Partitions
	tableExprs          TableExprs
	tableNames          TableNames
	exprs               []Expr
	values              Values
	valTuple            ValTuple
	orderBy             OrderBy
	updateExprs         UpdateExprs
	setExprs            SetExprs
	selectExprs         *SelectExprs
	tableOptions        TableOptions
	starExpr            StarExpr
	groupBy             *GroupBy

	colKeyOpt              ColumnKeyOption
	referenceAction        ReferenceAction
	procParamMode          ProcParameterMode
	matchAction            MatchAction
	insertAction           InsertAction
	scope                  Scope
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	vexplainType           VExplainType
	intervalType           IntervalType
	lockType               LockType
	referenceDefinition    *ReferenceDefinition
	txAccessModes          []TxAccessMode
	txAccessMode           TxAccessMode
	killType               KillType

	columnStorage ColumnStorage
	columnFormat  ColumnFormat

	boolean         bool
	boolVal         BoolVal
	ignore          Ignore
	partitionOption *PartitionOption
	subPartition    *SubPartition
	partitionByType PartitionByType
	definer         *Definer
	integer         int
	intPtr          *int

	JSONTableExpr      *JSONTableExpr
	jtColumnDefinition *JtColumnDefinition
	jtColumnList       []*JtColumnDefinition
	jtOnResponse       *JtOnResponse
	variables          []*Variable
	variable           *Variable
}

const MULTIPLE_TEXT_LITERAL = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const ANY_SOME = 57349
const SELECT_OPTIONS = 57350
const LEX_ERROR = 57351
const UNION = 57352
const SELECT = 57353
const STREAM = 57354
const VSTREAM = 57355
const INSERT = 57356
const UPDATE = 57357
const DELETE = 57358
const FROM = 57359
const WHERE = 57360
const GROUP = 57361
const HAVING = 57362
const ORDER = 57363
const BY = 57364
const LIMIT = 57365
const OFFSET = 57366
const FOR = 57367
const DISTINCT = 57368
const AS = 57369
const EXISTS = 57370
const ASC = 57371
const DESC = 57372
const INTO = 57373
const DUPLICATE = 57374
const DEFAULT = 57375
const SET = 57376
const LOCK = 57377
const UNLOCK = 57378
const KEYS = 57379
const DO = 57380
const CALL = 57381
const ALL = 57382
const ANY = 57383
const SOME = 57384
const DISTINCTROW = 57385
const PARSER = 57386
const GENERATED = 57387
const ALWAYS = 57388
const OUTFILE = 57389
const S3 = 57390
const DATA = 57391
const LOAD = 57392
const LINES = 57393
const TERMINATED = 57394
const ESCAPED = 57395
const ENCLOSED = 57396
const DUMPFILE = 57397
const CSV = 57398
const HEADER = 57399
const MANIFEST = 57400
const OVERWRITE = 57401
const STARTING = 57402
const OPTIONALLY = 57403
const VALUES = 57404
const LAST_INSERT_ID = 57405
const NEXT = 57406
const VALUE = 57407
const SHARE = 57408
const MODE = 57409
const SQL_NO_CACHE = 57410
const SQL_CACHE = 57411
const SQL_CALC_FOUND_ROWS = 57412
const SQL_SMALL_RESULT = 57413
const SQL_BIG_RESULT = 57414
const HIGH_PRIORITY = 57415
const JOIN = 57416
const STRAIGHT_JOIN = 57417
const LEFT = 57418
const RIGHT = 57419
const INNER = 57420
const OUTER = 57421
const CROSS = 57422
const HASH = 57423
const NATURAL = 57424
const USE = 57425
const FORCE = 57426
const ON = 57427
const USING = 57428
const INPLACE = 57429
const COPY = 57430
const INSTANT = 57431
const ALGORITHM = 57432
const NONE = 57433
const SHARED = 57434
const EXCLUSIVE = 57435
const SUBQUERY_AS_EXPR = 57436
const STRING = 57437
const SQL_BUFFER_RESULT = 57438
const ID = 57439
const AT_ID = 57440
const AT_AT_ID = 57441
const HEX = 57442
const NCHAR_STRING = 57443
const INTEGRAL = 57444
const FLOAT = 57445
const DECIMAL = 57446
const HEXNUM = 57447
const COMMENT = 57448
const COMMENT_KEYWORD = 57449
const BITNUM = 57450
const BIT_LITERAL = 57451
const COMPRESSION = 57452
const VALUE_ARG = 57453
const LIST_ARG = 57454
const OFFSET_ARG = 57455
const JSON_PRETTY = 57456
const JSON_STORAGE_SIZE = 57457
const JSON_STORAGE_FREE = 57458
const JSON_CONTAINS = 57459
const JSON_CONTAINS_PATH = 57460
const JSON_EXTRACT = 57461
const JSON_KEYS = 57462
const JSON_OVERLAPS = 57463
const JSON_SEARCH = 57464
const JSON_VALUE = 57465
const JSON_ARRAYAGG = 57466
const JSON_OBJECTAGG = 57467
const EXTRACT = 57468
const NULL = 57469
const UNKNOWN = 57470
const TRUE = 57471
const FALSE = 57472
const OFF = 57473
const DISCARD = 57474
const IMPORT = 57475
const ENABLE = 57476
const DISABLE = 57477
const TABLESPACE = 57478
const VIRTUAL = 57479
const STORED = 57480
const BOTH = 57481
const LEADING = 57482
const TRAILING = 57483
const KILL = 57484
const TRACE = 57485
const EMPTY_FROM_CLAUSE = 57486
const LOWER_THAN_CHARSET = 57487
const CHARSET = 57488
const UNIQUE = 57489
const KEY = 57490
const EXPRESSION_PREC_SETTER = 57491
const OR = 57492
const XOR = 57493
const AND = 57494
const NOT = 57495
const BETWEEN = 57496
const CASE = 57497
const WHEN = 57498
const THEN = 57499
const ELSE = 57500
const ELSEIF = 57501
const END = 57502
const LE = 57503
const GE = 57504
const NE = 57505
const NULL_SAFE_EQUAL = 57506
const IS = 57507
const LIKE = 57508
const REGEXP = 57509
const RLIKE = 57510
const IN = 57511
const ASSIGNMENT_OPT = 57512
const MEMBER = 57513
const SHIFT_LEFT = 57514
const SHIFT_RIGHT = 57515
const DIV = 57516
const MOD = 57517
const UNARY = 57518
const COLLATE = 57519
const BINARY = 57520
const UNDERSCORE_ARMSCII8 = 57521
const UNDERSCORE_ASCII = 57522
const UNDERSCORE_BIG5 = 57523
const UNDERSCORE_BINARY = 57524
const UNDERSCORE_CP1250 = 57525
const UNDERSCORE_CP1251 = 57526
const UNDERSCORE_CP1256 = 57527
const UNDERSCORE_CP1257 = 57528
const UNDERSCORE_CP850 = 57529
const UNDERSCORE_CP852 = 57530
const UNDERSCORE_CP866 = 57531
const UNDERSCORE_CP932 = 57532
const UNDERSCORE_DEC8 = 57533
const UNDERSCORE_EUCJPMS = 57534
const UNDERSCORE_EUCKR = 57535
const UNDERSCORE_GB18030 = 57536
const UNDERSCORE_GB2312 = 57537
const UNDERSCORE_GBK = 57538
const UNDERSCORE_GEOSTD8 = 57539
const UNDERSCORE_GREEK = 57540
const UNDERSCORE_HEBREW = 57541
const UNDERSCORE_HP8 = 57542
const UNDERSCORE_KEYBCS2 = 57543
const UNDERSCORE_KOI8R = 57544
const UNDERSCORE_KOI8U = 57545
const UNDERSCORE_LATIN1 = 57546
const UNDERSCORE_LATIN2 = 57547
const UNDERSCORE_LATIN5 = 57548
const UNDERSCORE_LATIN7 = 57549
const UNDERSCORE_MACCE = 57550
const UNDERSCORE_MACROMAN = 57551
const UNDERSCORE_SJIS = 57552
const UNDERSCORE_SWE7 = 57553
const UNDERSCORE_TIS620 = 57554
const UNDERSCORE_UCS2 = 57555
const UNDERSCORE_UJIS = 57556
const UNDERSCORE_UTF16 = 57557
const UNDERSCORE_UTF16LE = 57558
const UNDERSCORE_UTF32 = 57559
const UNDERSCORE_UTF8 = 57560
const UNDERSCORE_UTF8MB4 = 57561
const UNDERSCORE_UTF8MB3 = 57562
const INTERVAL = 57563
const WINDOW_EXPR = 57564
const JSON_EXTRACT_OP = 57565
const JSON_UNQUOTE_EXTRACT_OP = 57566
const CREATE = 57567
const ALTER = 57568
const DROP = 57569
const RENAME = 57570
const ANALYZE = 57571
const ADD = 57572
const FLUSH = 57573
const CHANGE = 57574
const MODIFY = 57575
const DEALLOCATE = 57576
const REVERT = 57577
const QUERIES = 57578
const DECLARE = 57579
const FOUND = 57580
const HANDLER = 57581
const CONTINUE = 57582
const EXIT = 57583
const UNDO = 57584
const SQLEXCEPTION = 57585
const SQLSTATE = 57586
const SQLWARNING = 57587
const CONDITION = 57588
const SCHEMA = 57589
const TABLE = 57590
const INDEX = 57591
const VIEW = 57592
const TO = 57593
const IGNORE = 57594
const IF = 57595
const PRIMARY = 57596
const COLUMN = 57597
const SPATIAL = 57598
const FULLTEXT = 57599
const KEY_BLOCK_SIZE = 57600
const CHECK = 57601
const INDEXES = 57602
const ACTION = 57603
const CASCADE = 57604
const CONSTRAINT = 57605
const FOREIGN = 57606
const NO = 57607
const REFERENCES = 57608
const RESTRICT = 57609
const SIGNAL = 57610
const SHOW = 57611
const DESCRIBE = 57612
const EXPLAIN = 57613
const DATE = 57614
const ESCAPE = 57615
const REPAIR = 57616
const OPTIMIZE = 57617
const TRUNCATE = 57618
const COALESCE = 57619
const EXCHANGE = 57620
const REBUILD = 57621
const PARTITIONING = 57622
const REMOVE = 57623
const PREPARE = 57624
const EXECUTE = 57625
const MAXVALUE = 57626
const PARTITION = 57627
const REORGANIZE = 57628
const LESS = 57629
const THAN = 57630
const PROCEDURE = 57631
const TRIGGER = 57632
const VINDEX = 57633
const VINDEXES = 57634
const DIRECTORY = 57635
const NAME = 57636
const UPGRADE = 57637
const STATUS = 57638
const VARIABLES = 57639
const WARNINGS = 57640
const CASCADED = 57641
const DEFINER = 57642
const OPTION = 57643
const SQL = 57644
const UNDEFINED = 57645
const SEQUENCE = 57646
const MERGE = 57647
const TEMPORARY = 57648
const TEMPTABLE = 57649
const INVOKER = 57650
const SECURITY = 57651
const FIRST = 57652
const AFTER = 57653
const LAST = 57654
const VITESS_MIGRATION = 57655
const CANCEL = 57656
const RETRY = 57657
const LAUNCH = 57658
const COMPLETE = 57659
const CLEANUP = 57660
const THROTTLE = 57661
const UNTHROTTLE = 57662
const FORCE_CUTOVER = 57663
const CUTOVER_THRESHOLD = 57664
const EXPIRE = 57665
const RATIO = 57666
const POSTPONE = 57667
const VITESS_THROTTLER = 57668
const BEGIN = 57669
const START = 57670
const TRANSACTION = 57671
const COMMIT = 57672
const ROLLBACK = 57673
const SAVEPOINT = 57674
const RELEASE = 57675
const WORK = 57676
const CONSISTENT = 57677
const SNAPSHOT = 57678
const UNRESOLVED = 57679
const TRANSACTIONS = 57680
const BIT = 57681
const TINYINT = 57682
const SMALLINT = 57683
const MEDIUMINT = 57684
const INT = 57685
const INTEGER = 57686
const BIGINT = 57687
const INTNUM = 57688
const REAL = 57689
const DOUBLE = 57690
const FLOAT_TYPE = 57691
const FLOAT4_TYPE = 57692
const FLOAT8_TYPE = 57693
const DECIMAL_TYPE = 57694
const NUMERIC = 57695
const TIME = 57696
const TIMESTAMP = 57697
const DATETIME = 57698
const YEAR = 57699
const CHAR = 57700
const VARCHAR = 57701
const BOOL = 57702
const CHARACTER = 57703
const VARBINARY = 57704
const NCHAR = 57705
const TEXT = 57706
const TINYTEXT = 57707
const MEDIUMTEXT = 57708
const LONGTEXT = 57709
const BLOB = 57710
const TINYBLOB = 57711
const MEDIUMBLOB = 57712
const LONGBLOB = 57713
const JSON = 57714
const JSON_SCHEMA_VALID = 57715
const JSON_SCHEMA_VALIDATION_REPORT = 57716
const ENUM = 57717
const GEOMETRY = 57718
const POINT = 57719
const LINESTRING = 57720
const POLYGON = 57721
const GEOMCOLLECTION = 57722
const GEOMETRYCOLLECTION = 57723
const MULTIPOINT = 57724
const MULTILINESTRING = 57725
const MULTIPOLYGON = 57726
const ASCII = 57727
const UNICODE = 57728
const VECTOR = 57729
const NULLX = 57730
const AUTO_INCREMENT = 57731
const APPROXNUM = 57732
const SIGNED = 57733
const UNSIGNED = 57734
const ZEROFILL = 57735
const PURGE = 57736
const BEFORE = 57737
const CODE = 57738
const COLLATION = 57739
const COLUMNS = 57740
const DATABASES = 57741
const ENGINES = 57742
const EVENT = 57743
const EXTENDED = 57744
const FIELDS = 57745
const FULL = 57746
const FUNCTION = 57747
const GTID_EXECUTED = 57748
const KEYSPACES = 57749
const OPEN = 57750
const PLUGINS = 57751
const PRIVILEGES = 57752
const PROCESSLIST = 57753
const SCHEMAS = 57754
const TABLES = 57755
const TRIGGERS = 57756
const USER = 57757
const VGTID_EXECUTED = 57758
const VITESS_KEYSPACES = 57759
const VITESS_METADATA = 57760
const VITESS_MIGRATIONS = 57761
const VITESS_REPLICATION_STATUS = 57762
const VITESS_SHARDS = 57763
const VITESS_TABLETS = 57764
const VITESS_TARGET = 57765
const VSCHEMA = 57766
const VITESS_THROTTLED_APPS = 57767
const NAMES = 57768
const GLOBAL = 57769
const SESSION = 57770
const ISOLATION = 57771
const LEVEL = 57772
const READ = 57773
const WRITE = 57774
const ONLY = 57775
const REPEATABLE = 57776
const COMMITTED = 57777
const UNCOMMITTED = 57778
const SERIALIZABLE = 57779
const CLASS_ORIGIN = 57780
const SUBCLASS_ORIGIN = 57781
const MESSAGE_TEXT = 57782
const MYSQL_ERRNO = 57783
const CONSTRAINT_CATALOG = 57784
const CONSTRAINT_SCHEMA = 57785
const CONSTRAINT_NAME = 57786
const CATALOG_NAME = 57787
const SCHEMA_NAME = 57788
const TABLE_NAME = 57789
const COLUMN_NAME = 57790
const CURSOR_NAME = 57791
const ADDDATE = 57792
const CURRENT_TIMESTAMP = 57793
const DATABASE = 57794
const CURRENT_DATE = 57795
const CURDATE = 57796
const DATE_ADD = 57797
const DATE_SUB = 57798
const NOW = 57799
const SUBDATE = 57800
const CURTIME = 57801
const CURRENT_TIME = 57802
const LOCALTIME = 57803
const LOCALTIMESTAMP = 57804
const CURRENT_USER = 57805
const UTC_DATE = 57806
const UTC_TIME = 57807
const UTC_TIMESTAMP = 57808
const SYSDATE = 57809
const DAY = 57810
const DAY_HOUR = 57811
const DAY_MICROSECOND = 57812
const DAY_MINUTE = 57813
const DAY_SECOND = 57814
const HOUR = 57815
const HOUR_MICROSECOND = 57816
const HOUR_MINUTE = 57817
const HOUR_SECOND = 57818
const MICROSECOND = 57819
const MINUTE = 57820
const MINUTE_MICROSECOND = 57821
const MINUTE_SECOND = 57822
const MONTH = 57823
const QUARTER = 57824
const SECOND = 57825
const SECOND_MICROSECOND = 57826
const YEAR_MONTH = 57827
const WEEK = 57828
const SQL_TSI_DAY = 57829
const SQL_TSI_WEEK = 57830
const SQL_TSI_HOUR = 57831
const SQL_TSI_MINUTE = 57832
const SQL_TSI_MONTH = 57833
const SQL_TSI_QUARTER = 57834
const SQL_TSI_SECOND = 57835
const SQL_TSI_MICROSECOND = 57836
const SQL_TSI_YEAR = 57837
const REPLACE = 57838
const CONVERT = 57839
const CAST = 57840
const SUBSTR = 57841
const SUBSTRING = 57842
const MID = 57843
const SEPARATOR = 57844
const TIMESTAMPADD = 57845
const TIMESTAMPDIFF = 57846
const WEIGHT_STRING = 57847
const LTRIM = 57848
const RTRIM = 57849
const TRIM = 57850
const JSON_ARRAY = 57851
const JSON_OBJECT = 57852
const JSON_QUOTE = 57853
const JSON_DEPTH = 57854
const JSON_TYPE = 57855
const JSON_LENGTH = 57856
const JSON_VALID = 57857
const JSON_ARRAY_APPEND = 57858
const JSON_ARRAY_INSERT = 57859
const JSON_INSERT = 57860
const JSON_MERGE = 57861
const JSON_MERGE_PATCH = 57862
const JSON_MERGE_PRESERVE = 57863
const JSON_REMOVE = 57864
const JSON_REPLACE = 57865
const JSON_SET = 57866
const JSON_UNQUOTE = 57867
const COUNT = 57868
const AVG = 57869
const MAX = 57870
const MIN = 57871
const SUM = 57872
const GROUP_CONCAT = 57873
const BIT_AND = 57874
const BIT_OR = 57875
const BIT_XOR = 57876
const STD = 57877
const STDDEV = 57878
const STDDEV_POP = 57879
const STDDEV_SAMP = 57880
const VAR_POP = 57881
const VAR_SAMP = 57882
const VARIANCE = 57883
const ANY_VALUE = 57884
const REGEXP_INSTR = 57885
const REGEXP_LIKE = 57886
const REGEXP_REPLACE = 57887
const REGEXP_SUBSTR = 57888
const ExtractValue = 57889
const UpdateXML = 57890
const GET_LOCK = 57891
const RELEASE_LOCK = 57892
const RELEASE_ALL_LOCKS = 57893
const IS_FREE_LOCK = 57894
const IS_USED_LOCK = 57895
const LOCATE = 57896
const POSITION = 57897
const ST_GeometryCollectionFromText = 57898
const ST_GeometryFromText = 57899
const ST_LineStringFromText = 57900
const ST_MultiLineStringFromText = 57901
const ST_MultiPointFromText = 57902
const ST_MultiPolygonFromText = 57903
const ST_PointFromText = 57904
const ST_PolygonFromText = 57905
const ST_GeometryCollectionFromWKB = 57906
const ST_GeometryFromWKB = 57907
const ST_LineStringFromWKB = 57908
const ST_MultiLineStringFromWKB = 57909
const ST_MultiPointFromWKB = 57910
const ST_MultiPolygonFromWKB = 57911
const ST_PointFromWKB = 57912
const ST_PolygonFromWKB = 57913
const ST_AsBinary = 57914
const ST_AsText = 57915
const ST_Dimension = 57916
const ST_Envelope = 57917
const ST_IsSimple = 57918
const ST_IsEmpty = 57919
const ST_GeometryType = 57920
const ST_X = 57921
const ST_Y = 57922
const ST_Latitude = 57923
const ST_Longitude = 57924
const ST_EndPoint = 57925
const ST_IsClosed = 57926
const ST_Length = 57927
const ST_NumPoints = 57928
const ST_StartPoint = 57929
const ST_PointN = 57930
const ST_Area = 57931
const ST_Centroid = 57932
const ST_ExteriorRing = 57933
const ST_InteriorRingN = 57934
const ST_NumInteriorRings = 57935
const ST_NumGeometries = 57936
const ST_GeometryN = 57937
const ST_LongFromGeoHash = 57938
const ST_PointFromGeoHash = 57939
const ST_LatFromGeoHash = 57940
const ST_GeoHash = 57941
const ST_AsGeoJSON = 57942
const ST_GeomFromGeoJSON = 57943
const MATCH = 57944
const AGAINST = 57945
const BOOLEAN = 57946
const LANGUAGE = 57947
const WITH = 57948
const QUERY = 57949
const EXPANSION = 57950
const WITHOUT = 57951
const VALIDATION = 57952
const ROLLUP = 57953
const UNUSED = 57954
const ARRAY = 57955
const BYTE = 57956
const CUME_DIST = 57957
const DESCRIPTION = 57958
const DENSE_RANK = 57959
const EMPTY = 57960
const EXCEPT = 57961
const FIRST_VALUE = 57962
const GROUPING = 57963
const GROUPS = 57964
const JSON_TABLE = 57965
const LAG = 57966
const LAST_VALUE = 57967
const LATERAL = 57968
const LEAD = 57969
const NTH_VALUE = 57970
const NTILE = 57971
const OF = 57972
const OVER = 57973
const PERCENT_RANK = 57974
const RANK = 57975
const RECURSIVE = 57976
const ROW_NUMBER = 57977
const SYSTEM = 57978
const WINDOW = 57979
const ACTIVE = 57980
const ADMIN = 57981
const AUTOEXTEND_SIZE = 57982
const BUCKETS = 57983
const CLONE = 57984
const COLUMN_FORMAT = 57985
const COMPONENT = 57986
const DEFINITION = 57987
const ENFORCED = 57988
const ENGINE_ATTRIBUTE = 57989
const EXCLUDE = 57990
const FOLLOWING = 57991
const GET_MASTER_PUBLIC_KEY = 57992
const GET_SOURCE_PUBLIC_KEY = 57993
const HISTOGRAM = 57994
const HISTORY = 57995
const INACTIVE = 57996
const INVISIBLE = 57997
const LOCKED = 57998
const MASTER_COMPRESSION_ALGORITHMS = 57999
const MASTER_PUBLIC_KEY_PATH = 58000
const MASTER_TLS_CIPHERSUITES = 58001
const MASTER_ZSTD_COMPRESSION_LEVEL = 58002
const NESTED = 58003
const NETWORK_NAMESPACE = 58004
const NOWAIT = 58005
const NULLS = 58006
const OJ = 58007
const OLD = 58008
const OPTIONAL = 58009
const ORDINALITY = 58010
const ORGANIZATION = 58011
const OTHERS = 58012
const PARTIAL = 58013
const PATH = 58014
const PERSIST = 58015
const PERSIST_ONLY = 58016
const PRECEDING = 58017
const PRIVILEGE_CHECKS_USER = 58018
const PROCESS = 58019
const RANDOM = 58020
const REFERENCE = 58021
const REQUIRE_ROW_FORMAT = 58022
const RESOURCE = 58023
const RESPECT = 58024
const RESTART = 58025
const RETAIN = 58026
const REUSE = 58027
const ROLE = 58028
const SECONDARY = 58029
const SECONDARY_ENGINE = 58030
const SECONDARY_ENGINE_ATTRIBUTE = 58031
const SECONDARY_LOAD = 58032
const SECONDARY_UNLOAD = 58033
const SIMPLE = 58034
const SKIP = 58035
const SOURCE_COMPRESSION_ALGORITHMS = 58036
const SOURCE_PUBLIC_KEY_PATH = 58037
const SOURCE_TLS_CIPHERSUITES = 58038
const SOURCE_ZSTD_COMPRESSION_LEVEL = 58039
const SRID = 58040
const THREAD_PRIORITY = 58041
const TIES = 58042
const UNBOUNDED = 58043
const VCPU = 58044
const VISIBLE = 58045
const RETURNING = 58046
const MANUAL = 58047
const PARALLEL = 58048
const QUALIFY = 58049
const TABLESAMPLE = 58050
const OUT = 58051
const INOUT = 58052
const FORMAT_BYTES = 58053
const FORMAT_PICO_TIME = 58054
const PS_CURRENT_THREAD_ID = 58055
const PS_THREAD_ID = 58056
const GTID_SUBSET = 58057
const GTID_SUBTRACT = 58058
const WAIT_FOR_EXECUTED_GTID_SET = 58059
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 58060
const FORMAT = 58061
const TREE = 58062
const VITESS = 58063
const TRADITIONAL = 58064
const VTEXPLAIN = 58065
const VEXPLAIN = 58066
const PLAN = 58067
const LOCAL = 58068
const LOW_PRIORITY = 58069
const NO_WRITE_TO_BINLOG = 58070
const LOGS = 58071
const ERROR = 58072
const GENERAL = 58073
const HOSTS = 58074
const OPTIMIZER_COSTS = 58075
const USER_RESOURCES = 58076
const SLOW = 58077
const CHANNEL = 58078
const RELAY = 58079
const EXPORT = 58080
const CURRENT = 58081
const ROW = 58082
const ROWS = 58083
const AVG_ROW_LENGTH = 58084
const CONNECTION = 58085
const CHECKSUM = 58086
const DELAY_KEY_WRITE = 58087
const ENCRYPTION = 58088
const ENGINE = 58089
const INSERT_METHOD = 58090
const MAX_ROWS = 58091
const MIN_ROWS = 58092
const PACK_KEYS = 58093
const PASSWORD = 58094
const FIXED = 58095
const DYNAMIC = 58096
const COMPRESSED = 58097
const REDUNDANT = 58098
const COMPACT = 58099
const ROW_FORMAT = 58100
const STATS_AUTO_RECALC = 58101
const STATS_PERSISTENT = 58102
const STATS_SAMPLE_PAGES = 58103
const STORAGE = 58104
const MEMORY = 58105
const DISK = 58106
const PARTITIONS = 58107
const LINEAR = 58108
const RANGE = 58109
const LIST = 58110
const SUBPARTITION = 58111
const SUBPARTITIONS = 58112
const HASHFUNC = 58113

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MULTIPLE_TEXT_LITERAL",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"ANY_SOME",
	"SELECT_OPTIONS",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"ALL",
	"ANY",
	"SOME",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"HIGH_PRIORITY",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"HASH",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"SQL_BUFFER_RESULT",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"JSON_ARRAYAGG",
	"JSON_OBJECTAGG",
	"EXTRACT",
	"NULL",
	"UNKNOWN",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"KILL",
	"TRACE",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"ELSEIF",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"MEMBER",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"DECLARE",
	"FOUND",
	"HANDLER",
	"CONTINUE",
	"EXIT",
	"UNDO",
	"SQLEXCEPTION",
	"SQLSTATE",
	"SQLWARNING",
	"CONDITION",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SIGNAL",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"FORCE_CUTOVER",
	"CUTOVER_THRESHOLD",
	"EXPIRE",
	"RATIO",
	"POSTPONE",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"UNRESOLVED",
	"TRANSACTIONS",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"VECTOR",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CLASS_ORIGIN",
	"SUBCLASS_ORIGIN",
	"MESSAGE_TEXT",
	"MYSQL_ERRNO",
	"CONSTRAINT_CATALOG",
	"CONSTRAINT_SCHEMA",
	"CONSTRAINT_NAME",
	"CATALOG_NAME",
	"SCHEMA_NAME",
	"TABLE_NAME",
	"COLUMN_NAME",
	"CURSOR_NAME",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_HOUR",
	"SQL_TSI_MINUTE",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_SECOND",
	"SQL_TSI_MICROSECOND",
	"SQL_TSI_YEAR",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"MID",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"ANY_VALUE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ROLLUP",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"GET_SOURCE_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SOURCE_COMPRESSION_ALGORITHMS",
	"SOURCE_PUBLIC_KEY_PATH",
	"SOURCE_TLS_CIPHERSUITES",
	"SOURCE_ZSTD_COMPRESSION_LEVEL",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"MANUAL",
	"PARALLEL",
	"QUALIFY",
	"TABLESAMPLE",
	"OUT",
	"INOUT",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASHFUNC",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int16{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 4,
	15, 110,
	16, 110,
	-2, 6,
	-1, 57,
	1, 225,
	789, 225,
	-2, 233,
	-1, 58,
	149, 233,
	193, 233,
	378, 233,
	-2, 593,
	-1, 66,
	37, 857,
	266, 857,
	277, 857,
	313, 871,
	314, 871,
	-2, 859,
	-1, 71,
	268, 895,
	-2, 893,
	-1, 132,
	1, 226,
	789, 226,
	-2, 233,
	-1, 143,
	150, 478,
	271, 478,
	-2, 582,
	-1, 162,
	149, 233,
	193, 233,
	378, 233,
	-2, 602,
	-1, 780,
	178, 102,
	-2, 104,
	-1, 989,
	95, 1753,
	-2, 1573,
	-1, 990,
	95, 1754,
	238, 1758,
	-2, 1574,
	-1, 991,
	238, 1757,
	-2, 103,
	-1, 1077,
	64, 969,
	-2, 982,
	-1, 1082,
	265, 1736,
	-2, 1643,
	-1, 1164,
	276, 1200,
	281, 1200,
	-2, 489,
	-1, 1252,
	1, 650,
	789, 650,
	-2, 233,
	-1, 1579,
	238, 1758,
	-2, 1574,
	-1, 1792,
	64, 970,
	-2, 986,
	-1, 1793,
	64, 971,
	-2, 987,
	-1, 1870,
	149, 233,
	193, 233,
	378, 233,
	-2, 528,
	-1, 1947,
	150, 478,
	271, 478,
	-2, 582,
	-1, 1956,
	276, 1201,
	281, 1201,
	-2, 490,
	-1, 2405,
	238, 1762,
	-2, 1756,
	-1, 2406,
	238, 1758,
	-2, 1754,
	-1, 2524,
	149, 233,
	193, 233,
	378, 233,
	-2, 529,
	-1, 2531,
	27, 254,
	-2, 256,
	-1, 2990,
	95, 1701,
	-2, 962,
	-1, 3013,
	86, 160,
	96, 160,
	-2, 1049,
	-1, 3078,
	764, 774,
	-2, 748,
	-1, 3314,
	54, 1693,
	-2, 1687,
	-1, 3643,
	97, 1634,
	-2, 1639,
	-1, 4194,
	764, 774,
	-2, 762,
	-1, 4234,
	15, 110,
	16, 110,
	165, 91,
	-2, 883,
	-1, 4291,
	165, 92,
	-2, 110,
	-1, 4311,
	98, 706,
	104, 706,
	114, 706,
	195, 706,
	196, 706,
	197, 706,
	198, 706,
	199, 706,
	200, 706,
	201, 706,
	202, 706,
	203, 706,
	204, 706,
	205, 706,
	206, 706,
	207, 706,
	208, 706,
	209, 706,
	210, 706,
	211, 706,
	212, 706,
	213, 706,
	214, 706,
	215, 706,
	216, 706,
	217, 706,
	218, 706,
	219, 706,
	220, 706,
	221, 706,
	222, 706,
	223, 706,
	224, 706,
	225, 706,
	226, 706,
	227, 706,
	228, 706,
	229, 706,
	230, 706,
	231, 706,
	232, 706,
	233, 706,
	234, 706,
	235, 706,
	236, 706,
	-2, 2161,
	-1, 4384,
	163, 97,
	165, 97,
	-2, 110,
	-1, 4468,
	165, 96,
	-2, 110,
	-1, 4474,
	15, 110,
	16, 110,
	-2, 101,
}

const yyPrivate = 57344

const yyLast = 61306

var yyAct = [...]int16{
	1005, 3822, 3823, 3821, 4292, 92, 4431, 953, 4293, 4426,
	4291, 4415, 4444, 4176, 4432, 954, 958, 812, 3451, 4273,
	4361, 46, 2521, 4309, 4362, 4389, 3601, 1873, 1322, 2078,
	3771, 4226, 3465, 1000, 3376, 3383, 2434, 992, 4433, 4438,
	2199, 4153, 1320, 2211, 4076, 3420, 2581, 3327, 3864, 3429,
	3434, 3431, 3430, 3428, 3433, 3432, 3759, 4151, 3165, 3250,
	3391, 2591, 2982, 3449, 2475, 784, 9, 2492, 3448, 3139,
	993, 3641, 3164, 129, 2495, 2986, 3678, 90, 3325, 3331,
	2969, 2436, 3631, 1196, 3315, 778, 2560, 3328, 779, 3048,
	3472, 1075, 3121, 92, 3075, 2954, 2565, 1134, 3050, 3655,
	3049, 3875, 2622, 1930, 2509, 2996, 2496, 1074, 47, 1078,
	2975, 2953, 1109, 2943, 1075, 2497, 1102, 1072, 45, 2454,
	2927, 2195, 171, 2391, 3111, 2359, 2600, 2358, 1972, 1144,
	1104, 2233, 2145, 157, 2484, 2567, 3041, 1154, 1159, 1954,
	781, 1862, 3015, 1842, 1007, 1810, 1172, 1827, 107, 1101,
	2463, 1773, 2499, 1146, 1592, 3666, 955, 1006, 2239, 3330,
	2170, 2159, 1517, 111, 112, 1500, 2073, 1961, 1141, 1138,
	1081, 1165, 1162, 2556, 1142, 1160, 794, 2476, 1161, 1861,
	789, 1847, 1119, 1121, 2234, 1085, 3859, 1097, 1795, 2557,
	2247, 2266, 1245, 2925, 106, 114, 1098, 1575, 1551, 135,
	14, 1080, 13, 1310, 3851, 782, 12, 2136, 133, 1296,
	2086, 1079, 134, 3602, 140, 141, 1114, 1256, 1250, 99,
	1083, 113, 1601, 1596, 1070, 175, 4289, 1318, 1946, 771,
	6, 4416, 1113, 2593, 2594, 2595, 2593, 3760, 3417, 3098,
	3097, 1244, 3066, 1198, 714, 2637, 3752, 1069, 89, 4333,
	1829, 1267, 3129, 3717, 3130, 1089, 1215, 1216, 1217, 4206,
	1220, 1221, 1222, 1223, 774, 1135, 1226, 1227, 1228, 1229,
	1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1240, 1241, 1242, 136, 4210, 1201, 2038, 142, 2152, 2431,
	2432, 1176, 4205, 3826, 2151, 2150, 2149, 3826, 2148, 1087,
	4, 1129, 1090, 2147, 1128, 2117, 4, 772, 4184, 3068,
	4211, 1071, 756, 1209, 1151, 1825, 1266, 1175, 711, 3063,
	712, 2923, 2692, 3311, 2971, 4365, 1832, 3254, 2626, 3088,
	1830, 4463, 1150, 1103, 4360, 4420, 1202, 1205, 1206, 1073,
	4337, 1149, 3605, 4406, 4335, 1148, 3604, 3091, 118, 119,
	120, 4154, 123, 1218, 2472, 2471, 1833, 1806, 136, 199,
	1831, 4419, 706, 3439, 2888, 1514, 4336, 2157, 1511, 3439,
	4334, 1127, 1131, 957, 769, 770, 2625, 3491, 4288, 4072,
	4071, 750, 3436, 1068, 1063, 1064, 1065, 1066, 1200, 3765,
	3825, 1077, 3766, 1057, 3825, 1082, 1199, 4375, 995, 1058,
	1009, 1010, 1011, 996, 4206, 91, 997, 998, 4082, 999,
	3866, 1127, 1131, 957, 2699, 101, 3359, 4331, 3004, 3005,
	750, 1116, 1117, 3783, 3437, 1152, 136, 1012, 1013, 1530,
	3437, 1502, 1531, 3772, 1532, 1533, 1057, 4270, 2582, 2619,
	4081, 995, 1058, 1009, 1010, 1011, 996, 2204, 4314, 997,
	998, 3517, 999, 3443, 4274, 2465, 103, 2924, 1534, 3443,
	750, 2998, 3003, 3004, 3005, 3000, 3782, 3001, 3002, 3006,
	1012, 1013, 3679, 3680, 1513, 3372, 2998, 3003, 3004, 3005,
	3000, 3128, 3001, 3002, 3006, 2697, 3373, 3374, 2696, 101,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043,
	1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053,
	1054, 1055, 4278, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
	1051, 1052, 1053, 1054, 1055, 4278, 3024, 2576, 2624, 3023,
	3440, 1512, 3025, 2515, 3460, 2433, 3440, 4177, 4319, 91,
	3109, 1249, 4366, 1257, 1258, 2516, 2517, 2275, 2129, 2130,
	1286, 2570, 91, 91, 1061, 93, 1501, 1863, 4317, 1864,
	751, 1060, 2985, 4367, 2082, 3036, 3499, 1120, 4324, 4325,
	2963, 1315, 2964, 2534, 2533, 1495, 1261, 3460, 3393, 3394,
	1291, 1292, 1274, 1260, 1274, 4318, 3497, 1275, 1287, 1275,
	2990, 2978, 2979, 2989, 1280, 1273, 2690, 1272, 1552, 751,
	1262, 2128, 764, 103, 2990, 3469, 2231, 2989, 2132, 768,
	3473, 3467, 762, 3112, 3110, 1777, 3461, 3462, 2660, 3076,
	2693, 3488, 2694, 101, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1561, 1560, 1562, 1563, 2601, 101, 101, 3069, 751,
	4391, 4392, 4393, 4394, 4395, 4396, 4397, 4398, 4399, 4400,
	4401, 4402, 2455, 4124, 3652, 4125, 2949, 2644, 2267, 3461,
	3462, 2453, 3297, 2269, 1130, 1124, 1122, 2274, 2270, 3739,
	3298, 2271, 2272, 2273, 2455, 1821, 2268, 2276, 2277, 2278,
	2279, 2280, 2281, 2282, 2283, 2284, 1314, 2665, 1288, 2666,
	1293, 2667, 1313, 2028, 1281, 1319, 3064, 1319, 1319, 3392,
	1294, 1307, 2642, 3470, 1130, 1124, 1122, 3253, 2083, 3468,
	1494, 3395, 1312, 2645, 1289, 1290, 2569, 2223, 2212, 2213,
	2214, 2215, 2225, 2216, 2217, 2218, 2230, 2226, 2219, 2220,
	2227, 2228, 2229, 2221, 2222, 2224, 1859, 1295, 2029, 750,
	2030, 1253, 3116, 3754, 3753, 2641, 1248, 1075, 1576, 1581,
	1582, 2640, 1585, 1587, 1588, 1589, 1590, 1591, 2643, 1594,
	1595, 1597, 1597, 2668, 1597, 1597, 1602, 1602, 1602, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705,
	1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715,
	1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725,
	1726, 1727, 1728, 1586, 1308, 4183, 3067, 1729, 1259, 1731,
	1732, 1733, 1734, 1735, 1577, 3186, 4229, 1829, 1491, 3868,
	3867, 1602, 1602, 1602, 1602, 1602, 1602, 1270, 3090, 1276,
	1277, 1278, 1279, 1573, 1492, 1493, 1742, 1743, 1744, 1745,
	1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755,
	3715, 3716, 3718, 1316, 1317, 1153, 1569, 1570, 1571, 1572,
	3589, 1303, 2961, 1305, 750, 3781, 1583, 3824, 3070, 1518,
	750, 3824, 2698, 4276, 1123, 750, 3089, 100, 751, 1174,
	1174, 1225, 1766, 2040, 2039, 2041, 2042, 2043, 1518, 3653,
	1224, 4056, 1860, 1251, 3750, 1598, 1185, 1599, 1600, 1603,
	1604, 1271, 1302, 1304, 1155, 1251, 1183, 101, 1156, 2479,
	2604, 4275, 3830, 2493, 1123, 2479, 4276, 1770, 1156, 1219,
	1194, 1193, 1192, 1776, 1191, 3361, 1190, 1189, 1188, 1187,
	1510, 1182, 1075, 1780, 1939, 1195, 1075, 1566, 1566, 2697,
	3441, 3442, 1075, 1081, 2623, 3395, 3441, 3442, 1784, 4464,
	1139, 1167, 1788, 3445, 4275, 1168, 3120, 1139, 1074, 3445,
	3415, 1137, 1139, 1960, 94, 1817, 1204, 4448, 1820, 2058,
	2999, 4473, 1167, 2464, 2573, 2074, 1203, 3489, 1115, 3117,
	2630, 1284, 2629, 3644, 1767, 2999, 1174, 2070, 1528, 3301,
	1211, 1503, 1212, 2462, 1173, 1173, 3187, 2652, 2647, 2649,
	2650, 2648, 2653, 2654, 2655, 2656, 92, 1528, 2651, 3100,
	4323, 2928, 2930, 1081, 1300, 2574, 1174, 2948, 1301, 2461,
	1824, 3749, 46, 2572, 2460, 3086, 2456, 2071, 1306, 1265,
	705, 4349, 4437, 4348, 3133, 2714, 3281, 3279, 4461, 3108,
	4329, 2057, 3107, 1736, 1737, 1738, 1739, 1740, 1741, 2621,
	1768, 1786, 1787, 4321, 1767, 111, 112, 2575, 4322, 1186,
	3262, 100, 1567, 1568, 4170, 1299, 3706, 1249, 1243, 1184,
	3674, 2571, 1933, 1774, 100, 100, 3020, 2981, 2900, 1249,
	1782, 1814, 2207, 1081, 1959, 1851, 1730, 114, 1816, 1815,
	1264, 3261, 1828, 751, 3140, 1936, 1937, 1938, 132, 751,
	2976, 1173, 1524, 713, 751, 1516, 2522, 1167, 1170, 1171,
	1566, 1139, 1563, 4189, 1174, 1164, 1168, 2477, 2478, 2248,
	1952, 1524, 3123, 2477, 2478, 3371, 2725, 3122, 1806, 1534,
	2175, 1173, 1821, 1247, 1808, 1546, 2249, 1163, 1262, 3123,
	1311, 1297, 2087, 3379, 3122, 2176, 1564, 1565, 2174, 1771,
	1093, 1783, 1945, 2080, 4440, 1071, 2723, 2771, 1785, 4197,
	1811, 1813, 2013, 2014, 2005, 1823, 2722, 1319, 2019, 2020,
	2023, 1974, 1964, 1975, 1197, 1977, 1979, 1962, 1962, 1983,
	1985, 1987, 1989, 1991, 1818, 1174, 3745, 3665, 4304, 3142,
	1073, 1269, 1966, 1856, 1857, 3380, 2466, 2929, 2054, 1963,
	2055, 1174, 2063, 2056, 2060, 2061, 2059, 2064, 2065, 2066,
	1283, 1925, 4446, 2062, 2725, 4447, 1533, 4445, 2141, 2001,
	3382, 1285, 2004, 1531, 2006, 1532, 1533, 2067, 126, 1173,
	1865, 1210, 1943, 1941, 4467, 1207, 1789, 1806, 1955, 1534,
	3377, 4344, 3160, 4427, 1246, 4455, 1942, 1805, 2240, 1534,
	2009, 2053, 1558, 1559, 1561, 1560, 1562, 1563, 198, 2620,
	3393, 3394, 2959, 3884, 3152, 3151, 3150, 3378, 2240, 3144,
	2734, 3148, 1248, 3143, 4376, 3141, 4368, 3723, 2246, 3722,
	3146, 137, 2608, 1969, 1248, 1174, 2075, 2076, 1968, 3145,
	1958, 2618, 2613, 1531, 2613, 1532, 1533, 180, 2616, 1252,
	1173, 1298, 2088, 3384, 1185, 1177, 1167, 127, 3147, 3149,
	1179, 1183, 1150, 4240, 1180, 1178, 1173, 1532, 1533, 1534,
	4162, 1149, 1167, 1170, 1171, 1148, 1139, 3707, 101, 1088,
	1164, 1168, 4450, 2485, 2486, 2617, 1181, 2615, 136, 4370,
	4465, 1534, 2089, 2090, 3029, 2048, 3038, 1268, 2173, 1806,
	198, 1319, 1319, 2093, 4064, 1100, 2094, 2245, 177, 2393,
	4063, 178, 4241, 2101, 2102, 2103, 2046, 92, 2395, 4163,
	92, 2115, 1531, 137, 1532, 1533, 2163, 2164, 2704, 2705,
	3778, 3392, 3779, 46, 1004, 4054, 46, 197, 3795, 180,
	3794, 3730, 2091, 3395, 2114, 4381, 1806, 3729, 1534, 2095,
	1173, 2097, 2098, 2099, 2100, 1177, 1167, 3719, 2104, 1531,
	1179, 1532, 1533, 3418, 1180, 1178, 3411, 2047, 4469, 3046,
	2116, 1523, 1520, 1521, 1522, 1527, 1529, 1526, 3045, 1525,
	1009, 1010, 1011, 2137, 756, 1534, 2137, 4466, 2045, 1519,
	1523, 1520, 1521, 1522, 1527, 1529, 1526, 3044, 1525, 2579,
	177, 2049, 1531, 178, 1532, 1533, 2033, 1531, 1519, 1532,
	1533, 2202, 2202, 1100, 1766, 2200, 2200, 1552, 2032, 2203,
	1548, 2761, 1549, 2031, 2021, 2015, 2721, 2012, 1534, 197,
	2011, 2010, 1531, 1534, 1532, 1533, 2165, 1550, 1564, 1565,
	1547, 4346, 1981, 1553, 1554, 1555, 1556, 1557, 1558, 1559,
	1561, 1560, 1562, 1563, 1552, 1762, 3132, 1781, 1534, 3309,
	1760, 1099, 1100, 1497, 181, 1758, 3381, 1859, 1759, 1757,
	2035, 1761, 3712, 187, 756, 1081, 4379, 1806, 2286, 4404,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1561, 1560, 1562,
	1563, 1556, 1557, 1558, 1559, 1561, 1560, 1562, 1563, 3027,
	2178, 756, 2180, 2181, 2182, 2183, 2184, 2185, 2187, 2189,
	2190, 2191, 2192, 2193, 2194, 2171, 1767, 2140, 1806, 2138,
	2140, 1835, 2138, 2139, 1935, 4417, 2139, 2142, 2122, 2123,
	2589, 2235, 2588, 1531, 2172, 1532, 1533, 1531, 4369, 1532,
	1533, 4192, 2034, 1577, 4356, 1806, 3162, 1531, 2392, 1532,
	1533, 2587, 1531, 2586, 1532, 1533, 181, 2177, 4191, 1534,
	1094, 2241, 1552, 1534, 4166, 187, 2179, 4165, 1095, 2405,
	2404, 1836, 4164, 1534, 1531, 4059, 1532, 1533, 1534, 2585,
	1594, 2584, 1768, 2403, 2206, 2775, 2310, 2302, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1561, 1560, 1562, 1563, 4044,
	1534, 1935, 1806, 1806, 172, 3506, 4086, 2250, 2251, 2252,
	2253, 117, 4043, 1099, 1100, 1552, 3883, 2713, 2394, 4284,
	1806, 2264, 116, 3881, 115, 2285, 1552, 1530, 1806, 2300,
	1554, 1555, 1556, 1557, 1558, 1559, 1561, 1560, 1562, 1563,
	2470, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1561, 1560,
	1562, 1563, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1561,
	1560, 1562, 1563, 1531, 3791, 1532, 1533, 2501, 1935, 4269,
	2773, 2402, 108, 1765, 2408, 2409, 1531, 1806, 1532, 1533,
	1530, 1806, 109, 2503, 117, 1935, 4250, 1935, 4246, 1534,
	2405, 2490, 1764, 111, 112, 116, 172, 115, 1806, 4144,
	1806, 4185, 1534, 1763, 2403, 110, 2531, 3763, 4182, 2383,
	2384, 2385, 2386, 2387, 2450, 111, 112, 3727, 2438, 3711,
	3385, 4067, 1806, 4091, 3389, 3474, 2407, 4282, 1806, 2410,
	2411, 3471, 3388, 1531, 1098, 1532, 1533, 1935, 4055, 4090,
	1144, 3763, 1806, 4048, 1806, 2444, 3414, 2445, 1553, 1554,
	1555, 1556, 1557, 1558, 1559, 1561, 1560, 1562, 1563, 1534,
	2541, 2542, 2543, 1935, 3761, 2428, 3390, 1089, 1144, 2458,
	3413, 1806, 2426, 4280, 1806, 3386, 2613, 1806, 4047, 2526,
	3387, 3113, 4137, 1806, 1531, 3055, 1532, 1533, 4135, 1806,
	3671, 1806, 2535, 2451, 2536, 2537, 2538, 2539, 2540, 3042,
	2507, 3016, 2544, 2525, 4132, 1806, 2855, 1806, 2546, 1762,
	1534, 2548, 2549, 2550, 2551, 2457, 3404, 3403, 2467, 1756,
	2529, 2562, 3401, 3402, 3399, 3400, 3701, 2602, 3399, 3398,
	1531, 2687, 1532, 1533, 2568, 2679, 2480, 2678, 3625, 1531,
	2488, 1532, 1533, 4114, 1806, 1531, 1129, 1532, 1533, 1128,
	2513, 2512, 2511, 2993, 1806, 173, 1534, 2528, 2635, 2599,
	2527, 1531, 185, 1532, 1533, 1534, 2697, 3099, 3630, 1806,
	3017, 1534, 3623, 1806, 110, 2578, 1929, 3080, 3073, 3074,
	3019, 2205, 1806, 1531, 2634, 1532, 1533, 1534, 2163, 2164,
	2161, 2162, 2474, 2439, 2118, 1531, 2084, 1532, 1533, 2044,
	1531, 2036, 1532, 1533, 193, 2563, 2559, 1176, 2607, 1534,
	2946, 2610, 2627, 2611, 2577, 2160, 3016, 1962, 2552, 2554,
	2555, 1534, 2026, 2022, 110, 1531, 1534, 1532, 1533, 1531,
	2018, 1532, 1533, 1175, 4371, 2563, 2606, 2605, 2609, 2017,
	1806, 2631, 2628, 3620, 1806, 2632, 2633, 173, 3618, 1806,
	3668, 1534, 3581, 1806, 185, 1534, 2016, 174, 179, 176,
	182, 183, 184, 186, 188, 189, 190, 191, 2702, 1935,
	1934, 1929, 1928, 192, 194, 195, 196, 1075, 1075, 1075,
	3579, 1806, 3650, 2639, 1837, 3017, 1871, 1870, 3077, 2944,
	1531, 2983, 1532, 1533, 2638, 2697, 193, 1587, 1309, 1587,
	1531, 2983, 1532, 1533, 3060, 1531, 2614, 1532, 1533, 1531,
	3366, 1532, 1533, 3575, 1806, 2717, 1534, 3572, 1806, 3667,
	2697, 3570, 1806, 3326, 2530, 3664, 1534, 3568, 1806, 1530,
	116, 1534, 3566, 1806, 3664, 1534, 4224, 1531, 4196, 1532,
	1533, 1935, 3564, 1806, 2992, 4158, 2405, 2404, 2671, 174,
	179, 176, 182, 183, 184, 186, 188, 189, 190, 191,
	2720, 3562, 1806, 1534, 2993, 192, 194, 195, 196, 2993,
	1531, 2613, 1532, 1533, 1531, 4181, 1532, 1533, 1531, 3664,
	1532, 1533, 3609, 3401, 1531, 1076, 1532, 1533, 108, 1531,
	3284, 1532, 1533, 2514, 110, 2855, 1534, 2758, 109, 1531,
	1534, 1532, 1533, 2689, 1534, 1530, 2993, 3560, 1806, 2757,
	1534, 3558, 1806, 2613, 2596, 1534, 2695, 2483, 1531, 2469,
	1532, 1533, 3556, 1806, 1822, 1534, 2710, 2429, 2712, 3554,
	1806, 1531, 2703, 1532, 1533, 2205, 103, 2715, 2143, 2716,
	3552, 1806, 2171, 3731, 1534, 2709, 2127, 2069, 1858, 3550,
	1806, 2681, 2682, 2706, 2707, 2708, 2684, 1534, 3548, 1806,
	1806, 2172, 3546, 1806, 1531, 2685, 1532, 1533, 1531, 101,
	1532, 1533, 2718, 1838, 3544, 1806, 1158, 1157, 101, 1531,
	4327, 1532, 1533, 4252, 4078, 4045, 1531, 3896, 1532, 1533,
	1534, 130, 2711, 3744, 1534, 1997, 3741, 1531, 3725, 1532,
	1533, 3732, 3733, 3734, 3522, 1534, 1531, 2733, 1532, 1533,
	3521, 1931, 1534, 2561, 2899, 1531, 3423, 1532, 1533, 1531,
	3419, 1532, 1533, 1534, 3307, 2120, 3542, 1806, 2730, 3081,
	2558, 1531, 1534, 1532, 1533, 3528, 1806, 2553, 2547, 2545,
	1552, 1534, 2740, 2051, 1957, 1534, 2931, 1953, 1927, 128,
	3051, 3504, 1806, 1998, 1999, 2000, 3421, 1534, 2887, 2755,
	2769, 3052, 1251, 2920, 1806, 3466, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1561, 1560, 1562, 1563, 1807, 1809, 1075,
	2918, 1806, 4079, 1531, 2202, 1532, 1533, 2576, 2200, 2442,
	4412, 2934, 1531, 2121, 1532, 1533, 2893, 1806, 3679, 3680,
	2870, 1806, 4175, 2988, 2991, 3052, 4410, 2729, 1531, 1534,
	1532, 1533, 2501, 2862, 1806, 1075, 3012, 4363, 1534, 46,
	1531, 4204, 1532, 1533, 4119, 3682, 3649, 3648, 3009, 2932,
	3647, 3011, 4174, 3326, 1534, 3302, 2935, 1531, 2937, 1532,
	1533, 2672, 3906, 2853, 1806, 3905, 1534, 3690, 3902, 2968,
	2851, 1806, 3692, 1531, 3691, 1532, 1533, 1531, 3903, 1532,
	1533, 2838, 1806, 1534, 1531, 3904, 1532, 1533, 3899, 2987,
	1531, 1840, 1532, 1533, 3900, 2836, 1806, 3687, 3698, 1534,
	1081, 3901, 3689, 1534, 3688, 3699, 3010, 3898, 2952, 1081,
	1534, 2922, 1774, 2834, 1806, 3697, 1534, 3695, 3684, 2977,
	1531, 710, 1532, 1533, 3696, 3685, 4200, 1531, 2942, 1532,
	1533, 3037, 3039, 2951, 2947, 3040, 4080, 2950, 1531, 3694,
	1532, 1533, 2832, 1806, 1828, 3085, 1534, 2966, 2830, 1806,
	1767, 3693, 1531, 1534, 1532, 1533, 3735, 2980, 2828, 1806,
	3347, 3348, 3686, 1839, 1534, 3352, 3351, 2826, 1806, 3014,
	1531, 2473, 1532, 1533, 1834, 2965, 3621, 3030, 1534, 1091,
	2231, 3018, 4354, 3054, 3096, 2428, 3021, 3349, 3057, 3058,
	2448, 3028, 2568, 4051, 3350, 3031, 1534, 2824, 1806, 1531,
	773, 1532, 1533, 3673, 3289, 1531, 2989, 1532, 1533, 3288,
	3736, 3737, 3738, 4161, 3043, 1531, 3874, 1532, 1533, 3850,
	1531, 3849, 1532, 1533, 1531, 1534, 1532, 1533, 2822, 1806,
	1092, 1534, 3053, 1531, 3876, 1532, 1533, 3660, 3313, 2068,
	3344, 1534, 3347, 3348, 3345, 3061, 1534, 3346, 1059, 1531,
	1534, 1532, 1533, 3093, 1531, 3397, 1532, 1533, 3034, 1534,
	1945, 2820, 1806, 1540, 1541, 1542, 1543, 1544, 1545, 1539,
	1536, 1214, 3056, 3114, 3848, 1534, 2818, 1806, 3082, 3083,
	1534, 3072, 2816, 1806, 3092, 1531, 2664, 1532, 1533, 3136,
	3137, 2223, 2212, 2213, 2214, 2215, 2225, 2216, 2217, 2218,
	2230, 2226, 2219, 2220, 2227, 2228, 2229, 2221, 2222, 2224,
	2663, 1534, 2814, 1806, 2248, 1108, 3094, 3115, 1531, 2662,
	1532, 1533, 3153, 2812, 1806, 2661, 2659, 2810, 1806, 1107,
	3657, 2249, 3134, 1531, 3118, 1532, 1533, 1993, 3656, 1531,
	2658, 1532, 1533, 2657, 1534, 2808, 1806, 1213, 3171, 3172,
	3173, 3174, 3175, 3176, 3177, 3178, 3179, 3180, 3746, 1534,
	3482, 3316, 3318, 3051, 3126, 1534, 4352, 1496, 3188, 1531,
	3319, 1532, 1533, 2806, 1806, 3154, 2168, 2166, 2167, 4386,
	1531, 3662, 1532, 1533, 1531, 3087, 1532, 1533, 3138, 2804,
	1806, 1994, 1995, 1996, 137, 1534, 3155, 110, 2799, 1806,
	2485, 2486, 1531, 3587, 1532, 1533, 1534, 2795, 1806, 4442,
	1534, 2793, 1806, 117, 1531, 3306, 1532, 1533, 2675, 3248,
	3124, 108, 3356, 3125, 116, 3192, 115, 3358, 1534, 3357,
	1531, 109, 1532, 1533, 110, 4287, 4074, 2392, 3583, 2392,
	1534, 3156, 3396, 115, 3008, 2468, 1531, 3353, 1532, 1533,
	3135, 1145, 3355, 3287, 3354, 1531, 1534, 1532, 1533, 108,
	1531, 3286, 1532, 1533, 1531, 110, 1532, 1533, 1531, 109,
	1532, 1533, 1534, 3266, 4388, 4387, 3632, 2501, 2701, 3255,
	2126, 1534, 3257, 2125, 4143, 4142, 1534, 4122, 3882, 3880,
	1534, 117, 3879, 2503, 1534, 1531, 3861, 1532, 1533, 3742,
	2786, 1806, 116, 117, 115, 3661, 3659, 2394, 3424, 2394,
	3181, 3228, 2784, 1806, 116, 2243, 2597, 3333, 1940, 92,
	2244, 1534, 1106, 116, 2501, 2501, 2501, 2501, 2501, 3238,
	3239, 3240, 3241, 3242, 3642, 1078, 3291, 3860, 4413, 2983,
	2503, 2503, 2503, 2503, 2503, 3256, 2501, 3258, 3834, 2501,
	2946, 3293, 4414, 4413, 3266, 3190, 4414, 1531, 2306, 1532,
	1533, 3265, 2503, 2759, 2440, 2503, 1852, 1844, 4167, 1531,
	3338, 1532, 1533, 3230, 3710, 3232, 5, 3277, 3, 2080,
	3365, 121, 122, 1534, 4233, 105, 3290, 3292, 3519, 8,
	3283, 3243, 3244, 3245, 3246, 1534, 1081, 3303, 3304, 3305,
	1, 3300, 1067, 1499, 3518, 3278, 3280, 3282, 1498, 3444,
	3510, 3714, 4316, 3320, 3321, 726, 3508, 2430, 1772, 3452,
	3367, 4364, 4312, 3368, 4313, 2037, 3457, 1080, 2027, 3773,
	3339, 2357, 3047, 3342, 3456, 2916, 3453, 1079, 2389, 4075,
	3340, 3341, 3360, 3343, 3862, 1531, 3863, 1532, 1533, 3865,
	3337, 2915, 3427, 2603, 3369, 3740, 111, 112, 2566, 1166,
	162, 1531, 3323, 1532, 1533, 3409, 3410, 1531, 2420, 1532,
	1533, 1534, 3329, 1531, 3332, 1532, 1533, 2523, 3407, 3329,
	3406, 3408, 3375, 2911, 2524, 1807, 2427, 1534, 1531, 4264,
	1532, 1533, 1531, 1534, 1532, 1533, 2910, 125, 1132, 1534,
	2909, 3425, 124, 1169, 1282, 2598, 2568, 3446, 1531, 3764,
	1532, 1533, 3035, 2532, 1534, 1877, 1875, 3463, 1534, 1876,
	1874, 1879, 1878, 4228, 3490, 2760, 2452, 3588, 2908, 2131,
	763, 3007, 2907, 757, 1534, 200, 3475, 1866, 2906, 3478,
	1531, 3477, 1532, 1533, 2897, 1845, 2124, 1208, 2896, 716,
	3405, 3485, 2636, 1531, 722, 1532, 1533, 1531, 1584, 1532,
	1533, 3495, 2119, 3426, 3285, 3447, 1534, 3022, 1126, 3511,
	3512, 3513, 3514, 3515, 3492, 3493, 2895, 3494, 1118, 1534,
	3496, 2894, 3498, 1534, 3500, 1531, 1096, 1532, 1533, 1531,
	1587, 1532, 1533, 2441, 1587, 1531, 2891, 1532, 1533, 2936,
	1125, 1531, 4052, 1532, 1533, 1531, 2886, 1532, 1533, 3334,
	3633, 1534, 3635, 2879, 3654, 1534, 3312, 3314, 2878, 2970,
	3317, 1534, 3310, 4160, 3873, 3643, 4385, 1534, 4251, 3032,
	1841, 1534, 3608, 1531, 2732, 1532, 1533, 2238, 1531, 3603,
	1532, 1533, 1574, 788, 2500, 959, 3607, 1826, 3829, 2158,
	2580, 786, 785, 1531, 783, 1532, 1533, 2938, 2984, 1534,
	1538, 1537, 994, 1531, 1534, 1532, 1533, 2926, 1853, 3486,
	1531, 2997, 1532, 1533, 2995, 1531, 2994, 1532, 1533, 1534,
	2673, 2508, 3681, 3640, 3677, 2877, 4308, 2502, 2498, 1534,
	2945, 2876, 945, 3634, 944, 3636, 1534, 2501, 2875, 795,
	3638, 1534, 787, 777, 1008, 2874, 3480, 3481, 1057, 943,
	3708, 1100, 942, 2503, 1058, 3454, 2873, 3457, 3455, 2960,
	1819, 3651, 4353, 3308, 2201, 3456, 2962, 3453, 3709, 3658,
	3610, 3676, 3612, 3613, 3614, 3033, 3663, 3296, 1515, 1791,
	1794, 3672, 1531, 2449, 1532, 1533, 775, 1812, 1531, 3683,
	1532, 1533, 3487, 4187, 2700, 1531, 3516, 1532, 1533, 1790,
	3704, 3705, 1531, 3702, 1532, 1533, 3700, 4194, 1534, 3435,
	3758, 3703, 3416, 1531, 1534, 1532, 1533, 3078, 2590, 74,
	50, 1534, 4152, 4225, 937, 934, 3831, 3832, 1534, 3833,
	2872, 3251, 3252, 3726, 4207, 3728, 4208, 933, 4209, 1534,
	2295, 1509, 1506, 3720, 3721, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 1531, 1768, 1532,
	1533, 3751, 2871, 3062, 2133, 3755, 3756, 3757, 2865, 3768,
	3769, 104, 1105, 2864, 40, 1111, 1111, 39, 3770, 38,
	37, 36, 2863, 1534, 30, 29, 28, 2860, 27, 26,
	33, 23, 25, 2859, 24, 22, 4424, 4425, 3785, 4454,
	4290, 4230, 3438, 4359, 4441, 131, 4390, 4351, 4350, 4301,
	4430, 4296, 60, 57, 55, 139, 138, 3747, 3748, 1531,
	58, 1532, 1533, 56, 54, 1531, 53, 1532, 1533, 1254,
	1531, 51, 1532, 1533, 2719, 102, 3796, 35, 2724, 1531,
	34, 1532, 1533, 2858, 1531, 1534, 1532, 1533, 21, 20,
	1531, 1534, 1532, 1533, 19, 18, 1534, 17, 16, 15,
	11, 2727, 10, 2728, 43, 1534, 42, 41, 32, 2736,
	1534, 31, 3847, 2738, 2739, 3854, 1534, 3856, 44, 7,
	2, 3065, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752,
	2753, 2754, 2592, 2756, 3837, 0, 3838, 3839, 3840, 3827,
	1531, 0, 1532, 1533, 0, 0, 3790, 0, 3333, 0,
	0, 92, 0, 3333, 3857, 0, 2762, 2763, 2764, 2765,
	0, 2767, 2768, 0, 2770, 0, 1534, 46, 2772, 0,
	0, 0, 2777, 2778, 0, 2779, 0, 0, 2782, 2783,
	2785, 2787, 2788, 2789, 2790, 2791, 2792, 2794, 2796, 2797,
	2798, 2800, 3858, 2802, 2803, 2805, 2807, 2809, 2811, 2813,
	2815, 2817, 2819, 2821, 2823, 2825, 2827, 2829, 2831, 2833,
	2835, 2837, 2839, 2840, 2841, 2202, 2843, 3890, 2845, 2200,
	2847, 2848, 3907, 2850, 2852, 2854, 3889, 3887, 1081, 2857,
	3888, 4058, 3885, 2861, 3878, 3877, 0, 2866, 2867, 2868,
	2869, 0, 0, 0, 0, 3908, 3909, 0, 3818, 0,
	2880, 2881, 2882, 2883, 2884, 2885, 3911, 0, 2889, 2890,
	0, 0, 0, 0, 0, 2892, 2856, 0, 0, 0,
	2898, 2849, 0, 0, 0, 2901, 2902, 2903, 2904, 2905,
	0, 0, 2846, 0, 4050, 0, 2912, 2913, 0, 2914,
	4049, 2844, 2917, 2919, 2452, 4077, 2921, 0, 0, 2842,
	0, 3329, 4069, 4116, 4117, 3332, 2933, 4070, 0, 0,
	3332, 0, 3892, 0, 0, 0, 4060, 4061, 4062, 4065,
	3855, 0, 0, 1531, 0, 1532, 1533, 0, 1531, 0,
	1532, 1533, 0, 0, 0, 0, 0, 0, 2967, 1531,
	2202, 1532, 1533, 0, 2200, 0, 0, 4120, 1531, 1534,
	1532, 1533, 0, 0, 1534, 0, 1531, 0, 1532, 1533,
	0, 0, 0, 0, 0, 1534, 0, 0, 0, 4168,
	3333, 4123, 0, 0, 1534, 4126, 0, 0, 4053, 0,
	0, 3894, 1534, 0, 0, 0, 0, 0, 4057, 0,
	0, 0, 0, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632,
	1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652,
	1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682,
	1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692,
	1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702,
	1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713,
	1714, 1715, 1716, 1717, 1718, 1719, 1725, 1726, 1727, 1728,
	1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751,
	1752, 1753, 1754, 1755, 4172, 4150, 4156, 3332, 4171, 4169,
	4173, 4149, 4140, 2801, 4121, 0, 0, 4188, 0, 4146,
	2781, 4148, 0, 0, 0, 0, 2780, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 0, 0, 2776, 0,
	0, 0, 0, 0, 0, 0, 0, 2774, 0, 0,
	0, 46, 0, 0, 2766, 0, 0, 0, 0, 0,
	2737, 0, 0, 0, 0, 0, 0, 0, 2731, 0,
	1531, 0, 1532, 1533, 0, 0, 0, 1531, 0, 1532,
	1533, 0, 0, 1531, 4193, 1532, 1533, 0, 3166, 3167,
	3168, 3169, 3170, 4178, 0, 1531, 1534, 1532, 1533, 0,
	0, 4195, 4190, 1534, 1531, 2726, 1532, 1533, 3185, 1534,
	0, 1531, 1081, 1532, 1533, 0, 0, 1531, 92, 1532,
	1533, 1534, 4232, 0, 0, 1531, 4231, 1532, 1533, 0,
	1534, 0, 0, 0, 46, 0, 0, 1534, 4248, 0,
	0, 0, 4213, 1534, 0, 4214, 0, 4239, 0, 0,
	0, 1534, 0, 1535, 0, 0, 0, 0, 0, 4180,
	0, 0, 1531, 0, 1532, 1533, 0, 4238, 4223, 0,
	0, 0, 1796, 0, 4186, 4242, 0, 4277, 0, 0,
	0, 0, 0, 0, 1593, 0, 1804, 0, 1534, 1797,
	4253, 0, 4198, 0, 0, 92, 0, 0, 0, 4077,
	4266, 4263, 4262, 1768, 4256, 4261, 4258, 4257, 4255, 4260,
	4259, 46, 0, 0, 2446, 2447, 1803, 1801, 1802, 1798,
	0, 1799, 0, 0, 0, 0, 4285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4303, 4302, 0, 0,
	0, 0, 4277, 0, 4307, 1800, 4315, 4320, 4343, 0,
	0, 0, 92, 0, 4332, 0, 4345, 0, 0, 4202,
	0, 0, 4330, 0, 0, 0, 0, 4212, 46, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4342, 0,
	0, 0, 4243, 4347, 3329, 4244, 0, 0, 4249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4358, 0,
	0, 0, 0, 0, 0, 0, 0, 92, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4384, 2080, 4373,
	0, 4374, 0, 46, 0, 0, 0, 0, 0, 0,
	4383, 0, 0, 1768, 0, 0, 3335, 0, 4403, 0,
	4405, 4407, 4377, 4411, 4277, 92, 4409, 4428, 0, 4345,
	4295, 0, 0, 2202, 3457, 0, 4418, 2200, 3363, 0,
	4408, 46, 3456, 4439, 3453, 4429, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 4338,
	0, 0, 4443, 0, 0, 0, 0, 4449, 0, 4451,
	1804, 92, 0, 1797, 0, 4456, 0, 0, 0, 4459,
	0, 0, 0, 0, 0, 0, 0, 46, 4462, 0,
	0, 0, 0, 0, 0, 4357, 92, 0, 1792, 1793,
	1803, 1801, 1802, 1798, 1895, 1799, 4468, 4471, 0, 92,
	92, 0, 46, 4345, 4476, 92, 4475, 4477, 4117, 4345,
	4474, 4372, 0, 0, 0, 46, 46, 0, 0, 1800,
	0, 46, 0, 0, 0, 0, 0, 2202, 0, 0,
	0, 2200, 0, 0, 4472, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3484,
	0, 0, 0, 1843, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3501, 3502, 0, 3503, 3505, 3507, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1932, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3520, 0, 0, 0, 0, 3523, 0, 3525,
	3526, 3527, 3529, 3530, 3531, 3532, 3533, 3534, 3535, 3536,
	3537, 3538, 3539, 3540, 3541, 3543, 3545, 3547, 3549, 3551,
	3553, 3555, 3557, 3559, 3561, 3563, 3565, 3567, 3569, 3571,
	3573, 3574, 3576, 3577, 3578, 3580, 0, 0, 3582, 0,
	3584, 3585, 3586, 0, 1882, 3590, 3591, 3592, 3593, 3594,
	3595, 3596, 3597, 3598, 3599, 3600, 0, 0, 0, 0,
	0, 0, 0, 756, 3606, 0, 0, 0, 3611, 0,
	0, 0, 3615, 3616, 0, 3617, 3619, 0, 3622, 3624,
	0, 3626, 3627, 3628, 3629, 0, 0, 0, 0, 0,
	0, 3637, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2085, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1896,
	0, 3669, 3670, 0, 0, 3675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 730, 1909, 1912, 1913, 1914,
	1915, 1916, 1917, 0, 1918, 1919, 1921, 1922, 1920, 1923,
	1924, 1897, 1898, 1899, 1900, 1880, 1881, 1910, 728, 1883,
	0, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892,
	0, 0, 1893, 1901, 1902, 1903, 1904, 0, 1905, 1906,
	1907, 1908, 0, 0, 1894, 0, 3762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 725,
	0, 0, 0, 0, 0, 0, 0, 0, 740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 735, 0, 3780, 0, 0, 3784, 0,
	0, 0, 0, 0, 0, 0, 738, 0, 0, 748,
	0, 0, 0, 0, 0, 0, 0, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3797, 0, 0, 0, 0, 0, 0, 0,
	0, 751, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2153, 2154, 2155,
	2156, 0, 0, 0, 0, 0, 0, 715, 0, 717,
	731, 0, 753, 2169, 752, 721, 0, 719, 723, 732,
	724, 0, 718, 0, 729, 0, 3820, 720, 733, 734,
	737, 741, 742, 743, 739, 736, 0, 727, 754, 3828,
	0, 0, 0, 0, 0, 0, 3835, 0, 2208, 2209,
	0, 0, 0, 0, 2232, 0, 0, 2236, 2237, 0,
	0, 0, 2242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2254, 2255, 2256,
	2257, 2258, 2259, 2260, 2261, 2262, 2263, 0, 2265, 0,
	0, 0, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294,
	2296, 1911, 2301, 0, 2303, 2304, 2305, 0, 2307, 2308,
	2309, 0, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318,
	2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328,
	2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338,
	2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348,
	2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2360, 2361,
	2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371,
	2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381,
	2382, 0, 0, 0, 0, 0, 2388, 0, 2390, 0,
	2396, 2397, 2398, 2399, 2400, 2401, 4066, 0, 0, 0,
	0, 0, 0, 0, 0, 4073, 0, 0, 0, 2412,
	2413, 2414, 2415, 2416, 2417, 2418, 2419, 0, 2421, 2422,
	2423, 2424, 2425, 0, 4083, 4084, 4085, 0, 4087, 0,
	4088, 4089, 0, 0, 0, 0, 4092, 4093, 4094, 4095,
	4096, 4097, 4098, 4099, 4100, 4101, 4102, 4103, 4104, 4105,
	4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 1111, 4115,
	4118, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4127, 4128, 4129, 4130, 4131,
	4133, 4134, 4136, 4138, 4139, 4141, 0, 0, 0, 4145,
	198, 0, 0, 4147, 0, 0, 0, 0, 0, 0,
	4157, 0, 0, 0, 0, 990, 2481, 2482, 0, 0,
	0, 0, 0, 137, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	0, 0, 2520, 0, 0, 0, 755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4179, 0,
	0, 0, 0, 0, 0, 0, 0, 746, 0, 0,
	0, 0, 0, 198, 170, 0, 203, 0, 0, 203,
	158, 0, 747, 761, 3071, 0, 0, 0, 767, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 159, 203,
	177, 0, 0, 178, 2564, 0, 0, 0, 0, 0,
	0, 0, 180, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 147, 169, 168, 197,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 767, 203, 767, 0, 767, 170, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1948, 1949,
	169, 168, 197, 91, 48, 49, 93, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 98, 0, 0, 0, 52, 81, 82, 0,
	79, 83, 0, 163, 144, 166, 151, 143, 0, 164,
	165, 0, 80, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 103, 0, 181, 0, 0, 0,
	0, 0, 0, 0, 4203, 187, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 67, 0, 0, 0, 0,
	0, 155, 153, 148, 149, 150, 154, 101, 4218, 0,
	0, 0, 0, 145, 4221, 0, 4222, 0, 0, 0,
	0, 0, 156, 0, 0, 0, 163, 1950, 166, 0,
	1947, 0, 164, 165, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4247, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 0, 0, 0, 88, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4271,
	4272, 0, 0, 0, 0, 0, 4427, 0, 0, 0,
	0, 0, 0, 4279, 4281, 4283, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4306, 0, 0, 0, 0, 172, 0, 0, 0,
	0, 0, 4328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2741, 2742, 2743,
	2744, 0, 0, 0, 95, 59, 62, 61, 64, 0,
	78, 0, 0, 87, 84, 0, 4236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4355, 0, 0, 0,
	0, 0, 4235, 0, 0, 0, 0, 0, 0, 172,
	0, 0, 1593, 0, 0, 0, 0, 4237, 66, 97,
	96, 0, 0, 76, 77, 63, 0, 4378, 4380, 4382,
	0, 85, 86, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4423, 0, 1895, 0, 0, 4234, 69, 0, 70,
	71, 72, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4452,
	4453, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1935, 0, 0, 0, 0,
	0, 0, 0, 65, 0, 0, 4470, 0, 0, 0,
	0, 0, 0, 160, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 0, 0, 185, 0, 0, 0, 0, 0,
	1843, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 160, 0, 0, 161,
	0, 0, 0, 1882, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 94, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 203, 0, 203, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 174,
	179, 176, 182, 183, 184, 186, 188, 189, 190, 191,
	767, 0, 767, 767, 0, 192, 194, 195, 196, 193,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 767, 203, 0, 0, 1896, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1579, 0, 100, 0, 0, 0, 0,
	0, 0, 174, 179, 176, 182, 183, 184, 186, 188,
	189, 190, 191, 0, 0, 0, 0, 0, 192, 194,
	195, 196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1775, 1909, 1912, 1913, 1914, 1915,
	1916, 1917, 0, 1918, 1919, 1921, 1922, 1920, 1923, 1924,
	1897, 1898, 1899, 1900, 1880, 1881, 1910, 0, 1883, 3131,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 0,
	0, 1893, 1901, 1902, 1903, 1904, 0, 1905, 1906, 1907,
	1908, 0, 0, 1894, 0, 0, 3157, 3158, 3159, 0,
	0, 3161, 0, 0, 3163, 0, 0, 0, 708, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 75, 3182, 3183, 3184, 0, 1062, 0,
	0, 0, 0, 3189, 0, 0, 0, 0, 3191, 0,
	0, 3193, 3194, 3195, 0, 0, 0, 3196, 3197, 0,
	0, 3198, 0, 3199, 0, 0, 0, 0, 0, 0,
	3200, 0, 3201, 0, 0, 0, 3202, 0, 3203, 0,
	0, 3204, 1140, 3205, 0, 3206, 0, 3207, 0, 3208,
	0, 3209, 0, 3210, 0, 3211, 0, 3212, 0, 3213,
	0, 3214, 0, 3215, 0, 3216, 0, 3217, 0, 3218,
	0, 3219, 0, 3220, 0, 3221, 0, 0, 0, 3222,
	0, 3223, 0, 3224, 0, 0, 3225, 0, 3226, 0,
	3227, 0, 2360, 3229, 0, 0, 3231, 0, 0, 3233,
	3234, 3235, 3236, 0, 0, 0, 0, 3237, 2360, 2360,
	2360, 2360, 2360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3247, 0, 0, 0, 0, 0, 0,
	0, 3260, 0, 0, 3264, 0, 203, 0, 0, 0,
	767, 767, 0, 3267, 3268, 3269, 3270, 3271, 3272, 0,
	0, 0, 3273, 3274, 0, 3275, 0, 3276, 0, 0,
	203, 0, 0, 0, 0, 0, 1895, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1911, 1111, 0, 0, 0, 0, 0, 767, 0, 0,
	203, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 767, 0, 0, 0, 0, 0, 0, 203,
	0, 0, 0, 767, 0, 0, 0, 0, 0, 0,
	3324, 0, 198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1944, 0, 0, 0, 0, 767, 0,
	767, 0, 0, 0, 0, 137, 0, 159, 767, 3364,
	0, 1579, 767, 0, 0, 767, 767, 767, 767, 0,
	767, 180, 767, 767, 0, 767, 767, 767, 767, 767,
	767, 0, 0, 0, 0, 0, 0, 0, 1579, 767,
	767, 1579, 767, 1579, 203, 767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 0, 0, 0,
	0, 0, 158, 0, 203, 0, 3422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 767, 0, 203,
	0, 0, 177, 0, 0, 178, 1882, 0, 0, 0,
	0, 0, 0, 767, 0, 0, 0, 767, 0, 0,
	203, 203, 0, 0, 0, 0, 0, 1948, 1949, 169,
	168, 197, 0, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 203, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 203, 203, 203, 203, 203, 203,
	203, 203, 767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1896, 0, 0, 0, 0, 0, 3524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 1950, 166, 0, 1947,
	0, 164, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 1909, 1912,
	1913, 1914, 1915, 1916, 1917, 0, 1918, 1919, 1921, 1922,
	1920, 1923, 1924, 1897, 1898, 1899, 1900, 1880, 1881, 1910,
	0, 1883, 0, 1884, 1885, 1886, 1887, 1888, 1889, 1890,
	1891, 1892, 0, 0, 1893, 1901, 1902, 1903, 1904, 0,
	1905, 1906, 1907, 1908, 0, 0, 1894, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 767, 767, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	1255, 0, 1263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 767, 0, 0, 0, 0, 0, 0, 989,
	0, 0, 1579, 0, 0, 0, 3743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1579, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1505, 0, 0, 0, 0, 3767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 744, 0, 0, 0,
	0, 0, 766, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3786, 0, 3787, 0, 3788, 0, 3789, 0, 0,
	0, 0, 0, 1911, 0, 3792, 3793, 0, 0, 0,
	0, 0, 0, 0, 0, 3798, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 766, 0, 766, 3799,
	766, 3800, 0, 3801, 0, 3802, 0, 3803, 0, 3804,
	0, 3805, 0, 3806, 0, 3807, 0, 3808, 0, 3809,
	0, 3810, 0, 3811, 0, 3812, 2406, 3813, 0, 3814,
	0, 0, 3815, 0, 0, 0, 3816, 0, 3817, 0,
	0, 0, 0, 0, 3819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 160, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 3836, 0, 0, 0,
	0, 203, 0, 0, 0, 3841, 767, 3842, 3843, 0,
	3844, 0, 3845, 0, 0, 0, 0, 3846, 0, 173,
	0, 0, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	767, 0, 0, 0, 0, 0, 0, 0, 203, 0,
	0, 0, 3886, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3895, 0, 193, 3897,
	203, 0, 0, 0, 767, 0, 0, 2406, 203, 0,
	203, 0, 203, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3910, 0, 767, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4046, 0, 0, 0, 0, 0, 0, 0,
	0, 174, 179, 176, 182, 183, 184, 186, 188, 189,
	190, 191, 0, 0, 0, 0, 0, 192, 194, 195,
	196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 767, 0, 0, 0, 0,
	0, 767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 767, 0, 1855,
	0, 0, 0, 767, 767, 0, 0, 767, 0, 767,
	0, 0, 0, 0, 0, 767, 0, 0, 1872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	767, 0, 0, 0, 0, 767, 0, 0, 0, 767,
	767, 0, 0, 0, 0, 0, 0, 4155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2007, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 203, 0, 0, 203,
	0, 203, 203, 0, 0, 946, 0, 0, 2052, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2081, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 2092, 0, 0, 0,
	0, 0, 203, 2096, 0, 0, 0, 767, 0, 0,
	0, 0, 0, 0, 2107, 2108, 2109, 2110, 2111, 2112,
	2113, 91, 48, 49, 93, 0, 0, 0, 765, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	98, 0, 0, 0, 52, 81, 82, 0, 79, 83,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	80, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 103, 0, 0, 0, 0, 0, 0, 0,
	0, 1579, 1136, 2406, 1143, 0, 1147, 0, 0, 0,
	0, 0, 0, 67, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 101, 4460, 0, 0, 91,
	48, 49, 93, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4201, 0, 0, 0, 0, 98, 0,
	0, 0, 52, 81, 82, 0, 79, 83, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 80, 0,
	0, 0, 0, 0, 0, 88, 0, 0, 0, 0,
	103, 0, 0, 0, 0, 0, 0, 0, 0, 4215,
	0, 0, 4216, 0, 4217, 0, 0, 0, 0, 0,
	0, 67, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 101, 766, 1490, 766, 766, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 766, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2146, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 88, 0, 0, 0, 1578, 0, 0,
	0, 0, 95, 59, 62, 61, 64, 0, 78, 0,
	0, 87, 84, 0, 4236, 0, 0, 0, 0, 0,
	0, 0, 4294, 0, 0, 0, 0, 0, 0, 0,
	4235, 0, 0, 0, 0, 0, 0, 0, 0, 4326,
	0, 0, 0, 0, 0, 4237, 66, 97, 96, 0,
	0, 76, 77, 63, 0, 203, 0, 0, 0, 85,
	86, 0, 0, 203, 0, 0, 0, 4339, 0, 4340,
	0, 4341, 0, 0, 767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 767, 767, 767, 203,
	95, 59, 62, 61, 64, 0, 78, 0, 0, 87,
	84, 0, 767, 0, 4234, 69, 0, 70, 71, 72,
	73, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 203, 0, 66, 97, 96, 0, 0, 76,
	77, 63, 0, 0, 0, 0, 0, 85, 86, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4421, 0, 4422, 0,
	0, 65, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 68, 69, 0, 70, 71, 72, 73, 0,
	0, 0, 767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4457, 4458, 0, 0, 0, 0,
	0, 0, 0, 767, 0, 0, 0, 0, 0, 0,
	767, 0, 0, 0, 767, 767, 0, 0, 0, 767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1579, 767, 0, 0, 65,
	0, 0, 0, 0, 766, 766, 203, 203, 203, 203,
	203, 203, 0, 94, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2487,
	0, 766, 0, 0, 0, 0, 0, 2491, 0, 2494,
	0, 0, 2146, 203, 0, 0, 766, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 766, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 94, 766, 0, 766, 0, 0, 0, 0, 0,
	0, 0, 766, 0, 0, 1578, 766, 0, 0, 766,
	766, 766, 766, 100, 766, 0, 766, 766, 0, 766,
	766, 766, 766, 766, 766, 0, 0, 0, 0, 767,
	0, 0, 1578, 766, 766, 1578, 766, 1578, 0, 766,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 766, 0, 0, 0, 0, 0, 0, 0, 0,
	1321, 0, 1321, 1321, 0, 0, 0, 766, 0, 0,
	0, 766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 100, 0, 0, 1504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 75, 0, 0, 0, 0, 766, 0, 0, 0,
	0, 0, 0, 0, 767, 0, 2146, 0, 0, 0,
	0, 0, 2646, 0, 0, 0, 767, 0, 0, 0,
	0, 0, 0, 0, 2669, 2670, 0, 0, 2674, 0,
	0, 2677, 0, 0, 0, 0, 0, 0, 0, 0,
	1057, 2680, 0, 0, 0, 0, 1058, 767, 2683, 0,
	0, 0, 0, 0, 0, 0, 2201, 0, 0, 0,
	0, 0, 203, 203, 203, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 2686, 0, 0, 0, 0, 75,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 767, 0, 0,
	0, 1579, 0, 0, 767, 0, 0, 767, 1579, 203,
	203, 203, 203, 203, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 0, 0, 0, 203,
	0, 203, 0, 0, 203, 203, 203, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 0,
	766, 766, 0, 0, 0, 0, 0, 0, 0, 767,
	0, 0, 1579, 0, 0, 766, 0, 767, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 947, 0,
	0, 0, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 766, 0, 0, 0,
	1778, 1779, 0, 0, 0, 0, 1578, 0, 0, 201,
	0, 0, 709, 0, 0, 2210, 0, 0, 0, 0,
	0, 0, 0, 0, 1578, 0, 0, 0, 0, 0,
	0, 0, 709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 0, 1086,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 0, 0, 1112, 1112, 0,
	0, 0, 0, 1926, 0, 0, 709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1136, 0,
	1956, 0, 0, 0, 767, 0, 0, 0, 1965, 0,
	0, 0, 1967, 0, 0, 1970, 1971, 1973, 1973, 0,
	1973, 0, 1973, 1973, 0, 1982, 1973, 1973, 1973, 1973,
	1973, 0, 0, 0, 0, 0, 0, 0, 0, 2002,
	2003, 203, 1136, 0, 0, 2008, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 203, 0,
	766, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2050, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2072, 0, 0, 0, 2077, 0, 0,
	0, 3013, 0, 0, 0, 0, 0, 0, 0, 0,
	766, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1321, 0, 766, 0, 0, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 766, 767,
	767, 766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 767, 767, 767, 767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3101, 3102, 3103, 3104, 3105,
	3106, 0, 0, 0, 0, 91, 48, 49, 93, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 766,
	0, 0, 0, 0, 98, 766, 2146, 3119, 52, 81,
	82, 0, 79, 83, 0, 0, 0, 0, 0, 0,
	0, 766, 0, 0, 80, 0, 0, 766, 766, 0,
	0, 766, 3127, 766, 0, 0, 103, 0, 0, 766,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 67, 0, 0,
	0, 0, 0, 0, 0, 0, 1321, 1321, 0, 101,
	0, 0, 0, 0, 766, 0, 0, 0, 0, 766,
	0, 2134, 0, 766, 766, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 88,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 767,
	0, 767, 0, 203, 0, 0, 0, 0, 0, 0,
	203, 0, 2196, 203, 203, 203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1579, 0, 0, 0, 203, 0, 0, 767, 0, 0,
	767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 95, 59, 62, 61,
	64, 0, 78, 0, 0, 87, 84, 0, 4236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	767, 0, 0, 0, 4235, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 0, 767, 0, 0, 4237,
	66, 97, 96, 0, 0, 76, 77, 63, 767, 0,
	0, 0, 0, 85, 86, 1578, 0, 766, 0, 0,
	0, 0, 3294, 3295, 0, 3299, 0, 0, 0, 0,
	0, 0, 0, 0, 709, 0, 709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4234, 69,
	0, 70, 71, 72, 73, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 767, 0, 0, 0, 0, 0, 0,
	767, 0, 767, 0, 0, 0, 2443, 0, 709, 0,
	0, 767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 65, 1580, 0, 0, 0,
	2459, 0, 767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3450, 0, 0, 1849, 0, 0, 1321, 0, 0,
	0, 0, 0, 0, 0, 3464, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1136, 0, 0,
	0, 0, 3476, 0, 0, 3479, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 94, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1143, 0, 0, 0, 0,
	0, 2583, 0, 0, 0, 0, 0, 0, 766, 0,
	0, 0, 0, 0, 0, 0, 0, 1136, 0, 0,
	766, 766, 766, 1143, 1965, 0, 0, 1965, 0, 1965,
	0, 767, 0, 0, 0, 2612, 766, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 767, 203, 0, 0, 0, 0,
	1136, 0, 0, 0, 0, 2196, 0, 0, 0, 2196,
	2196, 0, 3026, 0, 0, 0, 0, 100, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3645, 3646, 0, 0,
	767, 0, 0, 0, 0, 0, 766, 0, 0, 709,
	767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1579, 767, 0, 767, 766, 0, 0,
	0, 0, 0, 1086, 766, 0, 0, 0, 766, 766,
	0, 0, 0, 766, 0, 0, 0, 0, 0, 0,
	0, 0, 767, 2406, 0, 0, 0, 0, 0, 1578,
	766, 0, 0, 709, 0, 0, 0, 2691, 0, 0,
	0, 0, 0, 0, 0, 75, 0, 0, 0, 0,
	0, 0, 709, 0, 0, 0, 0, 0, 0, 0,
	3724, 0, 767, 767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1580, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 767, 1321, 0, 0, 0, 0, 0, 0,
	0, 1580, 0, 766, 1580, 0, 1580, 709, 0, 1057,
	0, 0, 0, 0, 995, 1058, 1009, 1010, 1011, 996,
	0, 0, 997, 998, 0, 999, 0, 2024, 0, 0,
	0, 0, 0, 767, 0, 203, 0, 0, 0, 0,
	0, 0, 709, 1012, 1013, 0, 0, 0, 0, 767,
	0, 0, 0, 766, 0, 0, 0, 0, 0, 0,
	0, 0, 767, 2079, 709, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	709, 0, 0, 0, 0, 0, 0, 709, 0, 0,
	0, 0, 0, 767, 0, 0, 2105, 2106, 709, 709,
	709, 709, 709, 709, 709, 0, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037,
	1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047,
	1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 767, 0, 766, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	766, 0, 0, 0, 0, 0, 0, 0, 0, 3869,
	0, 0, 3870, 3871, 3872, 0, 0, 0, 0, 0,
	3460, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2939, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2955, 2956, 2957, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 766, 2972, 0, 0, 1578, 0, 0, 766, 0,
	0, 766, 1578, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3461, 3462, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 709, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 101, 0, 0, 1057, 3412, 0, 0, 0,
	995, 1058, 1009, 1010, 1011, 996, 0, 0, 997, 998,
	0, 999, 0, 766, 0, 0, 1578, 0, 0, 0,
	0, 766, 3059, 0, 0, 0, 0, 1004, 0, 1012,
	1013, 0, 0, 0, 0, 1580, 0, 0, 0, 0,
	0, 0, 0, 1147, 0, 0, 0, 0, 0, 0,
	3079, 0, 0, 1580, 1965, 1965, 0, 0, 0, 3084,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3483, 0, 0, 0, 0, 0, 3095, 0, 0, 0,
	3458, 3459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
	1052, 1053, 1054, 1055, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3460, 0, 766, 2079,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2024, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3461, 3462,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1086, 0, 0, 4199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 709, 0, 0, 0, 0, 0, 0,
	2079, 709, 0, 709, 0, 709, 2510, 0, 0, 0,
	0, 0, 0, 0, 3713, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 766, 766, 960, 0, 0, 0, 0,
	0, 964, 0, 0, 0, 961, 962, 1973, 0, 0,
	963, 965, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 766, 766, 766, 766,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1321, 0, 0,
	0, 0, 0, 0, 3336, 0, 0, 1973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	709, 0, 0, 0, 0, 0, 709, 0, 0, 1136,
	0, 0, 0, 0, 0, 0, 0, 1147, 709, 709,
	0, 0, 709, 0, 2676, 709, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 709, 0, 0, 0, 0,
	0, 0, 709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 766, 0, 766, 0, 0, 709, 0,
	0, 0, 0, 0, 0, 2688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1578, 0, 0, 0, 0, 0,
	0, 766, 0, 0, 766, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1580, 0, 2079, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 766, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1926, 0, 0, 0, 0, 0,
	766, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 766, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 766, 0, 0,
	0, 0, 0, 0, 766, 0, 766, 0, 0, 0,
	0, 0, 0, 0, 0, 766, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 766, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1147,
	1147, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 709, 0,
	0, 0, 0, 0, 0, 0, 2024, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3774, 3775, 3776, 3777, 0, 0, 0, 0,
	0, 0, 2958, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	709, 0, 0, 0, 0, 709, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 766, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 766, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3852,
	0, 3852, 0, 0, 766, 0, 0, 0, 1580, 0,
	0, 0, 0, 0, 766, 0, 0, 0, 0, 709,
	709, 709, 709, 709, 709, 0, 0, 1578, 766, 0,
	766, 0, 0, 0, 0, 0, 0, 3891, 0, 0,
	3893, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	709, 709, 0, 0, 0, 0, 766, 766, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 766, 766, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 766, 0,
	1147, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4068, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1321, 0,
	0, 0, 0, 0, 0, 0, 766, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 766, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 766, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3852, 0, 0, 766, 0, 0, 0,
	3852, 0, 3852, 0, 0, 0, 0, 0, 0, 0,
	0, 4159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 766, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1147, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	766, 0, 0, 1112, 0, 709, 709, 709, 0, 709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1580, 0, 0, 0, 0, 0,
	0, 1580, 709, 709, 709, 709, 709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3362, 0, 0, 0,
	0, 0, 2024, 0, 709, 0, 0, 709, 3370, 2079,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1147, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1147, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 709, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 709,
	0, 0, 3932, 3934, 3933, 3999, 4000, 4001, 4002, 4003,
	4004, 4005, 3935, 3936, 837, 0, 709, 0, 0, 709,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1147, 0, 4245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1321, 1321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4297, 4305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 709, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	709, 709, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1147, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1926,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4310, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3940, 0, 0, 0, 0, 709, 0, 0, 0, 0,
	0, 0, 0, 4305, 0, 3948, 3949, 0, 0, 4024,
	4023, 4022, 0, 0, 4020, 4021, 4019, 0, 0, 0,
	0, 0, 0, 0, 709, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4305, 0, 0, 0,
	0, 0, 4025, 960, 0, 813, 814, 4026, 4027, 964,
	4028, 816, 817, 961, 962, 0, 811, 815, 963, 965,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3929, 3930, 3931, 3937, 3938,
	3939, 3950, 3997, 3998, 4006, 4008, 916, 4007, 4009, 4010,
	4011, 4014, 4015, 4016, 4017, 4012, 4013, 4018, 3912, 3916,
	3913, 3914, 3915, 3927, 3917, 3918, 3919, 3920, 3921, 3922,
	3923, 3924, 3925, 3926, 3928, 4029, 4030, 4031, 4032, 4033,
	4034, 3943, 3947, 3946, 3944, 3945, 3941, 3942, 3969, 3968,
	3970, 3971, 3972, 3973, 3974, 3975, 3977, 3976, 3978, 3979,
	3980, 3981, 3982, 3983, 3951, 3952, 3955, 3956, 3954, 3953,
	3957, 3966, 3967, 3958, 3959, 3960, 3961, 3962, 3963, 3965,
	3964, 3984, 3985, 3986, 3987, 3988, 3990, 3989, 3993, 3994,
	3992, 3991, 3996, 3995, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 966, 0, 967,
	0, 0, 971, 0, 0, 0, 973, 972, 0, 974,
	936, 935, 0, 0, 968, 969, 2024, 970, 0, 0,
	0, 0, 0, 709, 0, 0, 709, 709, 709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1580, 0, 0, 0, 2024, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4035, 4036, 4037, 4038, 4039, 4040, 4041,
	4042, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2024, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2024,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1580, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1473, 1452, 556, 2024, 1392, 1476, 1356,
	1377, 1486, 1380, 1384, 1429, 1331, 1407, 438, 1374, 1360,
	1326, 1368, 1327, 1358, 1394, 286, 1355, 1454, 1411, 1475,
	385, 283, 1333, 1324, 212, 529, 1361, 452, 1379, 211,
	1432, 510, 268, 396, 393, 614, 298, 289, 285, 264,
	336, 405, 450, 546, 444, 1482, 389, 1417, 650, 521,
	422, 0, 0, 0, 1459, 1458, 1385, 1396, 1464, 1405,
	1445, 1390, 1431, 1343, 1383, 1416, 1477, 1375, 1426, 1478,
	342, 262, 344, 210, 435, 522, 302, 0, 2079, 0,
	0, 4267, 535, 991, 0, 0, 0, 0, 4268, 0,
	0, 0, 0, 249, 0, 0, 256, 0, 0, 0,
	370, 379, 378, 358, 359, 361, 363, 369, 376, 382,
	355, 364, 1371, 1423, 640, 1471, 1372, 1425, 281, 340,
	288, 280, 611, 1483, 1463, 1330, 1404, 1470, 1399, 627,
	0, 0, 238, 1474, 1398, 0, 1428, 0, 1489, 1325,
	1419, 0, 1328, 1332, 1485, 1468, 1364, 1365, 291, 0,
	0, 0, 0, 0, 0, 0, 1395, 1406, 1442, 1446,
	1388, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	1362, 0, 1415, 0, 0, 0, 1337, 1329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1393, 0, 0, 0, 0, 1342, 0, 1363, 1443, 0,
	1323, 313, 1334, 423, 273, 0, 476, 1354, 319, 334,
	1340, 1369, 1472, 1460, 1461, 1462, 1339, 1450, 1467, 1389,
	661, 1469, 1387, 1386, 1437, 1338, 1457, 1378, 384, 1336,
	349, 205, 233, 0, 1376, 434, 484, 496, 1456, 1455,
	1359, 1370, 269, 1367, 494, 448, 635, 243, 300, 481,
	454, 492, 462, 303, 1414, 1435, 493, 391, 616, 472,
	632, 662, 663, 279, 428, 646, 550, 655, 680, 234,
	276, 442, 534, 638, 518, 417, 612, 613, 348, 517,
	311, 209, 388, 668, 232, 502, 390, 253, 241, 618,
	643, 315, 267, 305, 479, 0, 675, 221, 545, 629,
	250, 506, 0, 0, 683, 258, 528, 641, 630, 223,
	625, 527, 413, 345, 346, 222, 0, 480, 284, 309,
	0, 0, 274, 437, 620, 621, 272, 684, 237, 654,
	228, 1335, 653, 430, 615, 626, 414, 402, 227, 624,
	412, 401, 353, 374, 375, 296, 324, 469, 394, 470,
	323, 325, 425, 424, 426, 215, 639, 658, 0, 216,
	0, 523, 642, 685, 474, 220, 244, 245, 248, 1353,
	295, 299, 307, 310, 320, 321, 331, 386, 441, 468,
	464, 473, 1451, 609, 633, 647, 660, 666, 667, 669,
	670, 671, 672, 673, 676, 674, 429, 329, 519, 352,
	392, 1440, 1488, 447, 495, 251, 637, 520, 240, 603,
	418, 427, 259, 261, 260, 235, 511, 608, 246, 266,
	207, 1347, 1352, 1345, 0, 270, 271, 1420, 604, 1348,
	1346, 1409, 1410, 1349, 1479, 1480, 1481, 1465, 686, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 681, 536, 542, 537,
	538, 539, 540, 541, 0, 543, 1444, 1341, 0, 1350,
	1351, 419, 1453, 622, 623, 704, 403, 509, 634, 354,
	368, 371, 360, 380, 0, 381, 356, 357, 362, 365,
	366, 367, 372, 373, 377, 383, 263, 218, 410, 420,
	607, 330, 224, 225, 226, 552, 553, 554, 555, 651,
	652, 656, 213, 485, 486, 487, 488, 308, 645, 326,
	491, 490, 350, 351, 398, 471, 568, 570, 581, 585,
	587, 589, 595, 598, 569, 571, 582, 586, 588, 590,
	596, 599, 558, 560, 562, 564, 577, 576, 573, 601,
	602, 579, 584, 563, 575, 580, 593, 600, 597, 557,
	561, 565, 574, 592, 591, 572, 583, 594, 578, 566,
	559, 567, 1413, 204, 229, 387, 1484, 477, 304, 682,
	649, 507, 644, 214, 231, 1344, 278, 1357, 1366, 0,
	1373, 1381, 1382, 1397, 1400, 1401, 1402, 1403, 1421, 1422,
	1424, 1433, 1436, 1439, 1441, 1448, 1466, 1487, 206, 208,
	217, 230, 242, 247, 254, 277, 292, 294, 301, 314,
	327, 328, 337, 338, 341, 347, 399, 406, 407, 408,
	409, 431, 432, 433, 436, 439, 440, 443, 445, 446,
	449, 453, 457, 458, 459, 461, 463, 465, 478, 483,
	497, 498, 499, 500, 501, 504, 505, 512, 513, 514,
	515, 516, 524, 525, 530, 531, 532, 533, 544, 617,
	619, 636, 657, 664, 503, 404, 1434, 475, 610, 1430,
	1391, 317, 318, 466, 467, 332, 333, 678, 679, 316,
	631, 665, 628, 677, 659, 460, 397, 1412, 1418, 400,
	297, 322, 339, 1427, 648, 526, 236, 489, 306, 265,
	1447, 1449, 219, 257, 239, 275, 290, 293, 343, 411,
	421, 451, 456, 312, 287, 255, 482, 252, 508, 547,
	548, 549, 551, 415, 282, 455, 1408, 1438, 395, 605,
	606, 335, 1473, 1452, 556, 0, 1392, 1476, 1356, 1377,
	1486, 1380, 1384, 1429, 1331, 1407, 438, 1374, 1360, 1326,
	1368, 1327, 1358, 1394, 286, 1355, 1454, 1411, 1475, 385,
	283, 1333, 1324, 212, 529, 1361, 452, 1379, 211, 1432,
	510, 268, 396, 393, 614, 298, 289, 285, 264, 336,
	405, 450, 546, 444, 1482, 389, 1417, 650, 521, 422,
	0, 0, 0, 1459, 1458, 1385, 1396, 1464, 1405, 1445,
	1390, 1431, 1343, 1383, 1416, 1477, 1375, 1426, 1478, 342,
	262, 344, 210, 435, 522, 302, 0, 0, 0, 0,
	0, 535, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 256, 0, 0, 0, 370,
	379, 378, 358, 359, 361, 363, 369, 376, 382, 355,
	364, 1371, 1423, 640, 1471, 1372, 1425, 281, 340, 288,
	280, 611, 1483, 1463, 1330, 1404, 1470, 1399, 627, 0,
	0, 238, 1474, 1398, 0, 1428, 0, 1489, 1325, 1419,
	0, 1328, 1332, 1485, 1468, 1364, 1365, 291, 0, 0,
	0, 0, 0, 0, 0, 1395, 1406, 1442, 1446, 1388,
	0, 416, 0, 0, 0, 0, 0, 3371, 0, 1362,
	0, 1415, 0, 0, 0, 1337, 1329, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1393,
	0, 0, 0, 0, 1342, 0, 1363, 1443, 0, 1323,
	313, 1334, 423, 273, 0, 476, 1354, 319, 334, 1340,
	1369, 1472, 1460, 1461, 1462, 1339, 1450, 1467, 1389, 661,
	1469, 1387, 1386, 1437, 1338, 1457, 1378, 384, 1336, 349,
	205, 233, 0, 1376, 434, 484, 496, 1456, 1455, 1359,
	1370, 269, 1367, 494, 448, 635, 243, 300, 481, 454,
	492, 462, 303, 1414, 1435, 493, 391, 616, 472, 632,
	662, 663, 279, 428, 646, 550, 655, 680, 234, 276,
	442, 534, 638, 518, 417, 612, 613, 348, 517, 311,
	209, 388, 668, 232, 502, 390, 253, 241, 618, 643,
	315, 267, 305, 479, 0, 675, 221, 545, 629, 250,
	506, 0, 0, 683, 258, 528, 641, 630, 223, 625,
	527, 413, 345, 346, 222, 0, 480, 284, 309, 0,
	0, 274, 437, 620, 621, 272, 684, 237, 654, 228,
	1335, 653, 430, 615, 626, 414, 402, 227, 624, 412,
	401, 353, 374, 375, 296, 324, 469, 394, 470, 323,
	325, 425, 424, 426, 215, 639, 658, 0, 216, 0,
	523, 642, 685, 474, 220, 244, 245, 248, 1353, 295,
	299, 307, 310, 320, 321, 331, 386, 441, 468, 464,
	473, 1451, 609, 633, 647, 660, 666, 667, 669, 670,
	671, 672, 673, 676, 674, 429, 329, 519, 352, 392,
	1440, 1488, 447, 495, 251, 637, 520, 240, 603, 418,
	427, 259, 261, 260, 235, 511, 608, 246, 266, 207,
	1347, 1352, 1345, 0, 270, 271, 1420, 604, 1348, 1346,
	1409, 1410, 1349, 1479, 1480, 1481, 1465, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 681, 536, 542, 537, 538,
	539, 540, 541, 0, 543, 1444, 1341, 0, 1350, 1351,
	419, 1453, 622, 623, 704, 403, 509, 634, 354, 368,
	371, 360, 380, 0, 381, 356, 357, 362, 365, 366,
	367, 372, 373, 377, 383, 263, 218, 410, 420, 607,
	330, 224, 225, 226, 552, 553, 554, 555, 651, 652,
	656, 213, 485, 486, 487, 488, 308, 645, 326, 491,
	490, 350, 351, 398, 471, 568, 570, 581, 585, 587,
	589, 595, 598, 569, 571, 582, 586, 588, 590, 596,
	599, 558, 560, 562, 564, 577, 576, 573, 601, 602,
	579, 584, 563, 575, 580, 593, 600, 597, 557, 561,
	565, 574, 592, 591, 572, 583, 594, 578, 566, 559,
	567, 1413, 204, 229, 387, 1484, 477, 304, 682, 649,
	507, 644, 214, 231, 1344, 278, 1357, 1366, 0, 1373,
	1381, 1382, 1397, 1400, 1401, 1402, 1403, 1421, 1422, 1424,
	1433, 1436, 1439, 1441, 1448, 1466, 1487, 206, 208, 217,
	230, 242, 247, 254, 277, 292, 294, 301, 314, 327,
	328, 337, 338, 341, 347, 399, 406, 407, 408, 409,
	431, 432, 433, 436, 439, 440, 443, 445, 446, 449,
	453, 457, 458, 459, 461, 463, 465, 478, 483, 497,
	498, 499, 500, 501, 504, 505, 512, 513, 514, 515,
	516, 524, 525, 530, 531, 532, 533, 544, 617, 619,
	636, 657, 664, 503, 404, 1434, 475, 610, 1430, 1391,
	317, 318, 466, 467, 332, 333, 678, 679, 316, 631,
	665, 628, 677, 659, 460, 397, 1412, 1418, 400, 297,
	322, 339, 1427, 648, 526, 236, 489, 306, 265, 1447,
	1449, 219, 257, 239, 275, 290, 293, 343, 411, 421,
	451, 456, 312, 287, 255, 482, 252, 508, 547, 548,
	549, 551, 415, 282, 455, 1408, 1438, 395, 605, 606,
	335, 1473, 1452, 556, 0, 1392, 1476, 1356, 1377, 1486,
	1380, 1384, 1429, 1331, 1407, 438, 1374, 1360, 1326, 1368,
	1327, 1358, 1394, 286, 1355, 1454, 1411, 1475, 385, 283,
	1333, 1324, 212, 529, 1361, 452, 1379, 211, 1432, 510,
	268, 396, 393, 614, 298, 289, 285, 264, 336, 405,
	450, 546, 444, 1482, 389, 1417, 650, 521, 422, 0,
	0, 0, 1459, 1458, 1385, 1396, 1464, 1405, 1445, 1390,
	1431, 1343, 1383, 1416, 1477, 1375, 1426, 1478, 342, 262,
	344, 210, 435, 522, 302, 0, 0, 0, 0, 0,
	535, 756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 256, 0, 0, 0, 370, 379,
	378, 358, 359, 361, 363, 369, 376, 382, 355, 364,
	1371, 1423, 640, 1471, 1372, 1425, 281, 340, 288, 280,
	611, 1483, 1463, 1330, 1404, 1470, 1399, 627, 0, 0,
	238, 1474, 1398, 0, 1428, 0, 1489, 1325, 1419, 0,
	1328, 1332, 1485, 1468, 1364, 1365, 291, 0, 0, 0,
	0, 0, 0, 0, 1395, 1406, 1442, 1446, 1388, 0,
	416, 0, 0, 0, 0, 0, 3322, 0, 1362, 0,
	1415, 0, 0, 0, 1337, 1329, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1393, 0,
	0, 0, 0, 1342, 0, 1363, 1443, 0, 1323, 313,
	1334, 423, 273, 0, 476, 1354, 319, 334, 1340, 1369,
	1472, 1460, 1461, 1462, 1339, 1450, 1467, 1389, 661, 1469,
	1387, 1386, 1437, 1338, 1457, 1378, 384, 1336, 349, 205,
	233, 0, 1376, 434, 484, 496, 1456, 1455, 1359, 1370,
	269, 1367, 494, 448, 635, 243, 300, 481, 454, 492,
	462, 303, 1414, 1435, 493, 391, 616, 472, 632, 662,
	663, 279, 428, 646, 550, 655, 680, 234, 276, 442,
	534, 638, 518, 417, 612, 613, 348, 517, 311, 209,
	388, 668, 232, 502, 390, 253, 241, 618, 643, 315,
	267, 305, 479, 0, 675, 221, 545, 629, 250, 506,
	0, 0, 683, 258, 528, 641, 630, 223, 625, 527,
	413, 345, 346, 222, 0, 480, 284, 309, 0, 0,
	274, 437, 620, 621, 272, 684, 237, 654, 228, 1335,
	653, 430, 615, 626, 414, 402, 227, 624, 412, 401,
	353, 374, 375, 296, 324, 469, 394, 470, 323, 325,
	425, 424, 426, 215, 639, 658, 0, 216, 0, 523,
	642, 685, 474, 220, 244, 245, 248, 1353, 295, 299,
	307, 310, 320, 321, 331, 386, 441, 468, 464, 473,
	1451, 609, 633, 647, 660, 666, 667, 669, 670, 671,
	672, 673, 676, 674, 429, 329, 519, 352, 392, 1440,
	1488, 447, 495, 251, 637, 520, 240, 603, 418, 427,
	259, 261, 260, 235, 511, 608, 246, 266, 207, 1347,
	1352, 1345, 0, 270, 271, 1420, 604, 1348, 1346, 1409,
	1410, 1349, 1479, 1480, 1481, 1465, 686, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 681, 536, 542, 537, 538, 539,
	540, 541, 0, 543, 1444, 1341, 0, 1350, 1351, 419,
	1453, 622, 623, 704, 403, 509, 634, 354, 368, 371,
	360, 380, 0, 381, 356, 357, 362, 365, 366, 367,
	372, 373, 377, 383, 263, 218, 410, 420, 607, 330,
	224, 225, 226, 552, 553, 554, 555, 651, 652, 656,
	213, 485, 486, 487, 488, 308, 645, 326, 491, 490,
	350, 351, 398, 471, 568, 570, 581, 585, 587, 589,
	595, 598, 569, 571, 582, 586, 588, 590, 596, 599,
	558, 560, 562, 564, 577, 576, 573, 601, 602, 579,
	584, 563, 575, 580, 593, 600, 597, 557, 561, 565,
	574, 592, 591, 572, 583, 594, 578, 566, 559, 567,
	1413, 204, 229, 387, 1484, 477, 304, 682, 649, 507,
	644, 214, 231, 1344, 278, 1357, 1366, 0, 1373, 1381,
	1382, 1397, 1400, 1401, 1402, 1403, 1421, 1422, 1424, 1433,
	1436, 1439, 1441, 1448, 1466, 1487, 206, 208, 217, 230,
	242, 247, 254, 277, 292, 294, 301, 314, 327, 328,
	337, 338, 341, 347, 399, 406, 407, 408, 409, 431,
	432, 433, 436, 439, 440, 443, 445, 446, 449, 453,
	457, 458, 459, 461, 463, 465, 478, 483, 497, 498,
	499, 500, 501, 504, 505, 512, 513, 514, 515, 516,
	524, 525, 530, 531, 532, 533, 544, 617, 619, 636,
	657, 664, 503, 404, 1434, 475, 610, 1430, 1391, 317,
	318, 466, 467, 332, 333, 678, 679, 316, 631, 665,
	628, 677, 659, 460, 397, 1412, 1418, 400, 297, 322,
	339, 1427, 648, 526, 236, 489, 306, 265, 1447, 1449,
	219, 257, 239, 275, 290, 293, 343, 411, 421, 451,
	456, 312, 287, 255, 482, 252, 508, 547, 548, 549,
	551, 415, 282, 455, 1408, 1438, 395, 605, 606, 335,
	1473, 1452, 556, 0, 1392, 1476, 1356, 1377, 1486, 1380,
	1384, 1429, 1331, 1407, 438, 1374, 1360, 1326, 1368, 1327,
	1358, 1394, 286, 1355, 1454, 1411, 1475, 385, 283, 1333,
	1324, 212, 529, 1361, 452, 1379, 211, 1432, 510, 268,
	396, 393, 614, 298, 289, 285, 264, 336, 405, 450,
	546, 444, 1482, 389, 1417, 650, 521, 422, 0, 0,
	0, 1459, 1458, 1385, 1396, 1464, 1405, 1445, 1390, 1431,
	1343, 1383, 1416, 1477, 1375, 1426, 1478, 342, 262, 344,
	210, 435, 522, 302, 0, 0, 0, 0, 0, 535,
	991, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 256, 0, 0, 0, 370, 379, 378,
	358, 359, 361, 363, 369, 376, 382, 355, 364, 1371,
	1423, 640, 1471, 1372, 1425, 281, 340, 288, 280, 611,
	1483, 1463, 1330, 1404, 1470, 1399, 627, 0, 0, 238,
	1474, 1398, 0, 1428, 0, 1489, 1325, 1419, 0, 1328,
	1332, 1485, 1468, 1364, 1365, 291, 0, 0, 0, 0,
	0, 0, 0, 1395, 1406, 1442, 1446, 1388, 0, 416,
	0, 0, 0, 0, 0, 2489, 0, 1362, 0, 1415,
	0, 0, 0, 1337, 1329, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1393, 0, 0,
	0, 0, 1342, 0, 1363, 1443, 0, 1323, 313, 1334,
	423, 273, 0, 476, 1354, 319, 334, 1340, 1369, 1472,
	1460, 1461, 1462, 1339, 1450, 1467, 1389, 661, 1469, 1387,
	1386, 1437, 1338, 1457, 1378, 384, 1336, 349, 205, 233,
	0, 1376, 434, 484, 496, 1456, 1455, 1359, 1370, 269,
	1367, 494, 448, 635, 243, 300, 481, 454, 492, 462,
	303, 1414, 1435, 493, 391, 616, 472, 632, 662, 663,
	279, 428, 646, 550, 655, 680, 234, 276, 442, 534,
	638, 518, 417, 612, 613, 348, 517, 311, 209, 388,
	668, 232, 502, 390, 253, 241, 618, 643, 315, 267,
	305, 479, 0, 675, 221, 545, 629, 250, 506, 0,
	0, 683, 258, 528, 641, 630, 223, 625, 527, 413,
	345, 346, 222, 0, 480, 284, 309, 0, 0, 274,
	437, 620, 621, 272, 684, 237, 654, 228, 1335, 653,
	430, 615, 626, 414, 402, 227, 624, 412, 401, 353,
	374, 375, 296, 324, 469, 394, 470, 323, 325, 425,
	424, 426, 215, 639, 658, 0, 216, 0, 523, 642,
	685, 474, 220, 244, 245, 248, 1353, 295, 299, 307,
	310, 320, 321, 331, 386, 441, 468, 464, 473, 1451,
	609, 633, 647, 660, 666, 667, 669, 670, 671, 672,
	673, 676, 674, 429, 329, 519, 352, 392, 1440, 1488,
	447, 495, 251, 637, 520, 240, 603, 418, 427, 259,
	261, 260, 235, 511, 608, 246, 266, 207, 1347, 1352,
	1345, 0, 270, 271, 1420, 604, 1348, 1346, 1409, 1410,
	1349, 1479, 1480, 1481, 1465, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 681, 536, 542, 537, 538, 539, 540,
	541, 0, 543, 1444, 1341, 0, 1350, 1351, 419, 1453,
	622, 623, 704, 403, 509, 634, 354, 368, 371, 360,
	380, 0, 381, 356, 357, 362, 365, 366, 367, 372,
	373, 377, 383, 263, 218, 410, 420, 607, 330, 224,
	225, 226, 552, 553, 554, 555, 651, 652, 656, 213,
	485, 486, 487, 488, 308, 645, 326, 491, 490, 350,
	351, 398, 471, 568, 570, 581, 585, 587, 589, 595,
	598, 569, 571, 582, 586, 588, 590, 596, 599, 558,
	560, 562, 564, 577, 576, 573, 601, 602, 579, 584,
	563, 575, 580, 593, 600, 597, 557, 561, 565, 574,
	592, 591, 572, 583, 594, 578, 566, 559, 567, 1413,
	204, 229, 387, 1484, 477, 304, 682, 649, 507, 644,
	214, 231, 1344, 278, 1357, 1366, 0, 1373, 1381, 1382,
	1397, 1400, 1401, 1402, 1403, 1421, 1422, 1424, 1433, 1436,
	1439, 1441, 1448, 1466, 1487, 206, 208, 217, 230, 242,
	247, 254, 277, 292, 294, 301, 314, 327, 328, 337,
	338, 341, 347, 399, 406, 407, 408, 409, 431, 432,
	433, 436, 439, 440, 443, 445, 446, 449, 453, 457,
	458, 459, 461, 463, 465, 478, 483, 497, 498, 499,
	500, 501, 504, 505, 512, 513, 514, 515, 516, 524,
	525, 530, 531, 532, 533, 544, 617, 619, 636, 657,
	664, 503, 404, 1434, 475, 610, 1430, 1391, 317, 318,
	466, 467, 332, 333, 678, 679, 316, 631, 665, 628,
	677, 659, 460, 397, 1412, 1418, 400, 297, 322, 339,
	1427, 648, 526, 236, 489, 306, 265, 1447, 1449, 219,
	257, 239, 275, 290, 293, 343, 411, 421, 451, 456,
	312, 287, 255, 482, 252, 508, 547, 548, 549, 551,
	415, 282, 455, 1408, 1438, 395, 605, 606, 335, 1473,
	1452, 556, 0, 1392, 1476, 1356, 1377, 1486, 1380, 1384,
	1429, 1331, 1407, 438, 1374, 1360, 1326, 1368, 1327, 1358,
	1394, 286, 1355, 1454, 1411, 1475, 385, 283, 1333, 1324,
	212, 529, 1361, 452, 1379, 211, 1432, 510, 268, 396,
	393, 614, 298, 289, 285, 264, 336, 405, 450, 546,
	444, 1482, 389, 1417, 650, 521, 422, 0, 0, 0,
	1459, 1458, 1385, 1396, 1464, 1405, 1445, 1390, 1431, 1343,
	1383, 1416, 1477, 1375, 1426, 1478, 342, 262, 344, 210,
	435, 522, 302, 0, 101, 0, 0, 0, 535, 756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 256, 0, 0, 0, 370, 379, 378, 358,
	359, 361, 363, 369, 376, 382, 355, 364, 1371, 1423,
	640, 1471, 1372, 1425, 281, 340, 288, 280, 611, 1483,
	1463, 1330, 1404, 1470, 1399, 627, 0, 0, 238, 1474,
	1398, 0, 1428, 0, 1489, 1325, 1419, 0, 1328, 1332,
	1485, 1468, 1364, 1365, 291, 0, 0, 0, 0, 0,
	0, 0, 1395, 1406, 1442, 1446, 1388, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 1362, 0, 1415, 0,
	0, 0, 1337, 1329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1393, 0, 0, 0,
	0, 1342, 0, 1363, 1443, 0, 1323, 313, 1334, 423,
	273, 0, 476, 1354, 319, 334, 1340, 1369, 1472, 1460,
	1461, 1462, 1339, 1450, 1467, 1389, 661, 1469, 1387, 1386,
	1437, 1338, 1457, 1378, 384, 1336, 349, 205, 233, 0,
	1376, 434, 484, 496, 1456, 1455, 1359, 1370, 269, 1367,
	494, 448, 635, 243, 300, 481, 454, 492, 462, 303,
	1414, 1435, 493, 391, 616, 472, 632, 662, 663, 279,
	428, 646, 550, 655, 680, 234, 276, 442, 534, 638,
	518, 417, 612, 613, 348, 517, 311, 209, 388, 668,
	232, 502, 390, 253, 241, 618, 643, 315, 267, 305,
	479, 0, 675, 221, 545, 629, 250, 506, 0, 0,
	683, 258, 528, 641, 630, 223, 625, 527, 413, 345,
	346, 222, 0, 480, 284, 309, 0, 0, 274, 437,
	620, 621, 272, 684, 237, 654, 228, 1335, 653, 430,
	615, 626, 414, 402, 227, 624, 412, 401, 353, 374,
	375, 296, 324, 469, 394, 470, 323, 325, 425, 424,
	426, 215, 639, 658, 0, 216, 0, 523, 642, 685,
	474, 220, 244, 245, 248, 1353, 295, 299, 307, 310,
	320, 321, 331, 386, 441, 468, 464, 473, 1451, 609,
	633, 647, 660, 666, 667, 669, 670, 671, 672, 673,
	676, 674, 429, 329, 519, 352, 392, 1440, 1488, 447,
	495, 251, 637, 520, 240, 603, 418, 427, 259, 261,
	260, 235, 511, 608, 246, 266, 207, 1347, 1352, 1345,
	0, 270, 271, 1420, 604, 1348, 1346, 1409, 1410, 1349,
	1479, 1480, 1481, 1465, 686, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 681, 536, 542, 537, 538, 539, 540, 541,
	0, 543, 1444, 1341, 0, 1350, 1351, 419, 1453, 622,
	623, 704, 403, 509, 634, 354, 368, 371, 360, 380,
	0, 381, 356, 357, 362, 365, 366, 367, 372, 373,
	377, 383, 263, 218, 410, 420, 607, 330, 224, 225,
	226, 552, 553, 554, 555, 651, 652, 656, 213, 485,
	486, 487, 488, 308, 645, 326, 491, 490, 350, 351,
	398, 471, 568, 570, 581, 585, 587, 589, 595, 598,
	569, 571, 582, 586, 588, 590, 596, 599, 558, 560,
	562, 564, 577, 576, 573, 601, 602, 579, 584, 563,
	575, 580, 593, 600, 597, 557, 561, 565, 574, 592,
	591, 572, 583, 594, 578, 566, 559, 567, 1413, 204,
	229, 387, 1484, 477, 304, 682, 649, 507, 644, 214,
	231, 1344, 278, 1357, 1366, 0, 1373, 1381, 1382, 1397,
	1400, 1401, 1402, 1403, 1421, 1422, 1424, 1433, 1436, 1439,
	1441, 1448, 1466, 1487, 206, 208, 217, 230, 242, 247,
	254, 277, 292, 294, 301, 314, 327, 328, 337, 338,
	341, 347, 399, 406, 407, 408, 409, 431, 432, 433,
	436, 439, 440, 443, 445, 446, 449, 453, 457, 458,
	459, 461, 463, 465, 478, 483, 497, 498, 499, 500,
	501, 504, 505, 512, 513, 514, 515, 516, 524, 525,
	530, 531, 532, 533, 544, 617, 619, 636, 657, 664,
	503, 404, 1434, 475, 610, 1430, 1391, 317, 318, 466,
	467, 332, 333, 678, 679, 316, 631, 665, 628, 677,
	659, 460, 397, 1412, 1418, 400, 297, 322, 339, 1427,
	648, 526, 236, 489, 306, 265, 1447, 1449, 219, 257,
	239, 275, 290, 293, 343, 411, 421, 451, 456, 312,
	287, 255, 482, 252, 508, 547, 548, 549, 551, 415,
	282, 455, 1408, 1438, 395, 605, 606, 335, 1473, 1452,
	556, 0, 1392, 1476, 1356, 1377, 1486, 1380, 1384, 1429,
	1331, 1407, 438, 1374, 1360, 1326, 1368, 1327, 1358, 1394,
	286, 1355, 1454, 1411, 1475, 385, 283, 1333, 1324, 212,
	529, 1361, 452, 1379, 211, 1432, 510, 268, 396, 393,
	614, 298, 289, 285, 264, 336, 405, 450, 546, 444,
	1482, 389, 1417, 650, 521, 422, 0, 0, 0, 1459,
	1458, 1385, 1396, 1464, 1405, 1445, 1390, 1431, 1343, 1383,
	1416, 1477, 1375, 1426, 1478, 342, 262, 344, 210, 435,
	522, 302, 0, 0, 0, 0, 0, 535, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 256, 0, 0, 0, 370, 379, 378, 358, 359,
	361, 363, 369, 376, 382, 355, 364, 1371, 1423, 640,
	1471, 1372, 1425, 281, 340, 288, 280, 611, 1483, 1463,
	1330, 1404, 1470, 1399, 627, 0, 0, 238, 1474, 1398,
	0, 1428, 0, 1489, 1325, 1419, 0, 1328, 1332, 1485,
	1468, 1364, 1365, 291, 0, 0, 0, 0, 0, 0,
	0, 1395, 1406, 1442, 1446, 1388, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 1362, 0, 1415, 0, 0,
	0, 1337, 1329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1393, 0, 0, 0, 0,
	1342, 0, 1363, 1443, 0, 1323, 313, 1334, 423, 273,
	0, 476, 1354, 319, 334, 1340, 1369, 1472, 1460, 1461,
	1462, 1339, 1450, 1467, 1389, 661, 1469, 1387, 1386, 1437,
	1338, 1457, 1378, 384, 1336, 349, 205, 233, 0, 1376,
	434, 484, 496, 1456, 1455, 1359, 1370, 269, 1367, 494,
	448, 635, 243, 300, 481, 454, 492, 462, 303, 1414,
	1435, 493, 391, 616, 472, 632, 662, 663, 279, 428,
	646, 550, 655, 680, 234, 276, 442, 534, 638, 518,
	417, 612, 613, 348, 517, 311, 209, 388, 668, 232,
	502, 390, 253, 241, 618, 643, 315, 267, 305, 479,
	0, 675, 221, 545, 629, 250, 506, 0, 0, 683,
	258, 528, 641, 630, 223, 625, 527, 413, 345, 346,
	222, 0, 480, 284, 309, 0, 0, 274, 437, 620,
	621, 272, 684, 237, 654, 228, 1335, 653, 430, 615,
	626, 414, 402, 227, 624, 412, 401, 353, 374, 375,
	296, 324, 469, 394, 470, 323, 325, 425, 424, 426,
	215, 639, 658, 0, 216, 0, 523, 642, 685, 474,
	220, 244, 245, 248, 1353, 295, 299, 307, 310, 320,
	321, 331, 386, 441, 468, 464, 473, 1451, 609, 633,
	647, 660, 666, 667, 669, 670, 671, 672, 673, 676,
	674, 429, 329, 519, 352, 392, 1440, 1488, 447, 495,
	251, 637, 520, 240, 603, 418, 427, 259, 261, 260,
	235, 511, 608, 246, 266, 207, 1347, 1352, 1345, 0,
	270, 271, 1420, 604, 1348, 1346, 1409, 1410, 1349, 1479,
	1480, 1481, 1465, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 681, 536, 542, 537, 538, 539, 540, 541, 0,
	543, 1444, 1341, 0, 1350, 1351, 419, 1453, 622, 623,
	704, 403, 509, 634, 354, 368, 371, 360, 380, 0,
	381, 356, 357, 362, 365, 366, 367, 372, 373, 377,
	383, 263, 218, 410, 420, 607, 330, 224, 225, 226,
	552, 553, 554, 555, 651, 652, 656, 213, 485, 486,
	487, 488, 308, 645, 326, 491, 490, 350, 351, 398,
	471, 568, 570, 581, 585, 587, 589, 595, 598, 569,
	571, 582, 586, 588, 590, 596, 599, 558, 560, 562,
	564, 577, 576, 573, 601, 602, 579, 584, 563, 575,
	580, 593, 600, 597, 557, 561, 565, 574, 592, 591,
	572, 583, 594, 578, 566, 559, 567, 1413, 204, 229,
	387, 1484, 477, 304, 682, 649, 507, 644, 214, 231,
	1344, 278, 1357, 1366, 0, 1373, 1381, 1382, 1397, 1400,
	1401, 1402, 1403, 1421, 1422, 1424, 1433, 1436, 1439, 1441,
	1448, 1466, 1487, 206, 208, 217, 230, 242, 247, 254,
	277, 292, 294, 301, 314, 327, 328, 337, 338, 341,
	347, 399, 406, 407, 408, 409, 431, 432, 433, 436,
	439, 440, 443, 445, 446, 449, 453, 457, 458, 459,
	461, 463, 465, 478, 483, 497, 498, 499, 500, 501,
	504, 505, 512, 513, 514, 515, 516, 524, 525, 530,
	531, 532, 533, 544, 617, 619, 636, 657, 664, 503,
	404, 1434, 475, 610, 1430, 1391, 317, 318, 466, 467,
	332, 333, 678, 679, 316, 631, 665, 628, 677, 659,
	460, 397, 1412, 1418, 400, 297, 322, 339, 1427, 648,
	526, 236, 489, 306, 265, 1447, 1449, 219, 257, 239,
	275, 290, 293, 343, 411, 421, 451, 456, 312, 287,
	255, 482, 252, 508, 547, 548, 549, 551, 415, 282,
	455, 1408, 1438, 395, 605, 606, 335, 1473, 1452, 556,
	0, 1392, 1476, 1356, 1377, 1486, 1380, 1384, 1429, 1331,
	1407, 438, 1374, 1360, 1326, 1368, 1327, 1358, 1394, 286,
	1355, 1454, 1411, 1475, 385, 283, 1333, 1324, 212, 529,
	1361, 452, 1379, 211, 1432, 510, 268, 396, 393, 614,
	298, 289, 285, 264, 336, 405, 450, 546, 444, 1482,
	389, 1417, 650, 521, 422, 0, 0, 0, 1459, 1458,
	1385, 1396, 1464, 1405, 1445, 1390, 1431, 1343, 1383, 1416,
	1477, 1375, 1426, 1478, 342, 262, 344, 210, 435, 522,
	302, 0, 0, 0, 0, 0, 535, 756, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	256, 0, 0, 0, 370, 379, 378, 358, 359, 361,
	363, 369, 376, 382, 355, 364, 1371, 1423, 640, 1471,
	1372, 1425, 281, 340, 288, 280, 611, 1483, 1463, 1330,
	1404, 1470, 1399, 627, 0, 0, 238, 1474, 1398, 0,
	1428, 0, 1489, 1325, 1419, 0, 1328, 1332, 1485, 1468,
	1364, 1365, 291, 0, 0, 0, 0, 0, 0, 0,
	1395, 1406, 1442, 1446, 1388, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 1362, 0, 1415, 0, 0, 0,
	1337, 1329, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1393, 0, 0, 0, 0, 1342,
	0, 1363, 1443, 0, 1323, 313, 1334, 423, 273, 0,
	476, 1354, 319, 334, 1340, 1369, 1472, 1460, 1461, 1462,
	1339, 1450, 1467, 1389, 661, 1469, 1387, 1386, 1437, 1338,
	1457, 1378, 384, 1336, 349, 205, 233, 0, 1376, 434,
	484, 496, 1456, 1455, 1359, 1370, 269, 1367, 494, 448,
	635, 243, 300, 481, 454, 492, 462, 303, 1414, 1435,
	493, 391, 616, 472, 632, 662, 663, 279, 428, 646,
	550, 655, 680, 234, 276, 442, 534, 638, 518, 417,
	612, 613, 348, 517, 311, 209, 388, 668, 232, 502,
	390, 253, 241, 618, 643, 315, 267, 305, 479, 0,
	675, 221, 545, 629, 250, 506, 0, 0, 683, 258,
	528, 641, 630, 223, 625, 527, 413, 345, 346, 222,
	0, 480, 284, 309, 0, 0, 274, 437, 620, 621,
	272, 684, 237, 654, 228, 1335, 653, 430, 615, 626,
	414, 402, 227, 624, 412, 401, 353, 374, 375, 296,
	324, 469, 394, 470, 323, 325, 425, 424, 426, 215,
	639, 658, 0, 216, 0, 523, 642, 685, 474, 220,
	244, 245, 248, 1353, 295, 299, 307, 310, 320, 321,
	331, 386, 441, 468, 464, 473, 1451, 609, 633, 647,
	660, 666, 667, 669, 670, 671, 672, 673, 676, 674,
	429, 329, 519, 352, 392, 1440, 1488, 447, 495, 251,
	637, 520, 240, 603, 418, 427, 259, 261, 260, 235,
	511, 608, 246, 266, 207, 1347, 1352, 1345, 0, 270,
	271, 1420, 604, 1348, 1346, 1409, 1410, 1349, 1479, 1480,
	1481, 1465, 686, 687, 688, 689, 690, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 703,
	681, 536, 542, 537, 538, 539, 540, 541, 0, 543,
	1444, 1341, 0, 1350, 1351, 419, 1453, 622, 623, 704,
	403, 509, 634, 354, 368, 371, 360, 380, 0, 381,
	356, 357, 362, 365, 366, 367, 372, 373, 377, 383,
	263, 218, 410, 420, 607, 330, 224, 225, 226, 552,
	553, 554, 555, 651, 652, 656, 213, 485, 486, 487,
	488, 308, 645, 326, 491, 490, 350, 351, 398, 471,
	568, 570, 581, 585, 587, 589, 595, 598, 569, 571,
	582, 586, 588, 590, 596, 599, 558, 560, 562, 564,
	577, 576, 573, 601, 602, 579, 584, 563, 575, 580,
	593, 600, 597, 557, 561, 565, 574, 592, 591, 572,
	583, 594, 578, 566, 559, 567, 1413, 204, 229, 387,
	1484, 477, 304, 682, 649, 507, 644, 214, 231, 1344,
	278, 1357, 1366, 0, 1373, 1381, 1382, 1397, 1400, 1401,
	1402, 1403, 1421, 1422, 1424, 1433, 1436, 1439, 1441, 1448,
	1466, 1487, 206, 208, 217, 230, 242, 247, 254, 277,
	292, 294, 301, 314, 327, 328, 337, 338, 341, 347,
	399, 406, 407, 408, 409, 431, 432, 433, 436, 439,
	440, 443, 445, 446, 449, 453, 457, 458, 459, 461,
	463, 465, 478, 483, 497, 498, 499, 500, 501, 504,
	505, 512, 513, 514, 515, 516, 524, 525, 530, 531,
	532, 533, 544, 617, 619, 636, 657, 664, 503, 404,
	1434, 475, 610, 1430, 1391, 317, 318, 466, 467, 332,
	333, 678, 679, 316, 631, 665, 628, 677, 659, 460,
	397, 1412, 1418, 400, 297, 322, 339, 1427, 648, 526,
	236, 489, 306, 265, 1447, 1449, 219, 257, 239, 275,
	290, 293, 343, 411, 421, 451, 456, 312, 287, 255,
	482, 252, 508, 547, 548, 549, 551, 415, 282, 455,
	1408, 1438, 395, 605, 606, 335, 1473, 1452, 556, 0,
	1392, 1476, 1356, 1377, 1486, 1380, 1384, 1429, 1331, 1407,
	438, 1374, 1360, 1326, 1368, 1327, 1358, 1394, 286, 1355,
	1454, 1411, 1475, 385, 283, 1333, 1324, 212, 529, 1361,
	452, 1379, 211, 1432, 510, 268, 396, 393, 614, 298,
	289, 285, 264, 336, 405, 450, 546, 444, 1482, 389,
	1417, 650, 521, 422, 0, 0, 0, 1459, 1458, 1385,
	1396, 1464, 1405, 1445, 1390, 1431, 1343, 1383, 1416, 1477,
	1375, 1426, 1478, 342, 262, 344, 210, 435, 522, 302,
	0, 0, 0, 0, 0, 535, 991, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 256,
	0, 0, 0, 370, 379, 378, 358, 359, 361, 363,
	369, 376, 382, 355, 364, 1371, 1423, 640, 1471, 1372,
	1425, 281, 340, 288, 280, 611, 1483, 1463, 1330, 1404,
	1470, 1399, 627, 0, 0, 238, 1474, 1398, 0, 1428,
	0, 1489, 1325, 1419, 0, 1328, 1332, 1485, 1468, 1364,
	1365, 291, 0, 0, 0, 0, 0, 0, 0, 1395,
	1406, 1442, 1446, 1388, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 1362, 0, 1415, 0, 0, 0, 1337,
	1329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1393, 0, 0, 0, 0, 1342, 0,
	1363, 1443, 0, 1323, 313, 1334, 423, 273, 0, 476,
	1354, 319, 334, 1340, 1369, 1472, 1460, 1461, 1462, 1339,
	1450, 1467, 1389, 661, 1469, 1387, 1386, 1437, 1338, 1457,
	1378, 384, 1336, 349, 205, 233, 0, 1376, 434, 484,
	496, 1456, 1455, 1359, 1370, 269, 1367, 494, 448, 635,
	243, 300, 481, 454, 492, 462, 303, 1414, 1435, 493,
	391, 616, 472, 632, 662, 663, 279, 428, 646, 550,
	655, 680, 234, 276, 442, 534, 638, 518, 417, 612,
	613, 348, 517, 311, 209, 388, 668, 232, 502, 390,
	253, 241, 618, 643, 315, 267, 305, 479, 0, 675,
	221, 545, 629, 250, 506, 0, 0, 683, 258, 528,
	641, 630, 223, 625, 527, 413, 345, 346, 222, 0,
	480, 284, 309, 0, 0, 274, 437, 620, 621, 272,
	684, 237, 654, 228, 1335, 653, 430, 615, 626, 414,
	402, 227, 624, 412, 401, 353, 374, 375, 296, 324,
	469, 394, 470, 323, 325, 425, 424, 426, 215, 639,
	658, 0, 216, 0, 523, 642, 685, 474, 220, 244,
	245, 248, 1353, 295, 299, 307, 310, 320, 321, 331,
	386, 441, 468, 464, 473, 1451, 609, 633, 647, 660,
	666, 667, 669, 670, 671, 672, 673, 676, 674, 429,
	329, 519, 352, 392, 1440, 1488, 447, 495, 251, 637,
	520, 240, 603, 418, 427, 259, 261, 260, 235, 511,
	608, 246, 266, 207, 1347, 1352, 1345, 0, 270, 271,
	1420, 604, 1348, 1346, 1409, 1410, 1349, 1479, 1480, 1481,
	1465, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 681,
	536, 542, 537, 538, 539, 540, 541, 0, 543, 1444,
	1341, 0, 1350, 1351, 419, 1453, 622, 623, 704, 403,
	509, 634, 354, 368, 371, 360, 380, 0, 381, 356,
	357, 362, 365, 366, 367, 372, 373, 377, 383, 263,
	218, 410, 420, 607, 330, 224, 225, 226, 552, 553,
	554, 555, 651, 652, 656, 213, 485, 486, 487, 488,
	308, 645, 326, 491, 490, 350, 351, 398, 471, 568,
	570, 581, 585, 587, 589, 595, 598, 569, 571, 582,
	586, 588, 590, 596, 599, 558, 560, 562, 564, 577,
	576, 573, 601, 602, 579, 584, 563, 575, 580, 593,
	600, 597, 557, 561, 565, 574, 592, 591, 572, 583,
	594, 578, 566, 559, 567, 1413, 204, 229, 387, 1484,
	477, 304, 682, 649, 507, 644, 214, 231, 1344, 278,
	1357, 1366, 0, 1373, 1381, 1382, 1397, 1400, 1401, 1402,
	1403, 1421, 1422, 1424, 1433, 1436, 1439, 1441, 1448, 1466,
	1487, 206, 208, 217, 230, 242, 247, 254, 277, 292,
	294, 301, 314, 327, 328, 337, 338, 341, 347, 399,
	406, 407, 408, 409, 431, 432, 433, 436, 439, 440,
	443, 445, 446, 449, 453, 457, 458, 459, 461, 463,
	465, 478, 483, 497, 498, 499, 500, 501, 504, 505,
	512, 513, 514, 515, 516, 524, 525, 530, 531, 532,
	533, 544, 617, 619, 636, 657, 664, 503, 404, 1434,
	475, 610, 1430, 1391, 317, 318, 466, 467, 332, 333,
	678, 679, 316, 631, 665, 628, 677, 659, 460, 397,
	1412, 1418, 400, 297, 322, 339, 1427, 648, 526, 236,
	489, 306, 265, 1447, 1449, 219, 257, 239, 275, 290,
	293, 343, 411, 421, 451, 456, 312, 287, 255, 482,
	252, 508, 547, 548, 549, 551, 415, 282, 455, 1408,
	1438, 395, 605, 606, 335, 556, 0, 809, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 438, 0, 0,
	0, 796, 0, 0, 0, 286, 801, 0, 0, 0,
	385, 283, 0, 0, 212, 529, 0, 452, 0, 211,
	0, 510, 268, 396, 393, 614, 298, 289, 285, 264,
	336, 405, 450, 546, 444, 808, 389, 0, 650, 521,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 803,
	804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 262, 344, 210, 435, 522, 302, 0, 101, 0,
	0, 1057, 535, 991, 780, 957, 995, 1058, 1009, 1010,
	1011, 996, 0, 249, 997, 998, 256, 999, 0, 956,
	839, 841, 840, 906, 907, 908, 909, 910, 911, 912,
	842, 843, 837, 1004, 640, 1012, 1013, 0, 281, 340,
	288, 280, 611, 0, 0, 2297, 2298, 2299, 0, 627,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	776, 793, 0, 807, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 790, 791, 0, 0,
	0, 0, 951, 0, 792, 0, 0, 800, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
	1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055,
	802, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 423, 273, 0, 476, 0, 319, 334,
	0, 0, 0, 0, 0, 0, 0, 950, 0, 0,
	661, 0, 0, 948, 0, 0, 0, 0, 384, 0,
	349, 205, 233, 0, 0, 434, 484, 496, 0, 0,
	0, 0, 1001, 0, 494, 448, 635, 243, 300, 481,
	454, 492, 462, 303, 0, 0, 493, 391, 616, 472,
	632, 662, 663, 279, 428, 646, 550, 655, 680, 234,
	276, 442, 534, 638, 518, 417, 612, 613, 348, 517,
	311, 209, 388, 668, 232, 502, 390, 253, 241, 618,
	643, 315, 267, 305, 479, 0, 675, 221, 545, 629,
	250, 506, 0, 0, 683, 258, 528, 641, 630, 223,
	625, 527, 413, 345, 346, 222, 0, 480, 284, 309,
	0, 0, 274, 437, 1002, 1003, 272, 684, 847, 654,
	228, 0, 653, 430, 615, 626, 414, 402, 227, 624,
	412, 401, 353, 855, 856, 296, 324, 932, 931, 930,
	323, 325, 928, 929, 927, 215, 639, 658, 0, 216,
	0, 523, 642, 685, 474, 220, 244, 245, 248, 0,
	295, 299, 307, 310, 320, 321, 331, 386, 441, 468,
	464, 473, 0, 609, 633, 647, 660, 666, 667, 669,
	670, 671, 672, 673, 676, 674, 429, 329, 519, 352,
	392, 0, 0, 447, 495, 251, 637, 520, 240, 603,
	418, 427, 259, 261, 260, 235, 511, 608, 246, 266,
	938, 960, 949, 813, 814, 939, 940, 964, 941, 816,
	817, 961, 962, 810, 811, 815, 963, 965, 686, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 681, 536, 542, 537,
	538, 539, 540, 541, 0, 543, 952, 799, 798, 0,
	805, 806, 0, 835, 836, 838, 844, 845, 846, 857,
	904, 905, 913, 915, 916, 914, 917, 918, 919, 922,
	923, 924, 925, 920, 921, 926, 818, 822, 819, 820,
	821, 833, 823, 824, 825, 826, 827, 828, 829, 830,
	831, 832, 834, 975, 976, 977, 978, 979, 980, 850,
	854, 853, 851, 852, 848, 849, 876, 875, 877, 878,
	879, 880, 881, 882, 884, 883, 885, 886, 887, 888,
	889, 890, 858, 859, 862, 863, 861, 860, 864, 873,
	874, 865, 866, 867, 868, 869, 870, 872, 871, 891,
	892, 893, 894, 895, 897, 896, 900, 901, 899, 898,
	903, 902, 797, 204, 229, 387, 0, 477, 304, 682,
	649, 507, 644, 214, 231, 966, 278, 967, 0, 0,
	971, 0, 0, 0, 973, 972, 0, 974, 936, 935,
	0, 0, 968, 969, 0, 970, 0, 0, 206, 208,
	217, 230, 242, 247, 254, 277, 292, 294, 301, 314,
	327, 328, 337, 338, 341, 347, 399, 406, 407, 408,
	409, 431, 432, 433, 436, 439, 440, 443, 445, 446,
	449, 453, 457, 458, 459, 461, 463, 465, 478, 483,
	497, 498, 499, 500, 501, 504, 505, 512, 513, 514,
	515, 516, 524, 525, 530, 531, 532, 533, 544, 617,
	619, 636, 657, 664, 503, 404, 0, 475, 610, 0,
	0, 981, 982, 983, 984, 985, 986, 987, 988, 316,
	631, 665, 628, 677, 659, 460, 397, 0, 0, 400,
	297, 322, 339, 0, 648, 526, 236, 489, 306, 265,
	1056, 0, 219, 257, 239, 275, 290, 293, 343, 411,
	421, 451, 456, 312, 287, 255, 482, 252, 508, 547,
	548, 549, 551, 415, 282, 455, 0, 0, 395, 605,
	606, 335, 556, 0, 809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 438, 0, 0, 0, 796, 0,
	0, 0, 286, 801, 0, 0, 0, 385, 283, 0,
	0, 212, 529, 0, 452, 0, 211, 0, 510, 268,
	396, 393, 614, 298, 289, 285, 264, 336, 405, 450,
	546, 444, 808, 389, 0, 650, 521, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 803, 804, 0, 0,
	0, 0, 0, 0, 0, 2518, 0, 342, 262, 344,
	210, 435, 522, 302, 0, 101, 0, 0, 1057, 535,
	991, 780, 957, 995, 1058, 1009, 1010, 1011, 996, 0,
	249, 997, 998, 256, 999, 0, 956, 839, 841, 840,
	906, 907, 908, 909, 910, 911, 912, 842, 843, 837,
	1004, 640, 1012, 1013, 2519, 281, 340, 288, 280, 611,
	0, 0, 0, 0, 0, 0, 627, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 776, 793, 0,
	807, 0, 0, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 790, 791, 0, 0, 0, 0, 951,
	0, 792, 0, 0, 800, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 802, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	423, 273, 0, 476, 0, 319, 334, 0, 0, 0,
	0, 0, 0, 0, 950, 0, 0, 661, 0, 0,
	948, 0, 0, 0, 0, 384, 0, 349, 205, 233,
	0, 0, 434, 484, 496, 0, 0, 0, 0, 1001,
	0, 494, 448, 635, 243, 300, 481, 454, 492, 462,
	303, 0, 0, 493, 391, 616, 472, 632, 662, 663,
	279, 428, 646, 550, 655, 680, 234, 276, 442, 534,
	638, 518, 417, 612, 613, 348, 517, 311, 209, 388,
	668, 232, 502, 390, 253, 241, 618, 643, 315, 267,
	305, 479, 0, 675, 221, 545, 629, 250, 506, 0,
	0, 683, 258, 528, 641, 630, 223, 625, 527, 413,
	345, 346, 222, 0, 480, 284, 309, 0, 0, 274,
	437, 1002, 1003, 272, 684, 847, 654, 228, 0, 653,
	430, 615, 626, 414, 402, 227, 624, 412, 401, 353,
	855, 856, 296, 324, 932, 931, 930, 323, 325, 928,
	929, 927, 215, 639, 658, 0, 216, 0, 523, 642,
	685, 474, 220, 244, 245, 248, 0, 295, 299, 307,
	310, 320, 321, 331, 386, 441, 468, 464, 473, 0,
	609, 633, 647, 660, 666, 667, 669, 670, 671, 672,
	673, 676, 674, 429, 329, 519, 352, 392, 0, 0,
	447, 495, 251, 637, 520, 240, 603, 418, 427, 259,
	261, 260, 235, 511, 608, 246, 266, 938, 960, 949,
	813, 814, 939, 940, 964, 941, 816, 817, 961, 962,
	810, 811, 815, 963, 965, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 681, 536, 542, 537, 538, 539, 540,
	541, 0, 543, 952, 799, 798, 0, 805, 806, 0,
	835, 836, 838, 844, 845, 846, 857, 904, 905, 913,
	915, 916, 914, 917, 918, 919, 922, 923, 924, 925,
	920, 921, 926, 818, 822, 819, 820, 821, 833, 823,
	824, 825, 826, 827, 828, 829, 830, 831, 832, 834,
	975, 976, 977, 978, 979, 980, 850, 854, 853, 851,
	852, 848, 849, 876, 875, 877, 878, 879, 880, 881,
	882, 884, 883, 885, 886, 887, 888, 889, 890, 858,
	859, 862, 863, 861, 860, 864, 873, 874, 865, 866,
	867, 868, 869, 870, 872, 871, 891, 892, 893, 894,
	895, 897, 896, 900, 901, 899, 898, 903, 902, 797,
	204, 229, 387, 0, 477, 304, 682, 649, 507, 644,
	214, 231, 966, 278, 967, 0, 0, 971, 0, 0,
	0, 973, 972, 0, 974, 936, 935, 0, 0, 968,
	969, 0, 970, 0, 0, 206, 208, 217, 230, 242,
	247, 254, 277, 292, 294, 301, 314, 327, 328, 337,
	338, 341, 347, 399, 406, 407, 408, 409, 431, 432,
	433, 436, 439, 440, 443, 445, 446, 449, 453, 457,
	458, 459, 461, 463, 465, 478, 483, 497, 498, 499,
	500, 501, 504, 505, 512, 513, 514, 515, 516, 524,
	525, 530, 531, 532, 533, 544, 617, 619, 636, 657,
	664, 503, 404, 0, 475, 610, 0, 0, 981, 982,
	983, 984, 985, 986, 987, 988, 316, 631, 665, 628,
	677, 659, 460, 397, 0, 0, 400, 297, 322, 339,
	0, 648, 526, 236, 489, 306, 265, 1056, 0, 219,
	257, 239, 275, 290, 293, 343, 411, 421, 451, 456,
	312, 287, 255, 482, 252, 508, 547, 548, 549, 551,
	415, 282, 455, 0, 0, 395, 605, 606, 335, 91,
	556, 0, 809, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 438, 0, 0, 0, 796, 0, 0, 0,
	286, 801, 0, 0, 0, 385, 283, 0, 0, 212,
	529, 0, 452, 0, 211, 0, 510, 268, 396, 393,
	614, 298, 289, 285, 264, 336, 405, 450, 546, 444,
	1769, 389, 0, 650, 521, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 803, 804, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 262, 344, 210, 435,
	522, 302, 0, 101, 0, 0, 1057, 535, 991, 780,
	957, 995, 1058, 1009, 1010, 1011, 996, 0, 249, 997,
	998, 256, 999, 0, 956, 839, 841, 840, 906, 907,
	908, 909, 910, 911, 912, 842, 843, 837, 1004, 640,
	1012, 1013, 0, 281, 340, 288, 280, 611, 0, 0,
	0, 0, 0, 0, 627, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 776, 793, 0, 807, 0,
	0, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 790, 791, 0, 0, 0, 0, 951, 0, 792,
	0, 0, 800, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
	1051, 1052, 1053, 1054, 1055, 802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 423, 273,
	0, 476, 0, 319, 334, 0, 0, 0, 0, 0,
	0, 0, 950, 0, 0, 661, 0, 0, 948, 0,
	0, 0, 0, 384, 0, 349, 205, 233, 0, 0,
	434, 484, 496, 0, 0, 0, 0, 1001, 0, 494,
	448, 635, 243, 300, 481, 454, 492, 462, 303, 0,
	0, 493, 391, 616, 472, 632, 662, 663, 279, 428,
	646, 550, 655, 680, 234, 276, 442, 534, 638, 518,
	417, 612, 613, 348, 517, 311, 209, 388, 668, 232,
	502, 390, 253, 241, 618, 643, 315, 267, 305, 479,
	0, 675, 221, 545, 629, 250, 506, 0, 0, 683,
	258, 528, 641, 630, 223, 625, 527, 413, 345, 346,
	222, 0, 480, 284, 309, 0, 0, 274, 437, 1002,
	1003, 272, 684, 847, 654, 228, 0, 653, 430, 615,
	626, 414, 402, 227, 624, 412, 401, 353, 855, 856,
	296, 324, 932, 931, 930, 323, 325, 928, 929, 927,
	215, 639, 658, 0, 216, 0, 523, 642, 685, 474,
	220, 244, 245, 248, 0, 295, 299, 307, 310, 320,
	321, 331, 386, 441, 468, 464, 473, 0, 609, 633,
	647, 660, 666, 667, 669, 670, 671, 672, 673, 676,
	674, 429, 329, 519, 352, 392, 0, 0, 447, 495,
	251, 637, 520, 240, 603, 418, 427, 259, 261, 260,
	235, 511, 608, 246, 266, 938, 960, 949, 813, 814,
	939, 940, 964, 941, 816, 817, 961, 962, 810, 811,
	815, 963, 965, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 681, 536, 542, 537, 538, 539, 540, 541, 0,
	543, 952, 799, 798, 0, 805, 806, 0, 835, 836,
	838, 844, 845, 846, 857, 904, 905, 913, 915, 916,
	914, 917, 918, 919, 922, 923, 924, 925, 920, 921,
	926, 818, 822, 819, 820, 821, 833, 823, 824, 825,
	826, 827, 828, 829, 830, 831, 832, 834, 975, 976,
	977, 978, 979, 980, 850, 854, 853, 851, 852, 848,
	849, 876, 875, 877, 878, 879, 880, 881, 882, 884,
	883, 885, 886, 887, 888, 889, 890, 858, 859, 862,
	863, 861, 860, 864, 873, 874, 865, 866, 867, 868,
	869, 870, 872, 871, 891, 892, 893, 894, 895, 897,
	896, 900, 901, 899, 898, 903, 902, 797, 204, 229,
	387, 100, 477, 304, 682, 649, 507, 644, 214, 231,
	966, 278, 967, 0, 0, 971, 0, 0, 0, 973,
	972, 0, 974, 936, 935, 0, 0, 968, 969, 0,
	970, 0, 0, 206, 208, 217, 230, 242, 247, 254,
	277, 292, 294, 301, 314, 327, 328, 337, 338, 341,
	347, 399, 406, 407, 408, 409, 431, 432, 433, 436,
	439, 440, 443, 445, 446, 449, 453, 457, 458, 459,
	461, 463, 465, 478, 483, 497, 498, 499, 500, 501,
	504, 505, 512, 513, 514, 515, 516, 524, 525, 530,
	531, 532, 533, 544, 617, 619, 636, 657, 664, 503,
	404, 0, 475, 610, 0, 0, 981, 982, 983, 984,
	985, 986, 987, 988, 316, 631, 665, 628, 677, 659,
	460, 397, 0, 0, 400, 297, 322, 339, 0, 648,
	526, 236, 489, 306, 265, 1056, 0, 219, 257, 239,
	275, 290, 293, 343, 411, 421, 451, 456, 312, 287,
	255, 482, 252, 508, 547, 548, 549, 551, 415, 282,
	455, 0, 0, 395, 605, 606, 335, 556, 0, 809,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 438,
	0, 0, 0, 796, 0, 0, 0, 286, 801, 0,
	0, 0, 385, 283, 0, 0, 212, 529, 0, 452,
	0, 211, 0, 510, 268, 396, 393, 614, 298, 289,
	285, 264, 336, 405, 450, 546, 444, 808, 389, 0,
	650, 521, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 803, 804, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 262, 344, 210, 435, 522, 302, 0,
	101, 0, 0, 1057, 535, 991, 780, 957, 995, 1058,
	1009, 1010, 1011, 996, 0, 249, 997, 998, 256, 999,
	0, 956, 839, 841, 840, 906, 907, 908, 909, 910,
	911, 912, 842, 843, 837, 1004, 640, 1012, 1013, 0,
	281, 340, 288, 280, 611, 0, 0, 0, 0, 0,
	0, 627, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 776, 793, 0, 807, 0, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 790, 791,
	0, 0, 0, 0, 951, 0, 792, 0, 0, 800,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043,
	1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053,
	1054, 1055, 802, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 0, 423, 273, 0, 476, 0,
	319, 334, 0, 0, 0, 0, 0, 0, 0, 950,
	0, 0, 661, 0, 0, 948, 0, 0, 0, 0,
	384, 0, 349, 205, 233, 0, 0, 434, 484, 496,
	0, 0, 0, 0, 1001, 0, 494, 448, 635, 243,
	300, 481, 454, 492, 462, 303, 4254, 0, 493, 391,
	616, 472, 632, 662, 663, 279, 428, 646, 550, 655,
	680, 234, 276, 442, 534, 638, 518, 417, 612, 613,
	348, 517, 311, 209, 388, 668, 232, 502, 390, 253,
	241, 618, 643, 315, 267, 305, 479, 0, 675, 221,
	545, 629, 250, 506, 0, 0, 683, 258, 528, 641,
	630, 223, 625, 527, 413, 345, 346, 222, 0, 480,
	284, 309, 0, 0, 274, 437, 1002, 1003, 272, 684,
	847, 654, 228, 0, 653, 430, 615, 626, 414, 402,
	227, 624, 412, 401, 353, 855, 856, 296, 324, 932,
	931, 930, 323, 325, 928, 929, 927, 215, 639, 658,
	0, 216, 0, 523, 642, 685, 474, 220, 244, 245,
	248, 0, 295, 299, 307, 310, 320, 321, 331, 386,
	441, 468, 464, 473, 0, 609, 633, 647, 660, 666,
	667, 669, 670, 671, 672, 673, 676, 674, 429, 329,
	519, 352, 392, 0, 0, 447, 495, 251, 637, 520,
	240, 603, 418, 427, 259, 261, 260, 235, 511, 608,
	246, 266, 938, 960, 949, 813, 814, 939, 940, 964,
	941, 816, 817, 961, 962, 810, 811, 815, 963, 965,
	686, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 681, 536,
	542, 537, 538, 539, 540, 541, 0, 543, 952, 799,
	798, 0, 805, 806, 0, 835, 836, 838, 844, 845,
	846, 857, 904, 905, 913, 915, 916, 914, 917, 918,
	919, 922, 923, 924, 925, 920, 921, 926, 818, 822,
	819, 820, 821, 833, 823, 824, 825, 826, 827, 828,
	829, 830, 831, 832, 834, 975, 976, 977, 978, 979,
	980, 850, 854, 853, 851, 852, 848, 849, 876, 875,
	877, 878, 879, 880, 881, 882, 884, 883, 885, 886,
	887, 888, 889, 890, 858, 859, 862, 863, 861, 860,
	864, 873, 874, 865, 866, 867, 868, 869, 870, 872,
	871, 891, 892, 893, 894, 895, 897, 896, 900, 901,
	899, 898, 903, 902, 797, 204, 229, 387, 0, 477,
	304, 682, 649, 507, 644, 214, 231, 966, 278, 967,
	0, 0, 971, 0, 0, 0, 973, 972, 0, 974,
	936, 935, 0, 0, 968, 969, 0, 970, 0, 0,
	206, 208, 217, 230, 242, 247, 254, 277, 292, 294,
	301, 314, 327, 328, 337, 338, 341, 347, 399, 406,
	407, 408, 409, 431, 432, 433, 436, 439, 440, 443,
	445, 446, 449, 453, 457, 458, 459, 461, 463, 465,
	478, 483, 497, 498, 499, 500, 501, 504, 505, 512,
	513, 514, 515, 516, 524, 525, 530, 531, 532, 533,
	544, 617, 619, 636, 657, 664, 503, 404, 0, 475,
	610, 0, 0, 981, 982, 983, 984, 985, 986, 987,
	988, 316, 631, 665, 628, 677, 659, 460, 397, 0,
	0, 400, 297, 322, 339, 0, 648, 526, 236, 489,
	306, 265, 1056, 0, 219, 257, 239, 275, 290, 293,
	343, 411, 421, 451, 456, 312, 287, 255, 482, 252,
	508, 547, 548, 549, 551, 415, 282, 455, 0, 0,
	395, 605, 606, 335, 556, 0, 809, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 438, 0, 0, 0,
	796, 0, 0, 0, 286, 801, 0, 0, 0, 385,
	283, 0, 0, 212, 529, 0, 452, 0, 211, 0,
	510, 268, 396, 393, 614, 298, 289, 285, 264, 336,
	405, 450, 546, 444, 808, 389, 0, 650, 521, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 803, 804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	262, 344, 210, 435, 522, 302, 0, 101, 0, 1806,
	1057, 535, 991, 780, 957, 995, 1058, 1009, 1010, 1011,
	996, 0, 249, 997, 998, 256, 999, 0, 956, 839,
	841, 840, 906, 907, 908, 909, 910, 911, 912, 842,
	843, 837, 1004, 640, 1012, 1013, 0, 281, 340, 288,
	280, 611, 0, 0, 0, 0, 0, 0, 627, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 776,
	793, 0, 807, 0, 0, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 790, 791, 0, 0, 0,
	0, 951, 0, 792, 0, 0, 800, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 423, 273, 0, 476, 0, 319, 334, 0,
	0, 0, 0, 0, 0, 0, 950, 0, 0, 661,
	0, 0, 948, 0, 0, 0, 0, 384, 0, 349,
	205, 233, 0, 0, 434, 484, 496, 0, 0, 0,
	0, 1001, 0, 494, 448, 635, 243, 300, 481, 454,
	492, 462, 303, 0, 0, 493, 391, 616, 472, 632,
	662, 663, 279, 428, 646, 550, 655, 680, 234, 276,
	442, 534, 638, 518, 417, 612, 613, 348, 517, 311,
	209, 388, 668, 232, 502, 390, 253, 241, 618, 643,
	315, 267, 305, 479, 0, 675, 221, 545, 629, 250,
	506, 0, 0, 683, 258, 528, 641, 630, 223, 625,
	527, 413, 345, 346, 222, 0, 480, 284, 309, 0,
	0, 274, 437, 1002, 1003, 272, 684, 847, 654, 228,
	0, 653, 430, 615, 626, 414, 402, 227, 624, 412,
	401, 353, 855, 856, 296, 324, 932, 931, 930, 323,
	325, 928, 929, 927, 215, 639, 658, 0, 216, 0,
	523, 642, 685, 474, 220, 244, 245, 248, 0, 295,
	299, 307, 310, 320, 321, 331, 386, 441, 468, 464,
	473, 0, 609, 633, 647, 660, 666, 667, 669, 670,
	671, 672, 673, 676, 674, 429, 329, 519, 352, 392,
	0, 0, 447, 495, 251, 637, 520, 240, 603, 418,
	427, 259, 261, 260, 235, 511, 608, 246, 266, 938,
	960, 949, 813, 814, 939, 940, 964, 941, 816, 817,
	961, 962, 810, 811, 815, 963, 965, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 681, 536, 542, 537, 538,
	539, 540, 541, 0, 543, 952, 799, 798, 0, 805,
	806, 0, 835, 836, 838, 844, 845, 846, 857, 904,
	905, 913, 915, 916, 914, 917, 918, 919, 922, 923,
	924, 925, 920, 921, 926, 818, 822, 819, 820, 821,
	833, 823, 824, 825, 826, 827, 828, 829, 830, 831,
	832, 834, 975, 976, 977, 978, 979, 980, 850, 854,
	853, 851, 852, 848, 849, 876, 875, 877, 878, 879,
	880, 881, 882, 884, 883, 885, 886, 887, 888, 889,
	890, 858, 859, 862, 863, 861, 860, 864, 873, 874,
	865, 866, 867, 868, 869, 870, 872, 871, 891, 892,
	893, 894, 895, 897, 896, 900, 901, 899, 898, 903,
	902, 797, 204, 229, 387, 0, 477, 304, 682, 649,
	507, 644, 214, 231, 966, 278, 967, 0, 0, 971,
	0, 0, 0, 973, 972, 0, 974, 936, 935, 0,
	0, 968, 969, 0, 970, 0, 0, 206, 208, 217,
	230, 242, 247, 254, 277, 292, 294, 301, 314, 327,
	328, 337, 338, 341, 347, 399, 406, 407, 408, 409,
	431, 432, 433, 436, 439, 440, 443, 445, 446, 449,
	453, 457, 458, 459, 461, 463, 465, 478, 483, 497,
	498, 499, 500, 501, 504, 505, 512, 513, 514, 515,
	516, 524, 525, 530, 531, 532, 533, 544, 617, 619,
	636, 657, 664, 503, 404, 0, 475, 610, 0, 0,
	981, 982, 983, 984, 985, 986, 987, 988, 316, 631,
	665, 628, 677, 659, 460, 397, 0, 0, 400, 297,
	322, 339, 0, 648, 526, 236, 489, 306, 265, 1056,
	0, 219, 257, 239, 275, 290, 293, 343, 411, 421,
	451, 456, 312, 287, 255, 482, 252, 508, 547, 548,
	549, 551, 415, 282, 455, 0, 0, 395, 605, 606,
	335, 556, 0, 809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 438, 0, 0, 0, 796, 0, 0,
	0, 286, 801, 0, 0, 0, 385, 283, 0, 0,
	212, 529, 0, 452, 0, 211, 0, 510, 268, 396,
	393, 614, 298, 289, 285, 264, 336, 405, 450, 546,
	444, 808, 389, 0, 650, 521, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 803, 804, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 262, 344, 210,
	435, 522, 302, 0, 101, 0, 0, 1057, 535, 991,
	780, 957, 995, 1058, 1009, 1010, 1011, 996, 0, 249,
	997, 998, 256, 999, 0, 956, 839, 841, 840, 906,
	907, 908, 909, 910, 911, 912, 842, 843, 837, 1004,
	640, 1012, 1013, 0, 281, 340, 288, 280, 611, 0,
	0, 0, 0, 0, 0, 627, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 776, 793, 0, 807,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 790, 791, 1110, 0, 0, 0, 951, 0,
	792, 0, 0, 800, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049,
	1050, 1051, 1052, 1053, 1054, 1055, 802, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 423,
	273, 0, 476, 0, 319, 334, 0, 0, 0, 0,
	0, 0, 0, 950, 0, 0, 661, 0, 0, 948,
	0, 0, 0, 0, 384, 0, 349, 205, 233, 0,
	0, 434, 484, 496, 0, 0, 0, 0, 1001, 0,
	494, 448, 635, 243, 300, 481, 454, 492, 462, 303,
	0, 0, 493, 391, 616, 472, 632, 662, 663, 279,
	428, 646, 550, 655, 680, 234, 276, 442, 534, 638,
	518, 417, 612, 613, 348, 517, 311, 209, 388, 668,
	232, 502, 390, 253, 241, 618, 643, 315, 267, 305,
	479, 0, 675, 221, 545, 629, 250, 506, 0, 0,
	683, 258, 528, 641, 630, 223, 625, 527, 413, 345,
	346, 222, 0, 480, 284, 309, 0, 0, 274, 437,
	1002, 1003, 272, 684, 847, 654, 228, 0, 653, 430,
	615, 626, 414, 402, 227, 624, 412, 401, 353, 855,
	856, 296, 324, 932, 931, 930, 323, 325, 928, 929,
	927, 215, 639, 658, 0, 216, 0, 523, 642, 685,
	474, 220, 244, 245, 248, 0, 295, 299, 307, 310,
	320, 321, 331, 386, 441, 468, 464, 473, 0, 609,
	633, 647, 660, 666, 667, 669, 670, 671, 672, 673,
	676, 674, 429, 329, 519, 352, 392, 0, 0, 447,
	495, 251, 637, 520, 240, 603, 418, 427, 259, 261,
	260, 235, 511, 608, 246, 266, 938, 960, 949, 813,
	814, 939, 940, 964, 941, 816, 817, 961, 962, 810,
	811, 815, 963, 965, 686, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 681, 536, 542, 537, 538, 539, 540, 541,
	0, 543, 952, 799, 798, 0, 805, 806, 0, 835,
	836, 838, 844, 845, 846, 857, 904, 905, 913, 915,
	916, 914, 917, 918, 919, 922, 923, 924, 925, 920,
	921, 926, 818, 822, 819, 820, 821, 833, 823, 824,
	825, 826, 827, 828, 829, 830, 831, 832, 834, 975,
	976, 977, 978, 979, 980, 850, 854, 853, 851, 852,
	848, 849, 876, 875, 877, 878, 879, 880, 881, 882,
	884, 883, 885, 886, 887, 888, 889, 890, 858, 859,
	862, 863, 861, 860, 864, 873, 874, 865, 866, 867,
	868, 869, 870, 872, 871, 891, 892, 893, 894, 895,
	897, 896, 900, 901, 899, 898, 903, 902, 797, 204,
	229, 387, 0, 477, 304, 682, 649, 507, 644, 214,
	231, 966, 278, 967, 0, 0, 971, 0, 0, 0,
	973, 972, 0, 974, 936, 935, 0, 0, 968, 969,
	0, 970, 0, 0, 206, 208, 217, 230, 242, 247,
	254, 277, 292, 294, 301, 314, 327, 328, 337, 338,
	341, 347, 399, 406, 407, 408, 409, 431, 432, 433,
	436, 439, 440, 443, 445, 446, 449, 453, 457, 458,
	459, 461, 463, 465, 478, 483, 497, 498, 499, 500,
	501, 504, 505, 512, 513, 514, 515, 516, 524, 525,
	530, 531, 532, 533, 544, 617, 619, 636, 657, 664,
	503, 404, 0, 475, 610, 0, 0, 981, 982, 983,
	984, 985, 986, 987, 988, 316, 631, 665, 628, 677,
	659, 460, 397, 0, 0, 400, 297, 322, 339, 0,
	648, 526, 236, 489, 306, 265, 1056, 0, 219, 257,
	239, 275, 290, 293, 343, 411, 421, 451, 456, 312,
	287, 255, 482, 252, 508, 547, 548, 549, 551, 415,
	282, 455, 0, 0, 395, 605, 606, 335, 556, 0,
	809, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	438, 0, 0, 0, 796, 0, 0, 0, 286, 801,
	0, 0, 0, 385, 283, 0, 0, 212, 529, 0,
	452, 0, 211, 0, 510, 268, 396, 393, 614, 298,
	289, 285, 264, 336, 405, 450, 546, 444, 808, 389,
	0, 650, 521, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 803, 804, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 262, 344, 210, 435, 522, 302,
	0, 101, 0, 0, 1057, 535, 991, 780, 957, 995,
	1058, 1009, 1010, 1011, 996, 0, 249, 997, 998, 256,
	999, 0, 956, 839, 841, 840, 906, 907, 908, 909,
	910, 911, 912, 842, 843, 837, 1004, 640, 1012, 1013,
	0, 281, 340, 288, 280, 611, 0, 0, 0, 0,
	0, 0, 627, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 776, 793, 0, 807, 0, 0, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 790,
	791, 0, 0, 0, 0, 951, 0, 792, 0, 0,
	800, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032,
	1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042,
	1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052,
	1053, 1054, 1055, 802, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 423, 273, 0, 476,
	0, 319, 334, 0, 0, 0, 0, 0, 0, 0,
	950, 0, 0, 661, 0, 0, 948, 0, 0, 0,
	0, 384, 0, 349, 205, 233, 0, 0, 434, 484,
	496, 0, 0, 0, 0, 1001, 0, 494, 448, 635,
	243, 300, 481, 454, 492, 462, 303, 0, 0, 493,
	391, 616, 472, 632, 662, 663, 279, 428, 646, 550,
	655, 680, 234, 276, 442, 534, 638, 518, 417, 612,
	613, 348, 517, 311, 209, 388, 668, 232, 502, 390,
	253, 241, 618, 643, 315, 267, 305, 479, 0, 675,
	221, 545, 629, 250, 506, 0, 0, 683, 258, 528,
	641, 630, 223, 625, 527, 413, 345, 346, 222, 0,
	480, 284, 309, 0, 0, 274, 437, 1002, 1003, 272,
	684, 847, 654, 228, 0, 653, 430, 615, 626, 414,
	402, 227, 624, 412, 401, 353, 855, 856, 296, 324,
	932, 931, 930, 323, 325, 928, 929, 927, 215, 639,
	658, 0, 216, 0, 523, 642, 685, 474, 220, 244,
	245, 248, 0, 295, 299, 307, 310, 320, 321, 331,
	386, 441, 468, 464, 473, 0, 609, 633, 647, 660,
	666, 667, 669, 670, 671, 672, 673, 676, 674, 429,
	329, 519, 352, 392, 0, 0, 447, 495, 251, 637,
	520, 240, 603, 418, 427, 259, 261, 260, 235, 511,
	608, 246, 266, 938, 960, 949, 813, 814, 939, 940,
	964, 941, 816, 817, 961, 962, 810, 811, 815, 963,
	965, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 681,
	536, 542, 537, 538, 539, 540, 541, 0, 543, 952,
	799, 798, 0, 805, 806, 0, 835, 836, 838, 844,
	845, 846, 857, 904, 905, 913, 915, 916, 914, 917,
	918, 919, 922, 923, 924, 925, 920, 921, 926, 818,
	822, 819, 820, 821, 833, 823, 824, 825, 826, 827,
	828, 829, 830, 831, 832, 834, 975, 976, 977, 978,
	979, 980, 850, 854, 853, 851, 852, 848, 849, 876,
	875, 877, 878, 879, 880, 881, 882, 884, 883, 885,
	886, 887, 888, 889, 890, 858, 859, 862, 863, 861,
	860, 864, 873, 874, 865, 866, 867, 868, 869, 870,
	872, 871, 891, 892, 893, 894, 895, 897, 896, 900,
	901, 899, 898, 903, 902, 797, 204, 229, 387, 0,
	477, 304, 682, 649, 507, 644, 214, 231, 966, 278,
	967, 0, 0, 971, 0, 0, 0, 973, 972, 0,
	974, 936, 935, 0, 0, 968, 969, 0, 970, 0,
	0, 206, 208, 217, 230, 242, 247, 254, 277, 292,
	294, 301, 314, 327, 328, 337, 338, 341, 347, 399,
	406, 407, 408, 409, 431, 432, 433, 436, 439, 440,
	443, 445, 446, 449, 453, 457, 458, 459, 461, 463,
	465, 478, 483, 497, 498, 499, 500, 501, 504, 505,
	512, 513, 514, 515, 516, 524, 525, 530, 531, 532,
	533, 544, 617, 619, 636, 657, 664, 503, 404, 0,
	475, 610, 0, 0, 981, 982, 983, 984, 985, 986,
	987, 988, 316, 631, 665, 628, 677, 659, 460, 397,
	0, 0, 400, 297, 322, 339, 0, 648, 526, 236,
	489, 306, 265, 1056, 0, 219, 257, 239, 275, 290,
	293, 343, 411, 421, 451, 456, 312, 287, 255, 482,
	252, 508, 547, 548, 549, 551, 415, 282, 455, 0,
	0, 395, 605, 606, 335, 556, 0, 809, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 438, 0, 0,
	0, 796, 0, 0, 0, 286, 801, 0, 0, 0,
	385, 283, 0, 0, 212, 529, 0, 452, 0, 211,
	0, 510, 268, 396, 393, 614, 298, 289, 285, 264,
	336, 405, 450, 546, 444, 808, 389, 0, 650, 521,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 803,
	804, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 262, 344, 210, 435, 522, 302, 0, 101, 0,
	0, 1057, 535, 991, 780, 957, 995, 1058, 1009, 1010,
	1011, 996, 0, 249, 997, 998, 256, 999, 0, 956,
	839, 841, 840, 906, 907, 908, 909, 910, 911, 912,
	842, 843, 837, 1004, 640, 1012, 1013, 0, 281, 340,
	288, 280, 611, 0, 0, 0, 0, 0, 0, 627,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	776, 793, 0, 807, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 790, 791, 0, 0,
	0, 0, 951, 0, 792, 0, 0, 800, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
	1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055,
	3263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 423, 273, 0, 476, 0, 319, 334,
	0, 0, 0, 0, 0, 0, 0, 950, 0, 0,
	661, 0, 0, 948, 0, 0, 0, 0, 384, 0,
	349, 205, 233, 0, 0, 434, 484, 496, 0, 0,
	0, 0, 1001, 0, 494, 448, 635, 243, 300, 481,
	454, 492, 462, 303, 0, 0, 493, 391, 616, 472,
	632, 662, 663, 279, 428, 646, 550, 655, 680, 234,
	276, 442, 534, 638, 518, 417, 612, 613, 348, 517,
	311, 209, 388, 668, 232, 502, 390, 253, 241, 618,
	643, 315, 267, 305, 479, 0, 675, 221, 545, 629,
	250, 506, 0, 0, 683, 258, 528, 641, 630, 223,
	625, 527, 413, 345, 346, 222, 0, 480, 284, 309,
	0, 0, 274, 437, 1002, 1003, 272, 684, 847, 654,
	228, 0, 653, 430, 615, 626, 414, 402, 227, 624,
	412, 401, 353, 855, 856, 296, 324, 932, 931, 930,
	323, 325, 928, 929, 927, 215, 639, 658, 0, 216,
	0, 523, 642, 685, 474, 220, 244, 245, 248, 0,
	295, 299, 307, 310, 320, 321, 331, 386, 441, 468,
	464, 473, 0, 609, 633, 647, 660, 666, 667, 669,
	670, 671, 672, 673, 676, 674, 429, 329, 519, 352,
	392, 0, 0, 447, 495, 251, 637, 520, 240, 603,
	418, 427, 259, 261, 260, 235, 511, 608, 246, 266,
	938, 960, 949, 813, 814, 939, 940, 964, 941, 816,
	817, 961, 962, 810, 811, 815, 963, 965, 686, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 681, 536, 542, 537,
	538, 539, 540, 541, 0, 543, 952, 799, 798, 0,
	805, 806, 0, 835, 836, 838, 844, 845, 846, 857,
	904, 905, 913, 915, 916, 914, 917, 918, 919, 922,
	923, 924, 925, 920, 921, 926, 818, 822, 819, 820,
	821, 833, 823, 824, 825, 826, 827, 828, 829, 830,
	831, 832, 834, 975, 976, 977, 978, 979, 980, 850,
	854, 853, 851, 852, 848, 849, 876, 875, 877, 878,
	879, 880, 881, 882, 884, 883, 885, 886, 887, 888,
	889, 890, 858, 859, 862, 863, 861, 860, 864, 873,
	874, 865, 866, 867, 868, 869, 870, 872, 871, 891,
	892, 893, 894, 895, 897, 896, 900, 901, 899, 898,
	903, 902, 797, 204, 229, 387, 0, 477, 304, 682,
	649, 507, 644, 214, 231, 966, 278, 967, 0, 0,
	971, 0, 0, 0, 973, 972, 0, 974, 936, 935,
	0, 0, 968, 969, 0, 970, 0, 0, 206, 208,
	217, 230, 242, 247, 254, 277, 292, 294, 301, 314,
	327, 328, 337, 338, 341, 347, 399, 406, 407, 408,
	409, 431, 432, 433, 436, 439, 440, 443, 445, 446,
	449, 453, 457, 458, 459, 461, 463, 465, 478, 483,
	497, 498, 499, 500, 501, 504, 505, 512, 513, 514,
	515, 516, 524, 525, 530, 531, 532, 533, 544, 617,
	619, 636, 657, 664, 503, 404, 0, 475, 610, 0,
	0, 981, 982, 983, 984, 985, 986, 987, 988, 316,
	631, 665, 628, 677, 659, 460, 397, 0, 0, 400,
	297, 322, 339, 0, 648, 526, 236, 489, 306, 265,
	1056, 0, 219, 257, 239, 275, 290, 293, 343, 411,
	421, 451, 456, 312, 287, 255, 482, 252, 508, 547,
	548, 549, 551, 415, 282, 455, 0, 0, 395, 605,
	606, 335, 556, 0, 809, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 438, 0, 0, 0, 796, 0,
	0, 0, 286, 801, 0, 0, 0, 385, 283, 0,
	0, 212, 529, 0, 452, 0, 211, 0, 510, 268,
	396, 393, 614, 298, 289, 285, 264, 336, 405, 450,
	546, 444, 808, 389, 0, 650, 521, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 803, 804, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 262, 344,
	210, 435, 522, 302, 0, 101, 0, 0, 1057, 535,
	991, 780, 957, 995, 1058, 1009, 1010, 1011, 996, 0,
	249, 997, 998, 256, 999, 0, 956, 839, 841, 840,
	906, 907, 908, 909, 910, 911, 912, 842, 843, 837,
	1004, 640, 1012, 1013, 0, 281, 340, 288, 280, 611,
	0, 0, 0, 0, 0, 0, 627, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 776, 793, 0,
	807, 0, 0, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 790, 791, 0, 0, 0, 0, 951,
	0, 792, 0, 0, 800, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 3259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	423, 273, 0, 476, 0, 319, 334, 0, 0, 0,
	0, 0, 0, 0, 950, 0, 0, 661, 0, 0,
	948, 0, 0, 0, 0, 384, 0, 349, 205, 233,
	0, 0, 434, 484, 496, 0, 0, 0, 0, 1001,
	0, 494, 448, 635, 243, 300, 481, 454, 492, 462,
	303, 0, 0, 493, 391, 616, 472, 632, 662, 663,
	279, 428, 646, 550, 655, 680, 234, 276, 442, 534,
	638, 518, 417, 612, 613, 348, 517, 311, 209, 388,
	668, 232, 502, 390, 253, 241, 618, 643, 315, 267,
	305, 479, 0, 675, 221, 545, 629, 250, 506, 0,
	0, 683, 258, 528, 641, 630, 223, 625, 527, 413,
	345, 346, 222, 0, 480, 284, 309, 0, 0, 274,
	437, 1002, 1003, 272, 684, 847, 654, 228, 0, 653,
	430, 615, 626, 414, 402, 227, 624, 412, 401, 353,
	855, 856, 296, 324, 932, 931, 930, 323, 325, 928,
	929, 927, 215, 639, 658, 0, 216, 0, 523, 642,
	685, 474, 220, 244, 245, 248, 0, 295, 299, 307,
	310, 320, 321, 331, 386, 441, 468, 464, 473, 0,
	609, 633, 647, 660, 666, 667, 669, 670, 671, 672,
	673, 676, 674, 429, 329, 519, 352, 392, 0, 0,
	447, 495, 251, 637, 520, 240, 603, 418, 427, 259,
	261, 260, 235, 511, 608, 246, 266, 938, 960, 949,
	813, 814, 939, 940, 964, 941, 816, 817, 961, 962,
	810, 811, 815, 963, 965, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 681, 536, 542, 537, 538, 539, 540,
	541, 0, 543, 952, 799, 798, 0, 805, 806, 0,
	835, 836, 838, 844, 845, 846, 857, 904, 905, 913,
	915, 916, 914, 917, 918, 919, 922, 923, 924, 925,
	920, 921, 926, 818, 822, 819, 820, 821, 833, 823,
	824, 825, 826, 827, 828, 829, 830, 831, 832, 834,
	975, 976, 977, 978, 979, 980, 850, 854, 853, 851,
	852, 848, 849, 876, 875, 877, 878, 879, 880, 881,
	882, 884, 883, 885, 886, 887, 888, 889, 890, 858,
	859, 862, 863, 861, 860, 864, 873, 874, 865, 866,
	867, 868, 869, 870, 872, 871, 891, 892, 893, 894,
	895, 897, 896, 900, 901, 899, 898, 903, 902, 797,
	204, 229, 387, 0, 477, 304, 682, 649, 507, 644,
	214, 231, 966, 278, 967, 0, 0, 971, 0, 0,
	0, 973, 972, 0, 974, 936, 935, 0, 0, 968,
	969, 0, 970, 0, 0, 206, 208, 217, 230, 242,
	247, 254, 277, 292, 294, 301, 314, 327, 328, 337,
	338, 341, 347, 399, 406, 407, 408, 409, 431, 432,
	433, 436, 439, 440, 443, 445, 446, 449, 453, 457,
	458, 459, 461, 463, 465, 478, 483, 497, 498, 499,
	500, 501, 504, 505, 512, 513, 514, 515, 516, 524,
	525, 530, 531, 532, 533, 544, 617, 619, 636, 657,
	664, 503, 404, 0, 475, 610, 0, 0, 981, 982,
	983, 984, 985, 986, 987, 988, 316, 631, 665, 628,
	677, 659, 460, 397, 0, 0, 400, 297, 322, 339,
	0, 648, 526, 236, 489, 306, 265, 1056, 0, 219,
	257, 239, 275, 290, 293, 343, 411, 421, 451, 456,
	312, 287, 255, 482, 252, 508, 547, 548, 549, 551,
	415, 282, 455, 0, 0, 395, 605, 606, 335, 556,
	0, 809, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 438, 0, 0, 0, 796, 0, 0, 0, 286,
	801, 0, 0, 0, 385, 283, 0, 0, 212, 529,
	0, 452, 0, 211, 0, 510, 268, 396, 393, 614,
	298, 289, 285, 264, 336, 405, 450, 546, 444, 808,
	389, 0, 650, 521, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 803, 804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 262, 344, 210, 435, 522,
	302, 0, 101, 0, 0, 1057, 535, 991, 1131, 957,
	995, 1058, 1009, 1010, 1011, 996, 0, 249, 997, 998,
	256, 999, 0, 956, 839, 841, 840, 906, 907, 908,
	909, 910, 911, 912, 842, 843, 837, 1004, 640, 1012,
	1013, 0, 281, 340, 288, 280, 611, 0, 0, 0,
	0, 0, 0, 627, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 793, 0, 807, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	790, 791, 0, 0, 0, 0, 951, 0, 792, 0,
	0, 800, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
	1052, 1053, 1054, 1055, 802, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 423, 273, 0,
	476, 0, 319, 334, 0, 0, 0, 0, 0, 0,
	0, 950, 0, 0, 661, 0, 0, 948, 0, 0,
	0, 0, 384, 0, 349, 205, 233, 0, 0, 434,
	484, 496, 0, 0, 0, 0, 1001, 0, 494, 448,
	635, 243, 300, 481, 454, 492, 462, 303, 0, 0,
	493, 391, 616, 472, 632, 662, 663, 279, 428, 646,
	550, 655, 680, 234, 276, 442, 534, 638, 518, 417,
	612, 613, 348, 517, 311, 209, 388, 668, 232, 502,
	390, 253, 241, 618, 643, 315, 267, 305, 479, 0,
	675, 221, 545, 629, 250, 506, 0, 0, 683, 258,
	528, 641, 630, 223, 625, 527, 413, 345, 346, 222,
	0, 480, 284, 309, 0, 0, 274, 437, 1002, 1003,
	272, 684, 847, 654, 228, 0, 653, 430, 615, 626,
	414, 402, 227, 624, 412, 401, 353, 855, 856, 296,
	324, 932, 931, 930, 323, 325, 928, 929, 927, 215,
	639, 658, 0, 216, 0, 523, 642, 685, 474, 220,
	244, 245, 248, 0, 295, 299, 307, 310, 320, 321,
	331, 386, 441, 468, 464, 473, 0, 609, 633, 647,
	660, 666, 667, 669, 670, 671, 672, 673, 676, 674,
	429, 329, 519, 352, 392, 0, 0, 447, 495, 251,
	637, 520, 240, 603, 418, 427, 259, 261, 260, 235,
	511, 608, 246, 266, 938, 960, 949, 813, 814, 939,
	940, 964, 941, 816, 817, 961, 962, 810, 811, 815,
	963, 965, 686, 687, 688, 689, 690, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 703,
	681, 536, 542, 537, 538, 539, 540, 541, 0, 543,
	952, 799, 798, 0, 805, 806, 0, 835, 836, 838,
	844, 845, 846, 857, 904, 905, 913, 915, 916, 914,
	917, 918, 919, 922, 923, 924, 925, 920, 921, 926,
	818, 822, 819, 820, 821, 833, 823, 824, 825, 826,
	827, 828, 829, 830, 831, 832, 834, 975, 976, 977,
	978, 979, 980, 850, 854, 853, 851, 852, 848, 849,
	876, 875, 877, 878, 879, 880, 881, 882, 884, 883,
	885, 886, 887, 888, 889, 890, 858, 859, 862, 863,
	861, 860, 864, 873, 874, 865, 866, 867, 868, 869,
	870, 872, 871, 891, 892, 893, 894, 895, 897, 896,
	900, 901, 899, 898, 903, 902, 797, 204, 229, 387,
	0, 477, 304, 682, 649, 507, 644, 214, 231, 966,
	278, 967, 0, 0, 971, 0, 0, 0, 973, 972,
	0, 974, 936, 935, 0, 0, 968, 969, 0, 970,
	0, 0, 206, 208, 217, 230, 242, 247, 254, 277,
	292, 294, 301, 314, 327, 328, 337, 338, 341, 347,
	399, 406, 407, 408, 409, 431, 432, 433, 436, 439,
	440, 443, 445, 446, 449, 453, 457, 458, 459, 461,
	463, 465, 478, 483, 497, 498, 499, 500, 501, 504,
	505, 512, 513, 514, 515, 516, 524, 525, 530, 531,
	532, 533, 544, 617, 619, 636, 657, 664, 503, 404,
	0, 475, 610, 0, 0, 981, 982, 983, 984, 985,
	986, 987, 988, 316, 631, 665, 628, 677, 659, 460,
	397, 0, 0, 400, 297, 322, 339, 0, 648, 526,
	236, 489, 306, 265, 1056, 0, 219, 257, 239, 275,
	290, 293, 343, 411, 421, 451, 456, 312, 287, 255,
	482, 252, 508, 547, 548, 549, 551, 415, 282, 455,
	0, 0, 395, 605, 606, 335, 556, 0, 809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 438, 0,
	0, 0, 796, 0, 0, 0, 286, 801, 0, 0,
	0, 385, 283, 0, 0, 212, 529, 0, 452, 0,
	211, 0, 510, 268, 396, 393, 614, 298, 289, 285,
	264, 336, 405, 450, 546, 444, 808, 389, 0, 650,
	521, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	803, 804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 262, 344, 210, 435, 522, 302, 0, 101,
	0, 0, 1057, 535, 991, 1131, 957, 995, 1058, 1009,
	1010, 1011, 996, 0, 249, 997, 998, 256, 999, 0,
	956, 839, 841, 840, 906, 907, 908, 909, 910, 911,
	912, 842, 843, 837, 1004, 640, 1012, 1013, 0, 281,
	340, 288, 280, 611, 0, 0, 0, 0, 0, 0,
	627, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 793, 0, 807, 0, 0, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 790, 791, 0,
	0, 0, 0, 951, 0, 792, 0, 0, 800, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044,
	1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054,
	1055, 2188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 423, 273, 0, 476, 0, 319,
	334, 0, 0, 0, 0, 0, 0, 0, 950, 0,
	0, 661, 0, 0, 948, 0, 0, 0, 0, 384,
	0, 349, 205, 233, 0, 0, 434, 484, 496, 0,
	0, 0, 0, 1001, 0, 494, 448, 635, 243, 300,
	481, 454, 492, 462, 303, 0, 0, 493, 391, 616,
	472, 632, 662, 663, 279, 428, 646, 550, 655, 680,
	234, 276, 442, 534, 638, 518, 417, 612, 613, 348,
	517, 311, 209, 388, 668, 232, 502, 390, 253, 241,
	618, 643, 315, 267, 305, 479, 0, 675, 221, 545,
	629, 250, 506, 0, 0, 683, 258, 528, 641, 630,
	223, 625, 527, 413, 345, 346, 222, 0, 480, 284,
	309, 0, 0, 274, 437, 1002, 1003, 272, 684, 847,
	654, 228, 0, 653, 430, 615, 626, 414, 402, 227,
	624, 412, 401, 353, 855, 856, 296, 324, 932, 931,
	930, 323, 325, 928, 929, 927, 215, 639, 658, 0,
	216, 0, 523, 642, 685, 474, 220, 244, 245, 248,
	0, 295, 299, 307, 310, 320, 321, 331, 386, 441,
	468, 464, 473, 0, 609, 633, 647, 660, 666, 667,
	669, 670, 671, 672, 673, 676, 674, 429, 329, 519,
	352, 392, 0, 0, 447, 495, 251, 637, 520, 240,
	603, 418, 427, 259, 261, 260, 235, 511, 608, 246,
	266, 938, 960, 949, 813, 814, 939, 940, 964, 941,
	816, 817, 961, 962, 810, 811, 815, 963, 965, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 681, 536, 542,
	537, 538, 539, 540, 541, 0, 543, 952, 799, 798,
	0, 805, 806, 0, 835, 836, 838, 844, 845, 846,
	857, 904, 905, 913, 915, 916, 914, 917, 918, 919,
	922, 923, 924, 925, 920, 921, 926, 818, 822, 819,
	820, 821, 833, 823, 824, 825, 826, 827, 828, 829,
	830, 831, 832, 834, 975, 976, 977, 978, 979, 980,
	850, 854, 853, 851, 852, 848, 849, 876, 875, 877,
	878, 879, 880, 881, 882, 884, 883, 885, 886, 887,
	888, 889, 890, 858, 859, 862, 863, 861, 860, 864,
	873, 874, 865, 866, 867, 868, 869, 870, 872, 871,
	891, 892, 893, 894, 895, 897, 896, 900, 901, 899,
	898, 903, 902, 797, 204, 229, 387, 0, 477, 304,
	682, 649, 507, 644, 214, 231, 966, 278, 967, 0,
	0, 971, 0, 0, 0, 973, 972, 0, 974, 936,
	935, 0, 0, 968, 969, 0, 970, 0, 0, 206,
	208, 217, 230, 242, 247, 254, 277, 292, 294, 301,
	314, 327, 328, 337, 338, 341, 347, 399, 406, 407,
	408, 409, 431, 432, 433, 436, 439, 440, 443, 445,
	446, 449, 453, 457, 458, 459, 461, 463, 465, 478,
	483, 497, 498, 499, 500, 501, 504, 505, 512, 513,
	514, 515, 516, 524, 525, 530, 531, 532, 533, 544,
	617, 619, 636, 657, 664, 503, 404, 0, 475, 610,
	0, 0, 981, 982, 983, 984, 985, 986, 987, 988,
	316, 631, 665, 628, 677, 659, 460, 397, 0, 0,
	400, 297, 322, 339, 0, 648, 526, 236, 489, 306,
	265, 1056, 0, 219, 257, 239, 275, 290, 293, 343,
	411, 421, 451, 456, 312, 287, 255, 482, 252, 508,
	547, 548, 549, 551, 415, 282, 455, 0, 0, 395,
	605, 606, 335, 556, 0, 809, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 438, 0, 0, 0, 796,
	0, 0, 0, 286, 801, 0, 0, 0, 385, 283,
	0, 0, 212, 529, 0, 452, 0, 211, 0, 510,
	268, 396, 393, 614, 298, 289, 285, 264, 336, 405,
	450, 546, 444, 808, 389, 0, 650, 521, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 803, 804, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 262,
	344, 210, 435, 522, 302, 0, 101, 0, 0, 1057,
	535, 991, 1131, 957, 995, 1058, 1009, 1010, 1011, 996,
	0, 249, 997, 998, 256, 999, 0, 956, 839, 841,
	840, 906, 907, 908, 909, 910, 911, 912, 842, 843,
	837, 1004, 640, 1012, 1013, 0, 281, 340, 288, 280,
	611, 0, 0, 0, 0, 0, 0, 627, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 793,
	0, 807, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 790, 791, 0, 0, 0, 0,
	951, 0, 792, 0, 0, 800, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037,
	1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047,
	1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 2186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 423, 273, 0, 476, 0, 319, 334, 0, 0,
	0, 0, 0, 0, 0, 950, 0, 0, 661, 0,
	0, 948, 0, 0, 0, 0, 384, 0, 349, 205,
	233, 0, 0, 434, 484, 496, 0, 0, 0, 0,
	1001, 0, 494, 448, 635, 243, 300, 481, 454, 492,
	462, 303, 0, 0, 493, 391, 616, 472, 632, 662,
	663, 279, 428, 646, 550, 655, 680, 234, 276, 442,
	534, 638, 518, 417, 612, 613, 348, 517, 311, 209,
	388, 668, 232, 502, 390, 253, 241, 618, 643, 315,
	267, 305, 479, 0, 675, 221, 545, 629, 250, 506,
	0, 0, 683, 258, 528, 641, 630, 223, 625, 527,
	413, 345, 346, 222, 0, 480, 284, 309, 0, 0,
	274, 437, 1002, 1003, 272, 684, 847, 654, 228, 0,
	653, 430, 615, 626, 414, 402, 227, 624, 412, 401,
	353, 855, 856, 296, 324, 932, 931, 930, 323, 325,
	928, 929, 927, 215, 639, 658, 0, 216, 0, 523,
	642, 685, 474, 220, 244, 245, 248, 0, 295, 299,
	307, 310, 320, 321, 331, 386, 441, 468, 464, 473,
	0, 609, 633, 647, 660, 666, 667, 669, 670, 671,
	672, 673, 676, 674, 429, 329, 519, 352, 392, 0,
	0, 447, 495, 251, 637, 520, 240, 603, 418, 427,
	259, 261, 260, 235, 511, 608, 246, 266, 938, 960,
	949, 813, 814, 939, 940, 964, 941, 816, 817, 961,
	962, 810, 811, 815, 963, 965, 686, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 681, 536, 542, 537, 538, 539,
	540, 541, 0, 543, 952, 799, 798, 0, 805, 806,
	0, 835, 836, 838, 844, 845, 846, 857, 904, 905,
	913, 915, 916, 914, 917, 918, 919, 922, 923, 924,
	925, 920, 921, 926, 818, 822, 819, 820, 821, 833,
	823, 824, 825, 826, 827, 828, 829, 830, 831, 832,
	834, 975, 976, 977, 978, 979, 980, 850, 854, 853,
	851, 852, 848, 849, 876, 875, 877, 878, 879, 880,
	881, 882, 884, 883, 885, 886, 887, 888, 889, 890,
	858, 859, 862, 863, 861, 860, 864, 873, 874, 865,
	866, 867, 868, 869, 870, 872, 871, 891, 892, 893,
	894, 895, 897, 896, 900, 901, 899, 898, 903, 902,
	797, 204, 229, 387, 0, 477, 304, 682, 649, 507,
	644, 214, 231, 966, 278, 967, 0, 0, 971, 0,
	0, 0, 973, 972, 0, 974, 936, 935, 0, 0,
	968, 969, 0, 970, 0, 0, 206, 208, 217, 230,
	242, 247, 254, 277, 292, 294, 301, 314, 327, 328,
	337, 338, 341, 347, 399, 406, 407, 408, 409, 431,
	432, 433, 436, 439, 440, 443, 445, 446, 449, 453,
	457, 458, 459, 461, 463, 465, 478, 483, 497, 498,
	499, 500, 501, 504, 505, 512, 513, 514, 515, 516,
	524, 525, 530, 531, 532, 533, 544, 617, 619, 636,
	657, 664, 503, 404, 0, 475, 610, 0, 0, 981,
	982, 983, 984, 985, 986, 987, 988, 316, 631, 665,
	628, 677, 659, 460, 397, 0, 0, 400, 297, 322,
	339, 0, 648, 526, 236, 489, 306, 265, 1056, 0,
	219, 257, 239, 275, 290, 293, 343, 411, 421, 451,
	456, 312, 287, 255, 482, 252, 508, 547, 548, 549,
	551, 415, 282, 455, 556, 0, 395, 605, 606, 335,
	0, 0, 0, 0, 0, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 385,
	283, 0, 0, 212, 529, 0, 452, 0, 211, 0,
	510, 268, 396, 393, 614, 298, 289, 285, 264, 336,
	405, 450, 546, 444, 0, 389, 0, 650, 521, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	262, 344, 210, 435, 522, 302, 0, 0, 0, 0,
	0, 535, 756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 256, 0, 0, 0, 370,
	379, 378, 358, 359, 361, 363, 369, 376, 382, 355,
	364, 0, 0, 640, 0, 0, 0, 281, 340, 288,
	280, 611, 0, 0, 0, 0, 0, 0, 627, 0,
	0, 238, 0, 1174, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 423, 273, 0, 476, 0, 319, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1173, 661,
	0, 0, 0, 0, 0, 1170, 1171, 384, 1139, 349,
	205, 233, 1164, 1168, 434, 484, 496, 0, 0, 0,
	0, 269, 0, 494, 448, 635, 243, 300, 481, 454,
	492, 462, 303, 0, 0, 493, 391, 616, 472, 632,
	662, 663, 279, 428, 646, 550, 655, 680, 234, 276,
	442, 534, 638, 518, 417, 612, 613, 348, 517, 311,
	209, 388, 668, 232, 502, 390, 253, 241, 618, 643,
	315, 267, 305, 479, 0, 675, 221, 545, 629, 250,
	506, 0, 0, 683, 258, 528, 641, 630, 223, 625,
	527, 413, 345, 346, 222, 0, 480, 284, 309, 0,
	0, 274, 437, 620, 621, 272, 684, 237, 654, 228,
	0, 653, 430, 615, 626, 414, 402, 227, 624, 412,
	401, 353, 374, 375, 296, 324, 469, 394, 470, 323,
	325, 425, 424, 426, 215, 639, 658, 0, 216, 0,
	523, 642, 685, 474, 220, 244, 245, 248, 0, 295,
	299, 307, 310, 320, 321, 331, 386, 441, 468, 464,
	473, 0, 609, 633, 647, 660, 666, 667, 669, 670,
	671, 672, 673, 676, 674, 429, 329, 519, 352, 392,
	0, 0, 447, 495, 251, 637, 520, 240, 603, 418,
	427, 259, 261, 260, 235, 511, 608, 246, 266, 207,
	0, 0, 0, 0, 270, 271, 0, 604, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 681, 536, 542, 537, 538,
	539, 540, 541, 0, 543, 0, 0, 0, 0, 0,
	419, 0, 622, 623, 704, 403, 509, 634, 354, 368,
	371, 360, 380, 0, 381, 356, 357, 362, 365, 366,
	367, 372, 373, 377, 383, 263, 218, 410, 420, 607,
	330, 224, 225, 226, 552, 553, 554, 555, 651, 652,
	656, 213, 485, 486, 487, 488, 308, 645, 326, 491,
	490, 350, 351, 398, 471, 568, 570, 581, 585, 587,
	589, 595, 598, 569, 571, 582, 586, 588, 590, 596,
	599, 558, 560, 562, 564, 577, 576, 573, 601, 602,
	579, 584, 563, 575, 580, 593, 600, 597, 557, 561,
	565, 574, 592, 591, 572, 583, 594, 578, 566, 559,
	567, 0, 204, 229, 387, 0, 477, 304, 682, 649,
	507, 644, 214, 231, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 208, 217,
	230, 242, 247, 254, 277, 292, 294, 301, 314, 327,
	328, 337, 338, 341, 347, 399, 406, 407, 408, 409,
	431, 432, 433, 436, 439, 440, 443, 445, 446, 449,
	453, 457, 458, 459, 461, 463, 465, 478, 483, 497,
	498, 499, 500, 501, 504, 505, 512, 513, 514, 515,
	516, 524, 525, 530, 531, 532, 533, 544, 617, 619,
	636, 657, 664, 503, 404, 0, 475, 610, 0, 0,
	317, 318, 466, 467, 332, 333, 678, 679, 316, 631,
	665, 628, 677, 659, 460, 397, 0, 0, 400, 297,
	322, 339, 0, 648, 526, 236, 489, 306, 265, 0,
	0, 219, 257, 239, 275, 290, 293, 343, 411, 421,
	451, 456, 312, 287, 255, 482, 252, 508, 547, 548,
	549, 551, 415, 282, 455, 91, 556, 395, 605, 606,
	335, 0, 0, 0, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 385, 283, 0, 0, 212, 529, 0, 452, 0,
	211, 0, 510, 268, 396, 393, 614, 298, 289, 285,
	264, 336, 405, 450, 546, 444, 103, 389, 0, 650,
	521, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 262, 344, 210, 435, 522, 302, 0, 101,
	0, 0, 0, 535, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 256, 0, 0,
	0, 370, 379, 378, 358, 359, 361, 363, 369, 376,
	382, 355, 364, 0, 0, 640, 0, 0, 0, 281,
	340, 288, 280, 611, 0, 0, 0, 0, 0, 0,
	627, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 423, 273, 0, 476, 0, 319,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 661, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 349, 205, 233, 0, 0, 434, 484, 496, 0,
	0, 0, 0, 269, 0, 494, 448, 635, 243, 300,
	481, 454, 492, 462, 303, 0, 0, 493, 391, 616,
	472, 632, 662, 663, 279, 428, 646, 550, 655, 680,
	234, 276, 442, 534, 638, 518, 417, 612, 613, 348,
	517, 311, 209, 388, 668, 232, 502, 390, 253, 241,
	618, 643, 315, 267, 305, 479, 0, 675, 221, 545,
	629, 250, 506, 0, 0, 683, 258, 528, 641, 630,
	223, 625, 527, 413, 345, 346, 222, 0, 480, 284,
	309, 0, 0, 274, 437, 620, 621, 272, 684, 237,
	654, 228, 0, 653, 430, 615, 626, 414, 402, 227,
	624, 412, 401, 353, 374, 375, 296, 324, 469, 394,
	470, 323, 325, 425, 424, 426, 215, 639, 658, 0,
	216, 0, 523, 642, 685, 474, 220, 244, 245, 248,
	0, 295, 299, 307, 310, 320, 321, 331, 386, 441,
	468, 464, 473, 0, 609, 633, 647, 660, 666, 667,
	669, 670, 671, 672, 673, 676, 674, 429, 329, 519,
	352, 392, 0, 0, 447, 495, 251, 637, 520, 240,
	603, 418, 427, 259, 261, 260, 235, 511, 608, 246,
	266, 207, 0, 0, 0, 0, 270, 271, 0, 604,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 681, 536, 542,
	537, 538, 539, 540, 541, 0, 543, 0, 0, 0,
	0, 0, 419, 0, 622, 623, 704, 403, 509, 634,
	354, 368, 371, 360, 380, 0, 381, 356, 357, 362,
	365, 366, 367, 372, 373, 377, 383, 263, 218, 410,
	420, 607, 330, 224, 225, 226, 552, 553, 554, 555,
	651, 652, 656, 213, 485, 486, 487, 488, 308, 645,
	326, 491, 490, 350, 351, 398, 471, 568, 570, 581,
	585, 587, 589, 595, 598, 569, 571, 582, 586, 588,
	590, 596, 599, 558, 560, 562, 564, 577, 576, 573,
	601, 602, 579, 584, 563, 575, 580, 593, 600, 597,
	557, 561, 565, 574, 592, 591, 572, 583, 594, 578,
	566, 559, 567, 0, 204, 229, 387, 100, 477, 304,
	682, 649, 507, 644, 214, 231, 0, 278, 0, 0,
	0, 0, 0, 0, 2505, 0, 0, 2504, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	208, 217, 230, 242, 247, 254, 277, 292, 294, 301,
	314, 327, 328, 337, 338, 341, 347, 399, 406, 407,
	408, 409, 431, 432, 433, 436, 439, 440, 443, 445,
	446, 449, 453, 457, 458, 459, 461, 463, 465, 478,
	483, 497, 498, 499, 500, 501, 504, 505, 512, 513,
	514, 515, 516, 524, 525, 530, 531, 532, 533, 544,
	617, 619, 636, 657, 664, 503, 404, 0, 475, 610,
	0, 0, 317, 318, 466, 467, 332, 333, 678, 679,
	316, 631, 665, 628, 677, 659, 460, 397, 0, 0,
	400, 297, 322, 339, 0, 648, 526, 236, 489, 306,
	265, 0, 0, 219, 257, 239, 275, 290, 293, 343,
	411, 421, 451, 456, 312, 287, 255, 482, 252, 508,
	547, 548, 549, 551, 415, 282, 455, 556, 0, 395,
	605, 606, 335, 0, 0, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 385, 283, 0, 0, 212, 529, 0, 452,
	0, 211, 0, 510, 268, 396, 393, 614, 298, 289,
	285, 264, 336, 405, 450, 546, 444, 0, 389, 0,
	650, 521, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 262, 344, 210, 435, 522, 302, 0,
	0, 0, 0, 0, 535, 756, 0, 0, 0, 0,
	4437, 0, 0, 0, 0, 249, 0, 0, 256, 0,
	0, 0, 370, 379, 378, 358, 359, 361, 363, 369,
	376, 382, 355, 364, 0, 0, 640, 0, 0, 0,
	281, 340, 288, 280, 611, 0, 0, 0, 0, 0,
	0, 627, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 4435, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 0, 423, 273, 0, 476, 0,
	319, 334, 0, 0, 0, 4436, 4304, 4434, 0, 0,
	0, 0, 661, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 349, 205, 233, 0, 0, 434, 484, 496,
	0, 0, 0, 0, 269, 0, 494, 448, 635, 243,
	300, 481, 454, 492, 462, 303, 0, 0, 493, 391,
	616, 472, 632, 662, 663, 279, 428, 646, 550, 655,
	680, 234, 276, 442, 534, 638, 518, 417, 612, 613,
	348, 517, 311, 209, 388, 668, 232, 502, 390, 253,
	241, 618, 643, 315, 267, 305, 479, 0, 675, 221,
	545, 629, 250, 506, 0, 0, 683, 258, 528, 641,
	630, 223, 625, 527, 413, 345, 346, 222, 0, 480,
	284, 309, 0, 0, 274, 437, 620, 621, 272, 684,
	237, 654, 228, 0, 653, 430, 615, 626, 414, 402,
	227, 624, 412, 401, 353, 374, 375, 296, 324, 469,
	394, 470, 323, 325, 425, 424, 426, 215, 639, 658,
	0, 216, 0, 523, 642, 685, 474, 220, 244, 245,
	248, 0, 295, 299, 307, 310, 320, 321, 331, 386,
	441, 468, 464, 473, 0, 609, 633, 647, 660, 666,
	667, 669, 670, 671, 672, 673, 676, 674, 429, 329,
	519, 352, 392, 0, 0, 447, 495, 251, 637, 520,
	240, 603, 418, 427, 259, 261, 260, 235, 511, 608,
	246, 266, 207, 0, 0, 0, 0, 270, 271, 0,
	604, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	686, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 681, 536,
	542, 537, 538, 539, 540, 541, 0, 543, 0, 0,
	0, 0, 0, 419, 0, 622, 623, 704, 403, 509,
	634, 354, 368, 371, 360, 380, 0, 381, 356, 357,
	362, 365, 366, 367, 372, 373, 377, 383, 263, 218,
	410, 420, 607, 330, 224, 225, 226, 552, 553, 554,
	555, 651, 652, 656, 213, 485, 486, 487, 488, 308,
	645, 326, 491, 490, 350, 351, 398, 471, 568, 570,
	581, 585, 587, 589, 595, 598, 569, 571, 582, 586,
	588, 590, 596, 599, 558, 560, 562, 564, 577, 576,
	573, 601, 602, 579, 584, 563, 575, 580, 593, 600,
	597, 557, 561, 565, 574, 592, 591, 572, 583, 594,
	578, 566, 559, 567, 0, 204, 229, 387, 0, 477,
	304, 682, 649, 507, 644, 214, 231, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 208, 217, 230, 242, 247, 254, 277, 292, 294,
	301, 314, 327, 328, 337, 338, 341, 347, 399, 406,
	407, 408, 409, 431, 432, 433, 436, 439, 440, 443,
	445, 446, 449, 453, 457, 458, 459, 461, 463, 465,
	478, 483, 497, 498, 499, 500, 501, 504, 505, 512,
	513, 514, 515, 516, 524, 525, 530, 531, 532, 533,
	544, 617, 619, 636, 657, 664, 503, 404, 0, 475,
	610, 0, 0, 317, 318, 466, 467, 332, 333, 678,
	679, 316, 631, 665, 628, 677, 659, 460, 397, 0,
	0, 400, 297, 322, 339, 0, 648, 526, 236, 489,
	306, 265, 0, 0, 219, 257, 239, 275, 290, 293,
	343, 411, 421, 451, 456, 312, 287, 255, 482, 252,
	508, 547, 548, 549, 551, 415, 282, 455, 91, 556,
	395, 605, 606, 335, 0, 0, 0, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 385, 283, 0, 0, 212, 529,
	0, 452, 0, 211, 0, 510, 268, 396, 393, 614,
	298, 289, 285, 264, 336, 405, 450, 546, 444, 103,
	389, 0, 650, 521, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 262, 344, 210, 435, 522,
	302, 0, 101, 0, 1806, 0, 535, 756, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	256, 0, 0, 0, 370, 379, 378, 358, 359, 361,
	363, 369, 376, 382, 355, 364, 0, 0, 640, 0,
	0, 0, 281, 340, 288, 280, 611, 0, 0, 0,
	0, 0, 0, 627, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 423, 273, 0,
	476, 0, 319, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 661, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 349, 205, 233, 0, 0, 434,
	484, 496, 0, 0, 0, 0, 269, 0, 494, 448,
	635, 243, 300, 481, 454, 492, 462, 303, 0, 0,
	493, 391, 616, 472, 632, 662, 663, 279, 428, 646,
	550, 655, 680, 234, 276, 442, 534, 638, 518, 417,
	612, 613, 348, 517, 311, 209, 388, 668, 232, 502,
	390, 253, 241, 618, 643, 315, 267, 305, 479, 0,
	675, 221, 545, 629, 250, 506, 0, 0, 683, 258,
	528, 641, 630, 223, 625, 527, 413, 345, 346, 222,
	0, 480, 284, 309, 0, 0, 274, 437, 620, 621,
	272, 684, 237, 654, 228, 0, 653, 430, 615, 626,
	414, 402, 227, 624, 412, 401, 353, 374, 375, 296,
	324, 469, 394, 470, 323, 325, 425, 424, 426, 215,
	639, 658, 0, 216, 0, 523, 642, 685, 474, 220,
	244, 245, 248, 0, 295, 299, 307, 310, 320, 321,
	331, 386, 441, 468, 464, 473, 0, 609, 633, 647,
	660, 666, 667, 669, 670, 671, 672, 673, 676, 674,
	429, 329, 519, 352, 392, 0, 0, 447, 495, 251,
	637, 520, 240, 603, 418, 427, 259, 261, 260, 235,
	511, 608, 246, 266, 207, 0, 0, 0, 0, 270,
	271, 0, 604, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 686, 687, 688, 689, 690, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 703,
	681, 536, 542, 537, 538, 539, 540, 541, 0, 543,
	0, 0, 0, 0, 0, 419, 0, 622, 623, 704,
	403, 509, 634, 354, 368, 371, 360, 380, 0, 381,
	356, 357, 362, 365, 366, 367, 372, 373, 377, 383,
	263, 218, 410, 420, 607, 330, 224, 225, 226, 552,
	553, 554, 555, 651, 652, 656, 213, 485, 486, 487,
	488, 308, 645, 326, 491, 490, 350, 351, 398, 471,
	568, 570, 581, 585, 587, 589, 595, 598, 569, 571,
	582, 586, 588, 590, 596, 599, 558, 560, 562, 564,
	577, 576, 573, 601, 602, 579, 584, 563, 575, 580,
	593, 600, 597, 557, 561, 565, 574, 592, 591, 572,
	583, 594, 578, 566, 559, 567, 0, 204, 229, 387,
	100, 477, 304, 682, 649, 507, 644, 214, 231, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 208, 217, 230, 242, 247, 254, 277,
	292, 294, 301, 314, 327, 328, 337, 338, 341, 347,
	399, 406, 407, 408, 409, 431, 432, 433, 436, 439,
	440, 443, 445, 446, 449, 453, 457, 458, 459, 461,
	463, 465, 478, 483, 497, 498, 499, 500, 501, 504,
	505, 512, 513, 514, 515, 516, 524, 525, 530, 531,
	532, 533, 544, 617, 619, 636, 657, 664, 503, 404,
	0, 475, 610, 0, 0, 317, 318, 466, 467, 332,
	333, 678, 679, 316, 631, 665, 628, 677, 659, 460,
	397, 0, 0, 400, 297, 322, 339, 0, 648, 526,
	236, 489, 306, 265, 0, 0, 219, 257, 239, 275,
	290, 293, 343, 411, 421, 451, 456, 312, 287, 255,
	482, 252, 508, 547, 548, 549, 551, 415, 282, 455,
	556, 0, 395, 605, 606, 335, 0, 0, 0, 0,
	0, 0, 438, 0, 0, 1848, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 385, 283, 0, 0, 212,
	529, 0, 452, 0, 211, 0, 510, 268, 396, 393,
	614, 298, 289, 285, 264, 336, 405, 450, 546, 444,
	0, 389, 0, 650, 521, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 262, 344, 210, 435,
	522, 302, 0, 0, 0, 0, 1850, 535, 756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 256, 0, 0, 0, 370, 379, 378, 358, 359,
	361, 363, 369, 376, 382, 355, 364, 0, 0, 640,
	0, 0, 0, 281, 340, 288, 280, 611, 0, 0,
	0, 0, 0, 0, 627, 0, 0, 238, 0, 0,
	0, 1531, 0, 1532, 1533, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 423, 273,
	0, 476, 0, 319, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 661, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 349, 205, 233, 0, 0,
	434, 484, 496, 0, 0, 0, 0, 269, 0, 494,
	448, 635, 243, 300, 481, 454, 492, 462, 303, 0,
	0, 493, 391, 616, 472, 632, 662, 663, 279, 428,
	646, 550, 655, 680, 234, 276, 442, 534, 638, 518,
	417, 612, 613, 348, 517, 311, 209, 388, 668, 232,
	502, 390, 253, 241, 618, 643, 315, 267, 305, 479,
	0, 675, 221, 545, 629, 250, 506, 0, 0, 683,
	258, 528, 641, 630, 223, 625, 527, 413, 345, 346,
	222, 0, 480, 284, 309, 0, 0, 274, 437, 620,
	621, 272, 684, 237, 654, 228, 0, 653, 430, 615,
	626, 414, 402, 227, 624, 412, 401, 353, 374, 375,
	296, 324, 469, 394, 470, 323, 325, 425, 424, 426,
	215, 639, 658, 0, 216, 0, 523, 642, 685, 474,
	220, 244, 245, 248, 0, 295, 299, 307, 310, 320,
	321, 331, 386, 441, 468, 464, 473, 0, 609, 633,
	647, 660, 666, 667, 669, 670, 671, 672, 673, 676,
	674, 429, 329, 519, 352, 392, 0, 0, 447, 495,
	251, 637, 520, 240, 603, 418, 427, 259, 261, 260,
	235, 511, 608, 246, 266, 207, 0, 0, 0, 0,
	270, 271, 0, 604, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 681, 536, 542, 537, 538, 539, 540, 541, 0,
	543, 0, 0, 0, 0, 0, 419, 0, 622, 623,
	704, 403, 509, 634, 354, 368, 371, 360, 380, 0,
	381, 356, 357, 362, 365, 366, 367, 372, 373, 377,
	383, 263, 218, 410, 420, 607, 330, 224, 225, 226,
	552, 553, 554, 555, 651, 652, 656, 213, 485, 486,
	487, 488, 308, 645, 326, 491, 490, 350, 351, 398,
	471, 568, 570, 581, 585, 587, 589, 595, 598, 569,
	571, 582, 586, 588, 590, 596, 599, 558, 560, 562,
	564, 577, 576, 573, 601, 602, 579, 584, 563, 575,
	580, 593, 600, 597, 557, 561, 565, 574, 592, 591,
	572, 583, 594, 578, 566, 559, 567, 0, 204, 229,
	387, 0, 477, 304, 682, 649, 507, 644, 214, 231,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 208, 217, 230, 242, 247, 254,
	277, 292, 294, 301, 314, 327, 328, 337, 338, 341,
	347, 399, 406, 407, 408, 409, 431, 432, 433, 436,
	439, 440, 443, 445, 446, 449, 453, 457, 458, 459,
	461, 463, 465, 478, 483, 497, 498, 499, 500, 501,
	504, 505, 512, 513, 514, 515, 516, 524, 525, 530,
	531, 532, 533, 544, 617, 619, 636, 657, 664, 503,
	404, 0, 475, 610, 0, 0, 317, 318, 466, 467,
	332, 333, 678, 679, 316, 631, 665, 628, 677, 659,
	460, 397, 0, 0, 400, 297, 322, 339, 0, 648,
	526, 236, 489, 306, 265, 0, 0, 219, 257, 239,
	275, 290, 293, 343, 411, 421, 451, 456, 312, 287,
	255, 482, 252, 508, 547, 548, 549, 551, 415, 282,
	455, 556, 0, 395, 605, 606, 335, 0, 0, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 385, 283, 0, 0,
	212, 529, 0, 452, 0, 211, 0, 510, 268, 396,
	393, 614, 298, 289, 285, 264, 336, 405, 450, 546,
	444, 0, 389, 0, 650, 521, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 262, 344, 210,
	435, 522, 302, 0, 0, 0, 0, 0, 535, 756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 256, 0, 0, 0, 370, 379, 378, 358,
	359, 361, 363, 369, 376, 382, 355, 364, 0, 0,
	640, 0, 0, 0, 281, 340, 288, 280, 611, 0,
	0, 0, 0, 0, 0, 627, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 423,
	273, 0, 476, 0, 319, 334, 4298, 4299, 4300, 0,
	0, 0, 0, 0, 0, 0, 661, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 349, 205, 233, 0,
	0, 434, 484, 496, 0, 0, 0, 0, 269, 0,
	494, 448, 635, 243, 300, 481, 454, 492, 462, 303,
	0, 0, 493, 391, 616, 472, 632, 662, 663, 279,
	428, 646, 550, 655, 680, 234, 276, 442, 534, 638,
	518, 417, 612, 613, 348, 517, 311, 209, 388, 668,
	232, 502, 390, 253, 241, 618, 643, 315, 267, 305,
	479, 0, 675, 221, 545, 629, 250, 506, 0, 0,
	683, 258, 528, 641, 630, 223, 625, 527, 413, 345,
	346, 222, 0, 480, 284, 309, 0, 0, 274, 437,
	620, 621, 272, 684, 237, 654, 228, 0, 653, 430,
	615, 626, 414, 402, 227, 624, 412, 401, 353, 374,
	375, 296, 324, 469, 394, 470, 323, 325, 425, 424,
	426, 215, 639, 658, 0, 216, 0, 523, 642, 685,
	474, 220, 244, 245, 248, 0, 295, 299, 307, 310,
	320, 321, 331, 386, 441, 468, 464, 473, 0, 609,
	633, 647, 660, 666, 667, 669, 670, 671, 672, 673,
	676, 674, 429, 329, 519, 352, 392, 0, 0, 447,
	495, 251, 637, 520, 240, 603, 418, 427, 259, 261,
	260, 235, 511, 608, 246, 266, 207, 0, 0, 0,
	0, 270, 271, 0, 604, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 686, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 681, 536, 542, 537, 538, 539, 540, 541,
	0, 543, 0, 0, 0, 0, 0, 419, 0, 622,
	623, 704, 403, 509, 634, 354, 368, 371, 360, 380,
	0, 381, 356, 357, 362, 365, 366, 367, 372, 373,
	377, 383, 263, 218, 410, 420, 607, 330, 224, 225,
	226, 552, 553, 554, 555, 651, 652, 656, 213, 485,
	486, 487, 488, 308, 645, 326, 491, 490, 350, 351,
	398, 471, 568, 570, 581, 585, 587, 589, 595, 598,
	569, 571, 582, 586, 588, 590, 596, 599, 558, 560,
	562, 564, 577, 576, 573, 601, 602, 579, 584, 563,
	575, 580, 593, 600, 597, 557, 561, 565, 574, 592,
	591, 572, 583, 594, 578, 566, 559, 567, 0, 204,
	229, 387, 0, 477, 304, 682, 649, 507, 644, 214,
	231, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 208, 217, 230, 242, 247,
	254, 277, 292, 294, 301, 314, 327, 328, 337, 338,
	341, 347, 399, 406, 407, 408, 409, 431, 432, 433,
	436, 439, 440, 443, 445, 446, 449, 453, 457, 458,
	459, 461, 463, 465, 478, 483, 497, 498, 499, 500,
	501, 504, 505, 512, 513, 514, 515, 516, 524, 525,
	530, 531, 532, 533, 544, 617, 619, 636, 657, 664,
	503, 404, 0, 475, 610, 0, 0, 317, 318, 466,
	467, 332, 333, 678, 679, 316, 631, 665, 628, 677,
	659, 460, 397, 0, 0, 400, 297, 322, 339, 0,
	648, 526, 236, 489, 306, 265, 0, 0, 219, 257,
	239, 275, 290, 293, 343, 411, 421, 451, 456, 312,
	287, 255, 482, 252, 508, 547, 548, 549, 551, 415,
	282, 455, 556, 0, 395, 605, 606, 335, 0, 0,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 385, 283, 0,
	0, 212, 529, 0, 452, 0, 211, 0, 510, 268,
	396, 393, 614, 298, 289, 285, 264, 336, 405, 450,
	546, 444, 0, 389, 0, 650, 521, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 262, 344,
	210, 435, 522, 302, 0, 101, 0, 0, 0, 535,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 256, 0, 0, 0, 370, 379, 378,
	358, 359, 361, 363, 369, 376, 382, 355, 364, 0,
	0, 640, 0, 0, 0, 281, 340, 288, 280, 611,
	0, 0, 0, 0, 0, 0, 627, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	423, 273, 0, 476, 0, 319, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 661, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 349, 205, 233,
	0, 0, 434, 484, 496, 0, 0, 0, 0, 269,
	0, 494, 448, 635, 243, 300, 481, 454, 492, 462,
	303, 0, 0, 493, 391, 616, 472, 632, 662, 663,
	279, 428, 646, 550, 655, 680, 234, 276, 442, 534,
	638, 518, 417, 612, 613, 348, 517, 311, 209, 388,
	668, 232, 502, 390, 253, 241, 618, 643, 315, 267,
	305, 479, 0, 675, 221, 545, 629, 250, 506, 0,
	0, 683, 258, 528, 641, 630, 223, 625, 527, 413,
	345, 346, 222, 0, 480, 284, 309, 0, 0, 274,
	437, 620, 621, 272, 684, 237, 654, 228, 0, 653,
	430, 615, 626, 414, 402, 227, 624, 412, 401, 353,
	374, 375, 296, 324, 469, 394, 470, 323, 325, 425,
	424, 426, 215, 639, 658, 0, 216, 0, 523, 642,
	685, 474, 220, 244, 245, 248, 0, 295, 299, 307,
	310, 320, 321, 331, 386, 441, 468, 464, 473, 0,
	609, 633, 647, 660, 666, 667, 669, 670, 671, 672,
	673, 676, 674, 429, 329, 519, 352, 392, 0, 0,
	447, 495, 251, 637, 520, 240, 603, 418, 427, 259,
	261, 260, 235, 511, 608, 246, 266, 207, 0, 0,
	0, 0, 270, 271, 0, 604, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 681, 536, 542, 537, 538, 539, 540,
	541, 0, 543, 0, 0, 0, 0, 0, 419, 0,
	622, 623, 704, 403, 509, 634, 354, 368, 371, 360,
	380, 0, 381, 356, 357, 362, 365, 366, 367, 372,
	373, 377, 383, 263, 218, 410, 420, 607, 330, 224,
	225, 226, 552, 553, 554, 555, 651, 652, 656, 213,
	485, 486, 487, 488, 308, 645, 326, 491, 490, 350,
	351, 398, 471, 568, 570, 581, 585, 587, 589, 595,
	598, 569, 571, 582, 586, 588, 590, 596, 599, 558,
	560, 562, 564, 577, 576, 573, 601, 602, 579, 584,
	563, 575, 580, 593, 600, 597, 557, 561, 565, 574,
	592, 591, 572, 583, 594, 578, 566, 559, 567, 0,
	204, 229, 387, 0, 477, 304, 682, 649, 507, 644,
	214, 231, 0, 278, 0, 0, 0, 0, 0, 0,
	2505, 0, 0, 2504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 208, 217, 230, 242,
	247, 254, 277, 292, 294, 301, 314, 327, 328, 337,
	338, 341, 347, 399, 406, 407, 408, 409, 431, 432,
	433, 436, 439, 440, 443, 445, 446, 449, 453, 457,
	458, 459, 461, 463, 465, 478, 483, 497, 498, 499,
	500, 501, 504, 505, 512, 513, 514, 515, 516, 524,
	525, 530, 531, 532, 533, 544, 617, 619, 636, 657,
	664, 503, 404, 0, 475, 610, 0, 0, 317, 318,
	466, 467, 332, 333, 678, 679, 316, 631, 665, 628,
	677, 659, 460, 397, 0, 0, 400, 297, 322, 339,
	0, 648, 526, 236, 489, 306, 265, 0, 0, 219,
	257, 239, 275, 290, 293, 343, 411, 421, 451, 456,
	312, 287, 255, 482, 252, 508, 547, 548, 549, 551,
	415, 282, 455, 556, 0, 395, 605, 606, 335, 0,
	0, 0, 0, 0, 0, 438, 0, 0, 2437, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 385, 283,
	0, 0, 212, 529, 0, 452, 0, 211, 0, 510,
	268, 396, 393, 614, 298, 289, 285, 264, 336, 405,
	450, 546, 444, 0, 389, 0, 650, 521, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 262,
	344, 210, 435, 522, 302, 0, 0, 0, 0, 2025,
	535, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 256, 0, 0, 0, 370, 379,
	378, 358, 359, 361, 363, 369, 376, 382, 355, 364,
	0, 0, 640, 0, 0, 0, 281, 340, 288, 280,
	611, 0, 0, 0, 0, 0, 0, 627, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 423, 273, 0, 476, 0, 319, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 661, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 349, 205,
	233, 0, 0, 434, 484, 496, 0, 0, 0, 0,
	269, 0, 494, 448, 635, 243, 300, 481, 454, 492,
	462, 303, 0, 2435, 493, 391, 616, 472, 632, 662,
	663, 279, 428, 646, 550, 655, 680, 234, 276, 442,
	534, 638, 518, 417, 612, 613, 348, 517, 311, 209,
	388, 668, 232, 502, 390, 253, 241, 618, 643, 315,
	267, 305, 479, 0, 675, 221, 545, 629, 250, 506,
	0, 0, 683, 258, 528, 641, 630, 223, 625, 527,
	413, 345, 346, 222, 0, 480, 284, 309, 0, 0,
	274, 437, 620, 621, 272, 684, 237, 654, 228, 0,
	653, 430, 615, 626, 414, 402, 227, 624, 412, 401,
	353, 374, 375, 296, 324, 469, 394, 470, 323, 325,
	425, 424, 426, 215, 639, 658, 0, 216, 0, 523,
	642, 685, 474, 220, 244, 245, 248, 0, 295, 299,
	307, 310, 320, 321, 331, 386, 441, 468, 464, 473,
	0, 609, 633, 647, 660, 666, 667, 669, 670, 671,
	672, 673, 676, 674, 429, 329, 519, 352, 392, 0,
	0, 447, 495, 251, 637, 520, 240, 603, 418, 427,
	259, 261, 260, 235, 511, 608, 246, 266, 207, 0,
	0, 0, 0, 270, 271, 0, 604, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 686, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 681, 536, 542, 537, 538, 539,
	540, 541, 0, 543, 0, 0, 0, 0, 0, 419,
	0, 622, 623, 704, 403, 509, 634, 354, 368, 371,
	360, 380, 0, 381, 356, 357, 362, 365, 366, 367,
	372, 373, 377, 383, 263, 218, 410, 420, 607, 330,
	224, 225, 226, 552, 553, 554, 555, 651, 652, 656,
	213, 485, 486, 487, 488, 308, 645, 326, 491, 490,
	350, 351, 398, 471, 568, 570, 581, 585, 587, 589,
	595, 598, 569, 571, 582, 586, 588, 590, 596, 599,
	558, 560, 562, 564, 577, 576, 573, 601, 602, 579,
	584, 563, 575, 580, 593, 600, 597, 557, 561, 565,
	574, 592, 591, 572, 583, 594, 578, 566, 559, 567,
	0, 204, 229, 387, 0, 477, 304, 682, 649, 507,
	644, 214, 231, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 208, 217, 230,
	242, 247, 254, 277, 292, 294, 301, 314, 327, 328,
	337, 338, 341, 347, 399, 406, 407, 408, 409, 431,
	432, 433, 436, 439, 440, 443, 445, 446, 449, 453,
	457, 458, 459, 461, 463, 465, 478, 483, 497, 498,
	499, 500, 501, 504, 505, 512, 513, 514, 515, 516,
	524, 525, 530, 531, 532, 533, 544, 617, 619, 636,
	657, 664, 503, 404, 0, 475, 610, 0, 0, 317,
	318, 466, 467, 332, 333, 678, 679, 316, 631, 665,
	628, 677, 659, 460, 397, 0, 0, 400, 297, 322,
	339, 0, 648, 526, 236, 489, 306, 265, 0, 0,
	219, 257, 239, 275, 290, 293, 343, 411, 421, 451,
	456, 312, 287, 255, 482, 252, 508, 547, 548, 549,
	551, 415, 282, 455, 556, 0, 395, 605, 606, 335,
	0, 0, 0, 0, 0, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 385,
	283, 0, 0, 212, 529, 0, 452, 0, 211, 0,
	510, 268, 396, 393, 614, 298, 289, 285, 264, 336,
	405, 450, 546, 444, 0, 389, 0, 650, 521, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	262, 344, 210, 435, 522, 302, 0, 0, 0, 0,
	0, 535, 756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 256, 0, 0, 0, 370,
	379, 378, 358, 359, 361, 363, 369, 376, 382, 355,
	364, 0, 0, 640, 0, 0, 0, 281, 340, 288,
	280, 611, 0, 0, 0, 0, 0, 0, 627, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 1133, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 423, 273, 0, 476, 0, 319, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 661,
	0, 0, 0, 0, 0, 0, 0, 384, 1139, 349,
	205, 233, 1137, 0, 434, 484, 496, 0, 0, 0,
	0, 269, 0, 494, 448, 635, 243, 300, 481, 454,
	492, 462, 303, 0, 0, 493, 391, 616, 472, 632,
	662, 663, 279, 428, 646, 550, 655, 680, 234, 276,
	442, 534, 638, 518, 417, 612, 613, 348, 517, 311,
	209, 388, 668, 232, 502, 390, 253, 241, 618, 643,
	315, 267, 305, 479, 0, 675, 221, 545, 629, 250,
	506, 0, 0, 683, 258, 528, 641, 630, 223, 625,
	527, 413, 345, 346, 222, 0, 480, 284, 309, 0,
	0, 274, 437, 620, 621, 272, 684, 237, 654, 228,
	0, 653, 430, 615, 626, 414, 402, 227, 624, 412,
	401, 353, 374, 375, 296, 324, 469, 394, 470, 323,
	325, 425, 424, 426, 215, 639, 658, 0, 216, 0,
	523, 642, 685, 474, 220, 244, 245, 248, 0, 295,
	299, 307, 310, 320, 321, 331, 386, 441, 468, 464,
	473, 0, 609, 633, 647, 660, 666, 667, 669, 670,
	671, 672, 673, 676, 674, 429, 329, 519, 352, 392,
	0, 0, 447, 495, 251, 637, 520, 240, 603, 418,
	427, 259, 261, 260, 235, 511, 608, 246, 266, 207,
	0, 0, 0, 0, 270, 271, 0, 604, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 681, 536, 542, 537, 538,
	539, 540, 541, 0, 543, 0, 0, 0, 0, 0,
	419, 0, 622, 623, 704, 403, 509, 634, 354, 368,
	371, 360, 380, 0, 381, 356, 357, 362, 365, 366,
	367, 372, 373, 377, 383, 263, 218, 410, 420, 607,
	330, 224, 225, 226, 552, 553, 554, 555, 651, 652,
	656, 213, 485, 486, 487, 488, 308, 645, 326, 491,
	490, 350, 351, 398, 471, 568, 570, 581, 585, 587,
	589, 595, 598, 569, 571, 582, 586, 588, 590, 596,
	599, 558, 560, 562, 564, 577, 576, 573, 601, 602,
	579, 584, 563, 575, 580, 593, 600, 597, 557, 561,
	565, 574, 592, 591, 572, 583, 594, 578, 566, 559,
	567, 0, 204, 229, 387, 0, 477, 304, 682, 649,
	507, 644, 214, 231, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 208, 217,
	230, 242, 247, 254, 277, 292, 294, 301, 314, 327,
	328, 337, 338, 341, 347, 399, 406, 407, 408, 409,
	431, 432, 433, 436, 439, 440, 443, 445, 446, 449,
	453, 457, 458, 459, 461, 463, 465, 478, 483, 497,
	498, 499, 500, 501, 504, 505, 512, 513, 514, 515,
	516, 524, 525, 530, 531, 532, 533, 544, 617, 619,
	636, 657, 664, 503, 404, 0, 475, 610, 0, 0,
	317, 318, 466, 467, 332, 333, 678, 679, 316, 631,
	665, 628, 677, 659, 460, 397, 0, 0, 400, 297,
	322, 339, 0, 648, 526, 236, 489, 306, 265, 0,
	0, 219, 257, 239, 275, 290, 293, 343, 411, 421,
	451, 456, 312, 287, 255, 482, 252, 508, 547, 548,
	549, 551, 415, 282, 455, 556, 0, 395, 605, 606,
	335, 0, 0, 0, 0, 0, 0, 438, 0, 0,
	2437, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	385, 283, 0, 0, 212, 529, 0, 452, 0, 211,
	0, 510, 268, 396, 393, 614, 298, 289, 285, 264,
	336, 405, 450, 546, 444, 0, 389, 0, 650, 521,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 262, 344, 210, 435, 522, 302, 0, 0, 0,
	0, 2025, 535, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 256, 0, 0, 0,
	370, 379, 378, 358, 359, 361, 363, 369, 376, 382,
	355, 364, 0, 0, 640, 0, 0, 0, 281, 340,
	288, 280, 611, 0, 0, 0, 0, 0, 0, 627,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 423, 273, 0, 476, 0, 319, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	661, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	349, 205, 233, 0, 0, 434, 484, 496, 0, 0,
	0, 0, 269, 0, 494, 448, 635, 243, 300, 481,
	454, 492, 462, 303, 0, 0, 493, 391, 616, 472,
	632, 662, 663, 279, 428, 646, 550, 655, 680, 234,
	276, 442, 534, 638, 518, 417, 612, 613, 348, 517,
	311, 209, 388, 668, 232, 502, 390, 253, 241, 618,
	643, 315, 267, 305, 479, 0, 675, 221, 545, 629,
	250, 506, 0, 0, 683, 258, 528, 641, 630, 223,
	625, 527, 413, 345, 346, 222, 0, 480, 284, 309,
	0, 0, 274, 437, 620, 621, 272, 684, 237, 654,
	228, 0, 653, 430, 615, 626, 414, 402, 227, 624,
	412, 401, 353, 374, 375, 296, 324, 469, 394, 470,
	323, 325, 425, 424, 426, 215, 639, 658, 0, 216,
	0, 523, 642, 685, 474, 220, 244, 245, 248, 0,
	295, 299, 307, 310, 320, 321, 331, 386, 441, 468,
	464, 473, 0, 609, 633, 647, 660, 666, 667, 669,
	670, 671, 672, 673, 676, 674, 429, 329, 519, 352,
	392, 0, 0, 447, 495, 251, 637, 520, 240, 603,
	418, 427, 259, 261, 260, 235, 511, 608, 246, 266,
	207, 0, 0, 0, 0, 270, 271, 0, 604, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 686, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 681, 536, 542, 537,
	538, 539, 540, 541, 0, 543, 0, 0, 0, 0,
	0, 419, 0, 622, 623, 704, 403, 509, 634, 354,
	368, 371, 360, 380, 0, 381, 356, 357, 362, 365,
	366, 367, 372, 373, 377, 383, 263, 218, 410, 420,
	607, 330, 224, 225, 226, 552, 553, 554, 555, 651,
	652, 656, 213, 485, 486, 487, 488, 308, 645, 326,
	491, 490, 350, 351, 398, 471, 568, 570, 581, 585,
	587, 589, 595, 598, 569, 571, 582, 586, 588, 590,
	596, 599, 558, 560, 562, 564, 577, 576, 573, 601,
	602, 579, 584, 563, 575, 580, 593, 600, 597, 557,
	561, 565, 574, 592, 591, 572, 583, 594, 578, 566,
	559, 567, 0, 204, 229, 387, 0, 477, 304, 682,
	649, 507, 644, 214, 231, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 208,
	217, 230, 242, 247, 254, 277, 292, 294, 301, 314,
	327, 328, 337, 338, 341, 347, 399, 406, 407, 408,
	409, 431, 432, 433, 436, 439, 440, 443, 445, 446,
	449, 453, 457, 458, 459, 461, 463, 465, 478, 483,
	497, 498, 499, 500, 501, 504, 505, 512, 513, 514,
	515, 516, 524, 525, 530, 531, 532, 533, 544, 617,
	619, 636, 657, 664, 503, 404, 0, 475, 610, 0,
	0, 317, 318, 466, 467, 332, 333, 678, 679, 316,
	631, 665, 628, 677, 659, 460, 397, 0, 0, 400,
	297, 322, 339, 0, 648, 526, 236, 489, 306, 265,
	0, 0, 219, 257, 239, 275, 290, 293, 343, 411,
	421, 451, 456, 312, 287, 255, 482, 252, 508, 547,
	548, 549, 551, 415, 282, 455, 556, 0, 395, 605,
	606, 335, 0, 0, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 385, 283, 0, 0, 212, 529, 0, 452, 0,
	211, 0, 510, 268, 396, 393, 614, 298, 289, 285,
	264, 336, 405, 450, 546, 444, 0, 389, 0, 650,
	521, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 262, 344, 210, 435, 522, 302, 0, 0,
	0, 1806, 0, 535, 756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 256, 0, 0,
	0, 370, 379, 378, 358, 359, 361, 363, 369, 376,
	382, 355, 364, 0, 0, 640, 0, 0, 0, 281,
	340, 288, 280, 611, 0, 0, 0, 0, 0, 0,
	627, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 423, 273, 0, 476, 0, 319,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 661, 0, 0, 0, 3853, 0, 0, 0, 384,
	0, 349, 205, 233, 0, 0, 434, 484, 496, 0,
	0, 0, 0, 269, 0, 494, 448, 635, 243, 300,
	481, 454, 492, 462, 303, 0, 0, 493, 391, 616,
	472, 632, 662, 663, 279, 428, 646, 550, 655, 680,
	234, 276, 442, 534, 638, 518, 417, 612, 613, 348,
	517, 311, 209, 388, 668, 232, 502, 390, 253, 241,
	618, 643, 315, 267, 305, 479, 0, 675, 221, 545,
	629, 250, 506, 0, 0, 683, 258, 528, 641, 630,
	223, 625, 527, 413, 345, 346, 222, 0, 480, 284,
	309, 0, 0, 274, 437, 620, 621, 272, 684, 237,
	654, 228, 0, 653, 430, 615, 626, 414, 402, 227,
	624, 412, 401, 353, 374, 375, 296, 324, 469, 394,
	470, 323, 325, 425, 424, 426, 215, 639, 658, 0,
	216, 0, 523, 642, 685, 474, 220, 244, 245, 248,
	0, 295, 299, 307, 310, 320, 321, 331, 386, 441,
	468, 464, 473, 0, 609, 633, 647, 660, 666, 667,
	669, 670, 671, 672, 673, 676, 674, 429, 329, 519,
	352, 392, 0, 0, 447, 495, 251, 637, 520, 240,
	603, 418, 427, 259, 261, 260, 235, 511, 608, 246,
	266, 207, 0, 0, 0, 0, 270, 271, 0, 604,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 681, 536, 542,
	537, 538, 539, 540, 541, 0, 543, 0, 0, 0,
	0, 0, 419, 0, 622, 623, 704, 403, 509, 634,
	354, 368, 371, 360, 380, 0, 381, 356, 357, 362,
	365, 366, 367, 372, 373, 377, 383, 263, 218, 410,
	420, 607, 330, 224, 225, 226, 552, 553, 554, 555,
	651, 652, 656, 213, 485, 486, 487, 488, 308, 645,
	326, 491, 490, 350, 351, 398, 471, 568, 570, 581,
	585, 587, 589, 595, 598, 569, 571, 582, 586, 588,
	590, 596, 599, 558, 560, 562, 564, 577, 576, 573,
	601, 602, 579, 584, 563, 575, 580, 593, 600, 597,
	557, 561, 565, 574, 592, 591, 572, 583, 594, 578,
	566, 559, 567, 0, 204, 229, 387, 0, 477, 304,
	682, 649, 507, 644, 214, 231, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	208, 217, 230, 242, 247, 254, 277, 292, 294, 301,
	314, 327, 328, 337, 338, 341, 347, 399, 406, 407,
	408, 409, 431, 432, 433, 436, 439, 440, 443, 445,
	446, 449, 453, 457, 458, 459, 461, 463, 465, 478,
	483, 497, 498, 499, 500, 501, 504, 505, 512, 513,
	514, 515, 516, 524, 525, 530, 531, 532, 533, 544,
	617, 619, 636, 657, 664, 503, 404, 0, 475, 610,
	0, 0, 317, 318, 466, 467, 332, 333, 678, 679,
	316, 631, 665, 628, 677, 659, 460, 397, 0, 0,
	400, 297, 322, 339, 0, 648, 526, 236, 489, 306,
	265, 0, 0, 219, 257, 239, 275, 290, 293, 343,
	411, 421, 451, 456, 312, 287, 255, 482, 252, 508,
	547, 548, 549, 551, 415, 282, 455, 556, 0, 395,
	605, 606, 335, 0, 0, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 385, 283, 0, 0, 212, 529, 0, 452,
	0, 211, 0, 510, 268, 396, 393, 614, 298, 289,
	285, 264, 336, 405, 450, 546, 444, 0, 389, 0,
	650, 521, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 262, 344, 210, 435, 522, 302, 0,
	0, 0, 0, 2197, 535, 756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 256, 0,
	0, 0, 370, 379, 378, 358, 359, 361, 363, 369,
	376, 382, 355, 364, 0, 0, 640, 0, 0, 0,
	281, 340, 288, 280, 611, 0, 0, 0, 0, 0,
	0, 627, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2198,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 0, 423, 273, 0, 476, 0,
	319, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 661, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 349, 205, 233, 0, 0, 434, 484, 496,
	0, 0, 0, 0, 269, 0, 494, 448, 635, 243,
	300, 481, 454, 492, 462, 303, 0, 0, 493, 391,
	616, 472, 632, 662, 663, 279, 428, 646, 550, 655,
	680, 234, 276, 442, 534, 638, 518, 417, 612, 613,
	348, 517, 311, 209, 388, 668, 232, 502, 390, 253,
	241, 618, 643, 315, 267, 305, 479, 0, 675, 221,
	545, 629, 250, 506, 0, 0, 683, 258, 528, 641,
	630, 223, 625, 527, 413, 345, 346, 222, 0, 480,
	284, 309, 0, 0, 274, 437, 620, 621, 272, 684,
	237, 654, 228, 0, 653, 430, 615, 626, 414, 402,
	227, 624, 412, 401, 353, 374, 375, 296, 324, 469,
	394, 470, 323, 325, 425, 424, 426, 215, 639, 658,
	0, 216, 0, 523, 642, 685, 474, 220, 244, 245,
	248, 0, 295, 299, 307, 310, 320, 321, 331, 386,
	441, 468, 464, 473, 0, 609, 633, 647, 660, 666,
	667, 669, 670, 671, 672, 673, 676, 674, 429, 329,
	519, 352, 392, 0, 0, 447, 495, 251, 637, 520,
	240, 603, 418, 427, 259, 261, 260, 235, 511, 608,
	246, 266, 207, 0, 0, 0, 0, 270, 271, 0,
	604, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	686, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 681, 536,
	542, 537, 538, 539, 540, 541, 0, 543, 0, 0,
	0, 0, 0, 419, 0, 622, 623, 704, 403, 509,
	634, 354, 368, 371, 360, 380, 0, 381, 356, 357,
	362, 365, 366, 367, 372, 373, 377, 383, 263, 218,
	410, 420, 607, 330, 224, 225, 226, 552, 553, 554,
	555, 651, 652, 656, 213, 485, 486, 487, 488, 308,
	645, 326, 491, 490, 350, 351, 398, 471, 568, 570,
	581, 585, 587, 589, 595, 598, 569, 571, 582, 586,
	588, 590, 596, 599, 558, 560, 562, 564, 577, 576,
	573, 601, 602, 579, 584, 563, 575, 580, 593, 600,
	597, 557, 561, 565, 574, 592, 591, 572, 583, 594,
	578, 566, 559, 567, 0, 204, 229, 387, 0, 477,
	304, 682, 649, 507, 644, 214, 231, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 208, 217, 230, 242, 247, 254, 277, 292, 294,
	301, 314, 327, 328, 337, 338, 341, 347, 399, 406,
	407, 408, 409, 431, 432, 433, 436, 439, 440, 443,
	445, 446, 449, 453, 457, 458, 459, 461, 463, 465,
	478, 483, 497, 498, 499, 500, 501, 504, 505, 512,
	513, 514, 515, 516, 524, 525, 530, 531, 532, 533,
	544, 617, 619, 636, 657, 664, 503, 404, 0, 475,
	610, 0, 0, 317, 318, 466, 467, 332, 333, 678,
	679, 316, 631, 665, 628, 677, 659, 460, 397, 0,
	0, 400, 297, 322, 339, 0, 648, 526, 236, 489,
	306, 265, 0, 0, 219, 257, 239, 275, 290, 293,
	343, 411, 421, 451, 456, 312, 287, 255, 482, 252,
	508, 547, 548, 549, 551, 415, 282, 455, 556, 0,
	395, 605, 606, 335, 0, 0, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 385, 283, 0, 0, 212, 529, 0,
	452, 0, 211, 0, 510, 268, 396, 393, 614, 298,
	289, 285, 264, 336, 405, 450, 546, 444, 0, 389,
	0, 650, 521, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 262, 344, 210, 435, 522, 302,
	0, 0, 0, 0, 2973, 535, 756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 256,
	0, 0, 0, 370, 379, 378, 358, 359, 361, 363,
	369, 376, 382, 355, 364, 0, 0, 640, 0, 0,
	0, 281, 340, 288, 280, 611, 0, 0, 0, 0,
	0, 0, 627, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2974, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 423, 273, 0, 476,
	0, 319, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 661, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 349, 205, 233, 0, 0, 434, 484,
	496, 0, 0, 0, 0, 269, 0, 494, 448, 635,
	243, 300, 481, 454, 492, 462, 303, 0, 0, 493,
	391, 616, 472, 632, 662, 663, 279, 428, 646, 550,
	655, 680, 234, 276, 442, 534, 638, 518, 417, 612,
	613, 348, 517, 311, 209, 388, 668, 232, 502, 390,
	253, 241, 618, 643, 315, 267, 305, 479, 0, 675,
	221, 545, 629, 250, 506, 0, 0, 683, 258, 528,
	641, 630, 223, 625, 527, 413, 345, 346, 222, 0,
	480, 284, 309, 0, 0, 274, 437, 620, 621, 272,
	684, 237, 654, 228, 0, 653, 430, 615, 626, 414,
	402, 227, 624, 412, 401, 353, 374, 375, 296, 324,
	469, 394, 470, 323, 325, 425, 424, 426, 215, 639,
	658, 0, 216, 0, 523, 642, 685, 474, 220, 244,
	245, 248, 0, 295, 299, 307, 310, 320, 321, 331,
	386, 441, 468, 464, 473, 0, 609, 633, 647, 660,
	666, 667, 669, 670, 671, 672, 673, 676, 674, 429,
	329, 519, 352, 392, 0, 0, 447, 495, 251, 637,
	520, 240, 603, 418, 427, 259, 261, 260, 235, 511,
	608, 246, 266, 207, 0, 0, 0, 0, 270, 271,
	0, 604, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 681,
	536, 542, 537, 538, 539, 540, 541, 0, 543, 0,
	0, 0, 0, 0, 419, 0, 622, 623, 704, 403,
	509, 634, 354, 368, 371, 360, 380, 0, 381, 356,
	357, 362, 365, 366, 367, 372, 373, 377, 383, 263,
	218, 410, 420, 607, 330, 224, 225, 226, 552, 553,
	554, 555, 651, 652, 656, 213, 485, 486, 487, 488,
	308, 645, 326, 491, 490, 350, 351, 398, 471, 568,
	570, 581, 585, 587, 589, 595, 598, 569, 571, 582,
	586, 588, 590, 596, 599, 558, 560, 562, 564, 577,
	576, 573, 601, 602, 579, 584, 563, 575, 580, 593,
	600, 597, 557, 561, 565, 574, 592, 591, 572, 583,
	594, 578, 566, 559, 567, 0, 204, 229, 387, 0,
	477, 304, 682, 649, 507, 644, 214, 231, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 208, 217, 230, 242, 247, 254, 277, 292,
	294, 301, 314, 327, 328, 337, 338, 341, 347, 399,
	406, 407, 408, 409, 431, 432, 433, 436, 439, 440,
	443, 445, 446, 449, 453, 457, 458, 459, 461, 463,
	465, 478, 483, 497, 498, 499, 500, 501, 504, 505,
	512, 513, 514, 515, 516, 524, 525, 530, 531, 532,
	533, 544, 617, 619, 636, 657, 664, 503, 404, 0,
	475, 610, 0, 0, 317, 318, 466, 467, 332, 333,
	678, 679, 316, 631, 665, 628, 677, 659, 460, 397,
	0, 0, 400, 297, 322, 339, 0, 648, 526, 236,
	489, 306, 265, 0, 0, 219, 257, 239, 275, 290,
	293, 343, 411, 421, 451, 456, 312, 287, 255, 482,
	252, 508, 547, 548, 549, 551, 415, 282, 455, 556,
	0, 395, 605, 606, 335, 0, 0, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 385, 283, 0, 0, 212, 529,
	0, 452, 0, 211, 0, 510, 268, 396, 393, 614,
	298, 289, 285, 264, 336, 405, 450, 546, 444, 0,
	389, 0, 650, 521, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 262, 344, 210, 435, 522,
	302, 0, 0, 0, 0, 0, 535, 756, 0, 0,
	0, 0, 2940, 0, 0, 0, 0, 249, 0, 0,
	256, 2941, 0, 0, 370, 379, 378, 358, 359, 361,
	363, 369, 376, 382, 355, 364, 0, 0, 640, 0,
	0, 0, 281, 340, 288, 280, 611, 0, 0, 0,
	0, 0, 0, 627, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 423, 273, 0,
	476, 0, 319, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 661, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 349, 205, 233, 0, 0, 434,
	484, 496, 0, 0, 0, 0, 269, 0, 494, 448,
	635, 243, 300, 481, 454, 492, 462, 303, 0, 0,
	493, 391, 616, 472, 632, 662, 663, 279, 428, 646,
	550, 655, 680, 234, 276, 442, 534, 638, 518, 417,
	612, 613, 348, 517, 311, 209, 388, 668, 232, 502,
	390, 253, 241, 618, 643, 315, 267, 305, 479, 0,
	675, 221, 545, 629, 250, 506, 0, 0, 683, 258,
	528, 641, 630, 223, 625, 527, 413, 345, 346, 222,
	0, 480, 284, 309, 0, 0, 274, 437, 620, 621,
	272, 684, 237, 654, 228, 0, 653, 430, 615, 626,
	414, 402, 227, 624, 412, 401, 353, 374, 375, 296,
	324, 469, 394, 470, 323, 325, 425, 424, 426, 215,
	639, 658, 0, 216, 0, 523, 642, 685, 474, 220,
	244, 245, 248, 0, 295, 299, 307, 310, 320, 321,
	331, 386, 441, 468, 464, 473, 0, 609, 633, 647,
	660, 666, 667, 669, 670, 671, 672, 673, 676, 674,
	429, 329, 519, 352, 392, 0, 0, 447, 495, 251,
	637, 520, 240, 603, 418, 427, 259, 261, 260, 235,
	511, 608, 246, 266, 207, 0, 0, 0, 0, 270,
	271, 0, 604, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 686, 687, 688, 689, 690, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 703,
	681, 536, 542, 537, 538, 539, 540, 541, 0, 543,
	0, 0, 0, 0, 0, 419, 0, 622, 623, 704,
	403, 509, 634, 354, 368, 371, 360, 380, 0, 381,
	356, 357, 362, 365, 366, 367, 372, 373, 377, 383,
	263, 218, 410, 420, 607, 330, 224, 225, 226, 552,
	553, 554, 555, 651, 652, 656, 213, 485, 486, 487,
	488, 308, 645, 326, 491, 490, 350, 351, 398, 471,
	568, 570, 581, 585, 587, 589, 595, 598, 569, 571,
	582, 586, 588, 590, 596, 599, 558, 560, 562, 564,
	577, 576, 573, 601, 602, 579, 584, 563, 575, 580,
	593, 600, 597, 557, 561, 565, 574, 592, 591, 572,
	583, 594, 578, 566, 559, 567, 0, 204, 229, 387,
	0, 477, 304, 682, 649, 507, 644, 214, 231, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 208, 217, 230, 242, 247, 254, 277,
	292, 294, 301, 314, 327, 328, 337, 338, 341, 347,
	399, 406, 407, 408, 409, 431, 432, 433, 436, 439,
	440, 443, 445, 446, 449, 453, 457, 458, 459, 461,
	463, 465, 478, 483, 497, 498, 499, 500, 501, 504,
	505, 512, 513, 514, 515, 516, 524, 525, 530, 531,
	532, 533, 544, 617, 619, 636, 657, 664, 503, 404,
	0, 475, 610, 0, 0, 317, 318, 466, 467, 332,
	333, 678, 679, 316, 631, 665, 628, 677, 659, 460,
	397, 0, 0, 400, 297, 322, 339, 0, 648, 526,
	236, 489, 306, 265, 0, 0, 219, 257, 239, 275,
	290, 293, 343, 411, 421, 451, 456, 312, 287, 255,
	482, 252, 508, 547, 548, 549, 551, 415, 282, 455,
	556, 0, 395, 605, 606, 335, 0, 0, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	286, 1869, 0, 0, 0, 385, 283, 0, 0, 212,
	529, 0, 452, 0, 211, 0, 510, 268, 396, 393,
	614, 298, 289, 285, 264, 336, 405, 450, 546, 444,
	0, 389, 0, 650, 521, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 262, 344, 210, 435,
	522, 302, 0, 0, 0, 0, 1868, 535, 756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 256, 0, 0, 0, 370, 379, 378, 358, 359,
	361, 363, 369, 376, 382, 355, 364, 0, 0, 640,
	0, 0, 0, 281, 340, 288, 280, 611, 0, 0,
	0, 0, 0, 0, 627, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 423, 273,
	0, 476, 0, 319, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 661, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 349, 205, 233, 0, 0,
	434, 484, 496, 0, 0, 0, 0, 269, 0, 494,
	448, 635, 243, 300, 481, 454, 492, 462, 303, 0,
	0, 493, 391, 616, 472, 632, 662, 663, 279, 428,
	646, 550, 655, 680, 234, 276, 442, 534, 638, 518,
	417, 612, 613, 348, 517, 311, 209, 388, 668, 232,
	502, 390, 253, 241, 618, 643, 315, 267, 305, 479,
	0, 675, 221, 545, 629, 250, 506, 0, 0, 683,
	258, 528, 641, 630, 223, 625, 527, 413, 345, 346,
	222, 0, 480, 284, 309, 0, 0, 274, 437, 620,
	621, 272, 684, 237, 654, 228, 0, 653, 430, 615,
	626, 414, 402, 227, 624, 412, 401, 353, 374, 375,
	296, 324, 469, 394, 470, 323, 325, 425, 424, 426,
	215, 639, 658, 0, 216, 0, 523, 642, 685, 474,
	220, 244, 245, 248, 0, 295, 299, 307, 310, 320,
	321, 331, 386, 441, 468, 464, 473, 0, 609, 633,
	647, 660, 666, 667, 669, 670, 671, 672, 673, 676,
	674, 429, 329, 519, 352, 392, 0, 0, 447, 495,
	251, 637, 520, 240, 603, 418, 427, 259, 261, 260,
	235, 511, 608, 246, 266, 207, 0, 0, 0, 0,
	270, 271, 0, 604, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 681, 536, 542, 537, 538, 539, 540, 541, 0,
	543, 0, 0, 0, 0, 0, 419, 0, 622, 623,
	704, 403, 509, 634, 354, 368, 371, 360, 380, 0,
	381, 356, 357, 362, 365, 366, 367, 372, 373, 377,
	383, 263, 218, 410, 420, 607, 330, 224, 225, 226,
	552, 553, 554, 555, 651, 652, 656, 213, 485, 486,
	487, 488, 308, 645, 326, 491, 490, 350, 351, 398,
	471, 568, 570, 581, 585, 587, 589, 595, 598, 569,
	571, 582, 586, 588, 590, 596, 599, 558, 560, 562,
	564, 577, 576, 573, 601, 602, 579, 584, 563, 575,
	580, 593, 600, 597, 557, 561, 565, 574, 592, 591,
	572, 583, 594, 578, 566, 559, 567, 0, 204, 229,
	387, 0, 477, 304, 682, 649, 507, 644, 214, 231,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 208, 217, 230, 242, 247, 254,
	277, 292, 294, 301, 314, 327, 328, 337, 338, 341,
	347, 399, 406, 407, 408, 409, 431, 432, 433, 436,
	439, 440, 443, 445, 446, 449, 453, 457, 458, 459,
	461, 463, 465, 478, 483, 497, 498, 499, 500, 501,
	504, 505, 512, 513, 514, 515, 516, 524, 525, 530,
	531, 532, 533, 544, 617, 619, 636, 657, 664, 503,
	404, 0, 475, 610, 0, 0, 317, 318, 466, 467,
	332, 333, 678, 679, 316, 631, 665, 628, 677, 659,
	460, 397, 0, 0, 400, 297, 322, 339, 0, 648,
	526, 236, 489, 306, 265, 0, 0, 219, 257, 239,
	275, 290, 293, 343, 411, 421, 451, 456, 312, 287,
	255, 482, 252, 508, 547, 548, 549, 551, 415, 282,
	455, 556, 0, 395, 605, 606, 335, 0, 0, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 385, 283, 0, 0,
	212, 529, 0, 452, 0, 211, 0, 510, 268, 396,
	393, 614, 298, 289, 285, 264, 336, 405, 450, 546,
	444, 0, 389, 0, 650, 521, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 262, 344, 210,
	435, 522, 302, 0, 0, 0, 0, 0, 535, 758,
	759, 760, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 256, 0, 0, 0, 370, 379, 378, 358,
	359, 361, 363, 369, 376, 382, 355, 364, 0, 0,
	640, 0, 0, 0, 281, 340, 288, 280, 611, 0,
	0, 0, 0, 0, 0, 627, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 423,
	273, 0, 476, 0, 319, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 661, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 349, 205, 233, 0,
	0, 434, 484, 496, 0, 0, 0, 0, 269, 0,
	494, 448, 635, 243, 300, 481, 454, 492, 462, 303,
	0, 0, 493, 391, 616, 472, 632, 662, 663, 279,
	428, 646, 550, 655, 680, 234, 276, 442, 534, 638,
	518, 417, 612, 613, 348, 517, 311, 209, 388, 668,
	232, 502, 390, 253, 241, 618, 643, 315, 267, 305,
	479, 0, 675, 221, 545, 629, 250, 506, 0, 0,
	683, 258, 528, 641, 630, 223, 625, 527, 413, 345,
	346, 222, 0, 480, 284, 309, 0, 0, 274, 437,
	620, 621, 272, 684, 237, 654, 228, 0, 653, 430,
	615, 626, 414, 402, 227, 624, 412, 401, 353, 374,
	375, 296, 324, 469, 394, 470, 323, 325, 425, 424,
	426, 215, 639, 658, 0, 216, 0, 523, 642, 685,
	474, 220, 244, 245, 248, 0, 295, 299, 307, 310,
	320, 321, 331, 386, 441, 468, 464, 473, 0, 609,
	633, 647, 660, 666, 667, 669, 670, 671, 672, 673,
	676, 674, 429, 329, 519, 352, 392, 0, 0, 447,
	495, 251, 637, 520, 240, 603, 418, 427, 259, 261,
	260, 235, 511, 608, 246, 266, 207, 0, 0, 0,
	0, 270, 271, 0, 604, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 686, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 681, 536, 542, 537, 538, 539, 540, 541,
	0, 543, 0, 0, 0, 0, 0, 419, 0, 622,
	623, 704, 403, 509, 634, 354, 368, 371, 360, 380,
	0, 381, 356, 357, 362, 365, 366, 367, 372, 373,
	377, 383, 263, 218, 410, 420, 607, 330, 224, 225,
	226, 552, 553, 554, 555, 651, 652, 656, 213, 485,
	486, 487, 488, 308, 645, 326, 491, 490, 350, 351,
	398, 471, 568, 570, 581, 585, 587, 589, 595, 598,
	569, 571, 582, 586, 588, 590, 596, 599, 558, 560,
	562, 564, 577, 576, 573, 601, 602, 579, 584, 563,
	575, 580, 593, 600, 597, 557, 561, 565, 574, 592,
	591, 572, 583, 594, 578, 566, 559, 567, 0, 204,
	229, 387, 0, 477, 304, 682, 649, 507, 644, 214,
	231, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 208, 217, 230, 242, 247,
	254, 277, 292, 294, 301, 314, 327, 328, 337, 338,
	341, 347, 399, 406, 407, 408, 409, 431, 432, 433,
	436, 439, 440, 443, 445, 446, 449, 453, 457, 458,
	459, 461, 463, 465, 478, 483, 497, 498, 499, 500,
	501, 504, 505, 512, 513, 514, 515, 516, 524, 525,
	530, 531, 532, 533, 544, 617, 619, 636, 657, 664,
	503, 404, 0, 475, 610, 0, 0, 317, 318, 466,
	467, 332, 333, 678, 679, 316, 631, 665, 628, 677,
	659, 460, 397, 0, 0, 400, 297, 322, 339, 0,
	648, 526, 236, 489, 306, 265, 0, 0, 219, 257,
	239, 275, 290, 293, 343, 411, 421, 451, 456, 312,
	287, 255, 482, 252, 508, 547, 548, 549, 551, 415,
	282, 455, 556, 0, 395, 605, 606, 335, 0, 0,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 385, 283, 0,
	0, 212, 529, 0, 452, 0, 211, 0, 510, 268,
	396, 393, 614, 298, 289, 285, 264, 336, 405, 450,
	546, 444, 0, 389, 0, 650, 521, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 262, 344,
	210, 435, 522, 302, 0, 0, 0, 0, 0, 535,
	756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 256, 0, 0, 0, 370, 379, 378,
	358, 359, 361, 363, 369, 376, 382, 355, 364, 0,
	0, 640, 0, 0, 0, 281, 340, 288, 280, 611,
	0, 0, 0, 0, 0, 0, 627, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	423, 273, 0, 476, 0, 319, 334, 0, 0, 0,
	0, 4304, 0, 0, 0, 0, 0, 661, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 349, 205, 233,
	0, 0, 434, 484, 496, 0, 0, 0, 0, 269,
	0, 494, 448, 635, 243, 300, 481, 454, 492, 462,
	303, 0, 0, 493, 391, 616, 472, 632, 662, 663,
	279, 428, 646, 550, 655, 680, 234, 276, 442, 534,
	638, 518, 417, 612, 613, 348, 517, 311, 209, 388,
	668, 232, 502, 390, 253, 241, 618, 643, 315, 267,
	305, 479, 0, 675, 221, 545, 629, 250, 506, 0,
	0, 683, 258, 528, 641, 630, 223, 625, 527, 413,
	345, 346, 222, 0, 480, 284, 309, 0, 0, 274,
	437, 620, 621, 272, 684, 237, 654, 228, 0, 653,
	430, 615, 626, 414, 402, 227, 624, 412, 401, 353,
	374, 375, 296, 324, 469, 394, 470, 323, 325, 425,
	424, 426, 215, 639, 658, 0, 216, 0, 523, 642,
	685, 474, 220, 244, 245, 248, 0, 295, 299, 307,
	310, 320, 321, 331, 386, 441, 468, 464, 473, 0,
	609, 633, 647, 660, 666, 667, 669, 670, 671, 672,
	673, 676, 674, 429, 329, 519, 352, 392, 0, 0,
	447, 495, 251, 637, 520, 240, 603, 418, 427, 259,
	261, 260, 235, 511, 608, 246, 266, 207, 0, 0,
	0, 0, 270, 271, 0, 604, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 681, 536, 542, 537, 538, 539, 540,
	541, 0, 543, 0, 0, 0, 0, 0, 419, 0,
	622, 623, 704, 403, 509, 634, 354, 368, 371, 360,
	380, 0, 381, 356, 357, 362, 365, 366, 367, 372,
	373, 377, 383, 263, 218, 410, 420, 607, 330, 224,
	225, 226, 552, 553, 554, 555, 651, 652, 656, 213,
	485, 486, 487, 488, 308, 645, 326, 491, 490, 350,
	351, 398, 471, 568, 570, 581, 585, 587, 589, 595,
	598, 569, 571, 582, 586, 588, 590, 596, 599, 558,
	560, 562, 564, 577, 576, 573, 601, 602, 579, 584,
	563, 575, 580, 593, 600, 597, 557, 561, 565, 574,
	592, 591, 572, 583, 594, 578, 566, 559, 567, 0,
	204, 229, 387, 0, 477, 304, 682, 649, 507, 644,
	214, 231, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 208, 217, 230, 242,
	247, 254, 277, 292, 294, 301, 314, 327, 328, 337,
	338, 341, 347, 399, 406, 407, 408, 409, 431, 432,
	433, 436, 439, 440, 443, 445, 446, 449, 453, 457,
	458, 459, 461, 463, 465, 478, 483, 497, 498, 499,
	500, 501, 504, 505, 512, 513, 514, 515, 516, 524,
	525, 530, 531, 532, 533, 544, 617, 619, 636, 657,
	664, 503, 404, 0, 475, 610, 0, 0, 317, 318,
	466, 467, 332, 333, 678, 679, 316, 631, 665, 628,
	677, 659, 460, 397, 0, 0, 400, 297, 322, 339,
	0, 648, 526, 236, 489, 306, 265, 0, 0, 219,
	257, 239, 275, 290, 293, 343, 411, 421, 451, 456,
	312, 287, 255, 482, 252, 508, 547, 548, 549, 551,
	415, 282, 455, 556, 0, 395, 605, 606, 335, 0,
	0, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 385, 283,
	0, 0, 212, 529, 0, 452, 0, 211, 0, 510,
	268, 396, 393, 614, 298, 289, 285, 264, 336, 405,
	450, 546, 444, 0, 389, 0, 650, 521, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 262,
	344, 210, 435, 522, 302, 0, 0, 0, 0, 0,
	535, 756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 256, 0, 0, 0, 370, 379,
	378, 358, 359, 361, 363, 369, 376, 382, 355, 364,
	0, 0, 640, 0, 0, 0, 281, 340, 288, 280,
	611, 0, 0, 0, 0, 0, 0, 627, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 423, 273, 0, 476, 0, 319, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 661, 0,
	0, 0, 4220, 0, 0, 0, 384, 0, 349, 205,
	233, 0, 0, 434, 484, 496, 0, 0, 0, 0,
	269, 0, 494, 448, 635, 243, 300, 481, 454, 492,
	462, 303, 0, 0, 493, 391, 616, 472, 632, 662,
	663, 279, 428, 646, 550, 655, 680, 234, 276, 442,
	534, 638, 518, 417, 612, 613, 348, 517, 311, 209,
	388, 668, 232, 502, 390, 253, 241, 618, 643, 315,
	267, 305, 479, 0, 675, 221, 545, 629, 250, 506,
	0, 0, 683, 258, 528, 641, 630, 223, 625, 527,
	413, 345, 346, 222, 0, 480, 284, 309, 0, 0,
	274, 437, 620, 621, 272, 684, 237, 654, 228, 0,
	653, 430, 615, 626, 414, 402, 227, 624, 412, 401,
	353, 374, 375, 296, 324, 469, 394, 470, 323, 325,
	425, 424, 426, 215, 639, 658, 0, 216, 0, 523,
	642, 685, 474, 220, 244, 245, 248, 0, 295, 299,
	307, 310, 320, 321, 331, 386, 441, 468, 464, 473,
	0, 609, 633, 647, 660, 666, 667, 669, 670, 671,
	672, 673, 676, 674, 429, 329, 519, 352, 392, 0,
	0, 447, 495, 251, 637, 520, 240, 603, 418, 427,
	259, 261, 260, 235, 511, 608, 246, 266, 207, 0,
	0, 0, 0, 270, 271, 0, 604, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 686, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 681, 536, 542, 537, 538, 539,
	540, 541, 0, 543, 0, 0, 0, 0, 0, 419,
	0, 622, 623, 704, 403, 509, 634, 354, 368, 371,
	360, 380, 0, 381, 356, 357, 362, 365, 366, 367,
	372, 373, 377, 383, 263, 218, 410, 420, 607, 330,
	224, 225, 226, 552, 553, 554, 555, 651, 652, 656,
	213, 485, 486, 487, 488, 308, 645, 326, 491, 490,
	350, 351, 398, 471, 568, 570, 581, 585, 587, 589,
	595, 598, 569, 571, 582, 586, 588, 590, 596, 599,
	558, 560, 562, 564, 577, 576, 573, 601, 602, 579,
	584, 563, 575, 580, 593, 600, 597, 557, 561, 565,
	574, 592, 591, 572, 583, 594, 578, 566, 559, 567,
	0, 204, 229, 387, 0, 477, 304, 682, 649, 507,
	644, 214, 231, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 208, 217, 230,
	242, 247, 254, 277, 292, 294, 301, 314, 327, 328,
	337, 338, 341, 347, 399, 406, 407, 408, 409, 431,
	432, 433, 436, 439, 440, 443, 445, 446, 449, 453,
	457, 458, 459, 461, 463, 465, 478, 483, 497, 498,
	499, 500, 501, 504, 505, 512, 513, 514, 515, 516,
	524, 525, 530, 531, 532, 533, 544, 617, 619, 636,
	657, 664, 503, 404, 0, 475, 610, 0, 0, 317,
	318, 466, 467, 332, 333, 678, 679, 316, 631, 665,
	628, 677, 659, 460, 397, 0, 0, 400, 297, 322,
	339, 0, 648, 526, 236, 489, 306, 265, 0, 0,
	219, 257, 239, 275, 290, 293, 343, 411, 421, 451,
	456, 312, 287, 255, 482, 252, 508, 547, 548, 549,
	551, 415, 282, 455, 556, 0, 395, 605, 606, 335,
	0, 0, 0, 0, 0, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 385,
	283, 0, 0, 212, 529, 0, 452, 0, 211, 0,
	510, 268, 396, 393, 614, 298, 289, 285, 264, 336,
	405, 450, 546, 444, 0, 389, 0, 650, 521, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	262, 344, 210, 435, 522, 302, 0, 0, 0, 0,
	2025, 535, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 256, 0, 0, 0, 370,
	379, 378, 358, 359, 361, 363, 369, 376, 382, 355,
	364, 0, 0, 640, 0, 0, 0, 281, 340, 288,
	280, 611, 0, 0, 0, 0, 0, 0, 627, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 423, 273, 0, 476, 0, 319, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 661,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 349,
	205, 233, 0, 0, 434, 484, 496, 0, 0, 0,
	0, 269, 0, 494, 448, 635, 243, 300, 481, 454,
	492, 462, 303, 0, 0, 493, 391, 616, 472, 632,
	662, 663, 279, 428, 646, 550, 655, 680, 234, 276,
	442, 534, 638, 518, 417, 612, 613, 348, 517, 311,
	209, 388, 668, 232, 502, 390, 253, 241, 618, 643,
	315, 267, 305, 479, 0, 675, 221, 545, 629, 250,
	506, 0, 0, 683, 258, 528, 641, 630, 223, 625,
	527, 413, 345, 346, 222, 0, 480, 284, 309, 0,
	0, 274, 437, 620, 621, 272, 684, 237, 654, 228,
	0, 653, 430, 615, 626, 414, 402, 227, 624, 412,
	401, 353, 374, 375, 296, 324, 469, 394, 470, 323,
	325, 425, 424, 426, 215, 639, 658, 0, 216, 0,
	523, 642, 685, 474, 220, 244, 245, 248, 0, 295,
	299, 307, 310, 320, 321, 331, 386, 441, 468, 464,
	473, 0, 609, 633, 647, 660, 666, 667, 669, 670,
	671, 672, 673, 676, 674, 429, 329, 519, 352, 392,
	0, 0, 447, 495, 251, 637, 520, 240, 603, 418,
	427, 259, 261, 260, 235, 511, 608, 246, 266, 207,
	0, 0, 0, 0, 270, 271, 0, 604, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 681, 536, 542, 537, 538,
	539, 540, 541, 0, 543, 0, 0, 0, 0, 0,
	419, 0, 622, 623, 704, 403, 509, 634, 354, 368,
	371, 360, 380, 0, 381, 356, 357, 362, 365, 366,
	367, 372, 373, 377, 383, 263, 218, 410, 420, 607,
	330, 224, 225, 226, 552, 553, 554, 555, 651, 652,
	656, 213, 485, 486, 487, 488, 308, 645, 326, 491,
	490, 350, 351, 398, 471, 568, 570, 581, 585, 587,
	589, 595, 598, 569, 571, 582, 586, 588, 590, 596,
	599, 558, 560, 562, 564, 577, 576, 573, 601, 602,
	579, 584, 563, 575, 580, 593, 600, 597, 557, 561,
	565, 574, 592, 591, 572, 583, 594, 578, 566, 559,
	567, 0, 204, 229, 387, 0, 477, 304, 682, 649,
	507, 644, 214, 231, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 208, 217,
	230, 242, 247, 254, 277, 292, 294, 301, 314, 327,
	328, 337, 338, 341, 347, 399, 406, 407, 408, 409,
	431, 432, 433, 436, 439, 440, 443, 445, 446, 449,
	453, 457, 458, 459, 461, 463, 465, 478, 483, 497,
	498, 499, 500, 501, 504, 505, 512, 513, 514, 515,
	516, 524, 525, 530, 531, 532, 533, 544, 617, 619,
	636, 657, 664, 503, 404, 0, 475, 610, 0, 0,
	317, 318, 466, 467, 332, 333, 678, 679, 316, 631,
	665, 628, 677, 659, 460, 397, 0, 0, 400, 297,
	322, 339, 0, 648, 526, 236, 489, 306, 265, 0,
	0, 219, 257, 239, 275, 290, 293, 343, 411, 421,
	451, 456, 312, 287, 255, 482, 252, 508, 547, 548,
	549, 551, 415, 282, 455, 556, 0, 395, 605, 606,
	335, 0, 0, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	385, 283, 0, 0, 212, 529, 0, 452, 0, 211,
	0, 510, 268, 396, 393, 614, 298, 289, 285, 264,
	336, 405, 450, 546, 444, 0, 389, 0, 650, 521,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 262, 344, 210, 435, 522, 302, 0, 0, 0,
	0, 0, 535, 756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 256, 0, 0, 0,
	370, 379, 378, 358, 359, 361, 363, 369, 376, 382,
	355, 364, 0, 0, 640, 0, 0, 0, 281, 340,
	288, 280, 611, 0, 0, 0, 0, 0, 0, 627,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 423, 273, 0, 476, 0, 319, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	661, 0, 0, 0, 3853, 0, 0, 0, 384, 0,
	349, 205, 233, 0, 0, 434, 484, 496, 0, 0,
	0, 0, 269, 0, 494, 448, 635, 243, 300, 481,
	454, 492, 462, 303, 0, 0, 493, 391, 616, 472,
	632, 662, 663, 279, 428, 646, 550, 655, 680, 234,
	276, 442, 534, 638, 518, 417, 612, 613, 348, 517,
	311, 209, 388, 668, 232, 502, 390, 253, 241, 618,
	643, 315, 267, 305, 479, 0, 675, 221, 545, 629,
	250, 506, 0, 0, 683, 258, 528, 641, 630, 223,
	625, 527, 413, 345, 346, 222, 0, 480, 284, 309,
	0, 0, 274, 437, 620, 621, 272, 684, 237, 654,
	228, 0, 653, 430, 615, 626, 414, 402, 227, 624,
	412, 401, 353, 374, 375, 296, 324, 469, 394, 470,
	323, 325, 425, 424, 426, 215, 639, 658, 0, 216,
	0, 523, 642, 685, 474, 220, 244, 245, 248, 0,
	295, 299, 307, 310, 320, 321, 331, 386, 441, 468,
	464, 473, 0, 609, 633, 647, 660, 666, 667, 669,
	670, 671, 672, 673, 676, 674, 429, 329, 519, 352,
	392, 0, 0, 447, 495, 251, 637, 520, 240, 603,
	418, 427, 259, 261, 260, 235, 511, 608, 246, 266,
	207, 0, 0, 0, 0, 270, 271, 0, 604, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 686, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 681, 536, 542, 537,
	538, 539, 540, 541, 0, 543, 0, 0, 0, 0,
	0, 419, 0, 622, 623, 704, 403, 509, 634, 354,
	368, 371, 360, 380, 0, 381, 356, 357, 362, 365,
	366, 367, 372, 373, 377, 383, 263, 218, 410, 420,
	607, 330, 224, 225, 226, 552, 553, 554, 555, 651,
	652, 656, 213, 485, 486, 487, 488, 308, 645, 326,
	491, 490, 350, 351, 398, 471, 568, 570, 581, 585,
	587, 589, 595, 598, 569, 571, 582, 586, 588, 590,
	596, 599, 558, 560, 562, 564, 577, 576, 573, 601,
	602, 579, 584, 563, 575, 580, 593, 600, 597, 557,
	561, 565, 574, 592, 591, 572, 583, 594, 578, 566,
	559, 567, 0, 204, 229, 387, 0, 477, 304, 682,
	649, 507, 644, 214, 231, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 208,
	217, 230, 242, 247, 254, 277, 292, 294, 301, 314,
	327, 328, 337, 338, 341, 347, 399, 406, 407, 408,
	409, 431, 432, 433, 436, 439, 440, 443, 445, 446,
	449, 453, 457, 458, 459, 461, 463, 465, 478, 483,
	497, 498, 499, 500, 501, 504, 505, 512, 513, 514,
	515, 516, 524, 525, 530, 531, 532, 533, 544, 617,
	619, 636, 657, 664, 503, 404, 0, 475, 610, 0,
	0, 317, 318, 466, 467, 332, 333, 678, 679, 316,
	631, 665, 628, 677, 659, 460, 397, 0, 0, 400,
	297, 322, 339, 0, 648, 526, 236, 489, 306, 265,
	0, 0, 219, 257, 239, 275, 290, 293, 343, 411,
	421, 451, 456, 312, 287, 255, 482, 252, 508, 547,
	548, 549, 551, 415, 282, 455, 556, 0, 395, 605,
	606, 335, 0, 0, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 385, 283, 0, 0, 212, 529, 0, 452, 0,
	211, 0, 510, 268, 396, 393, 614, 298, 289, 285,
	264, 336, 405, 450, 546, 444, 0, 389, 0, 650,
	521, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 262, 344, 210, 435, 522, 302, 0, 101,
	0, 0, 0, 535, 756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 256, 0, 0,
	0, 370, 379, 378, 358, 359, 361, 363, 369, 376,
	382, 355, 364, 0, 0, 640, 0, 0, 0, 281,
	340, 288, 280, 611, 0, 0, 0, 0, 0, 0,
	627, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 423, 273, 0, 476, 0, 319,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 661, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 349, 205, 233, 0, 0, 434, 484, 496, 0,
	0, 0, 0, 269, 0, 494, 448, 635, 243, 300,
	481, 454, 492, 462, 303, 0, 0, 493, 391, 616,
	472, 632, 662, 663, 279, 428, 646, 550, 655, 680,
	234, 276, 442, 534, 638, 518, 417, 612, 613, 348,
	517, 311, 209, 388, 668, 232, 502, 390, 253, 241,
	618, 643, 315, 267, 305, 479, 0, 675, 221, 545,
	629, 250, 506, 0, 0, 683, 258, 528, 641, 630,
	223, 625, 527, 413, 345, 346, 222, 0, 480, 284,
	309, 0, 0, 274, 437, 620, 621, 272, 684, 237,
	654, 228, 0, 653, 430, 615, 626, 414, 402, 227,
	624, 412, 401, 353, 374, 375, 296, 324, 469, 394,
	470, 323, 325, 425, 424, 426, 215, 639, 658, 0,
	216, 0, 523, 642, 685, 474, 220, 244, 245, 248,
	0, 295, 299, 307, 310, 320, 321, 331, 386, 441,
	468, 464, 473, 0, 609, 633, 647, 660, 666, 667,
	669, 670, 671, 672, 673, 676, 674, 429, 329, 519,
	352, 392, 0, 0, 447, 495, 251, 637, 520, 240,
	603, 418, 427, 259, 261, 260, 235, 511, 608, 246,
	266, 207, 0, 0, 0, 0, 270, 271, 0, 604,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 681, 536, 542,
	537, 538, 539, 540, 541, 0, 543, 0, 0, 0,
	0, 0, 419, 0, 622, 623, 704, 403, 509, 634,
	354, 368, 371, 360, 380, 0, 381, 356, 357, 362,
	365, 366, 367, 372, 373, 377, 383, 263, 218, 410,
	420, 607, 330, 224, 225, 226, 552, 553, 554, 555,
	651, 652, 656, 213, 485, 486, 487, 488, 308, 645,
	326, 491, 490, 350, 351, 398, 471, 568, 570, 581,
	585, 587, 589, 595, 598, 569, 571, 582, 586, 588,
	590, 596, 599, 558, 560, 562, 564, 577, 576, 573,
	601, 602, 579, 584, 563, 575, 580, 593, 600, 597,
	557, 561, 565, 574, 592, 591, 572, 583, 594, 578,
	566, 559, 567, 0, 204, 229, 387, 0, 477, 304,
	682, 649, 507, 644, 214, 231, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	208, 217, 230, 242, 247, 254, 277, 292, 294, 301,
	314, 327, 328, 337, 338, 341, 347, 399, 406, 407,
	408, 409, 431, 432, 433, 436, 439, 440, 443, 445,
	446, 449, 453, 457, 458, 459, 461, 463, 465, 478,
	483, 497, 498, 499, 500, 501, 504, 505, 512, 513,
	514, 515, 516, 524, 525, 530, 531, 532, 533, 544,
	617, 619, 636, 657, 664, 503, 404, 0, 475, 610,
	0, 0, 317, 318, 466, 467, 332, 333, 678, 679,
	316, 631, 665, 628, 677, 659, 460, 397, 0, 0,
	400, 297, 322, 339, 0, 648, 526, 236, 489, 306,
	265, 0, 0, 219, 257, 239, 275, 290, 293, 343,
	411, 421, 451, 456, 312, 287, 255, 482, 252, 508,
	547, 548, 549, 551, 415, 282, 455, 0, 556, 395,
	605, 606, 335, 2506, 0, 0, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 385, 283, 0, 0, 212, 529, 0,
	452, 0, 211, 0, 510, 268, 396, 393, 614, 298,
	289, 285, 264, 336, 405, 450, 546, 444, 0, 389,
	0, 650, 521, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 262, 344, 210, 435, 522, 302,
	0, 0, 0, 0, 0, 535, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 256,
	0, 0, 0, 370, 379, 378, 358, 359, 361, 363,
	369, 376, 382, 355, 364, 0, 0, 640, 0, 0,
	0, 281, 340, 288, 280, 611, 0, 0, 0, 0,
	0, 0, 627, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 423, 273, 0, 476,
	0, 319, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 661, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 349, 205, 233, 0, 0, 434, 484,
	496, 0, 0, 0, 0, 269, 0, 494, 448, 635,
	243, 300, 481, 454, 492, 462, 303, 0, 0, 493,
	391, 616, 472, 632, 662, 663, 279, 428, 646, 550,
	655, 680, 234, 276, 442, 534, 638, 518, 417, 612,
	613, 348, 517, 311, 209, 388, 668, 232, 502, 390,
	253, 241, 618, 643, 315, 267, 305, 479, 0, 675,
	221, 545, 629, 250, 506, 0, 0, 683, 258, 528,
	641, 630, 223, 625, 527, 413, 345, 346, 222, 0,
	480, 284, 309, 0, 0, 274, 437, 620, 621, 272,
	684, 237, 654, 228, 0, 653, 430, 615, 626, 414,
	402, 227, 624, 412, 401, 353, 374, 375, 296, 324,
	469, 394, 470, 323, 325, 425, 424, 426, 215, 639,
	658, 0, 216, 0, 523, 642, 685, 474, 220, 244,
	245, 248, 0, 295, 299, 307, 310, 320, 321, 331,
	386, 441, 468, 464, 473, 0, 609, 633, 647, 660,
	666, 667, 669, 670, 671, 672, 673, 676, 674, 429,
	329, 519, 352, 392, 0, 0, 447, 495, 251, 637,
	520, 240, 603, 418, 427, 259, 261, 260, 235, 511,
	608, 246, 266, 207, 0, 0, 0, 0, 270, 271,
	0, 604, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 681,
	536, 542, 537, 538, 539, 540, 541, 0, 543, 0,
	0, 0, 0, 0, 419, 0, 622, 623, 704, 403,
	509, 634, 354, 368, 371, 360, 380, 0, 381, 356,
	357, 362, 365, 366, 367, 372, 373, 377, 383, 263,
	218, 410, 420, 607, 330, 224, 225, 226, 552, 553,
	554, 555, 651, 652, 656, 213, 485, 486, 487, 488,
	308, 645, 326, 491, 490, 350, 351, 398, 471, 568,
	570, 581, 585, 587, 589, 595, 598, 569, 571, 582,
	586, 588, 590, 596, 599, 558, 560, 562, 564, 577,
	576, 573, 601, 602, 579, 584, 563, 575, 580, 593,
	600, 597, 557, 561, 565, 574, 592, 591, 572, 583,
	594, 578, 566, 559, 567, 0, 204, 229, 387, 0,
	477, 304, 682, 649, 507, 644, 214, 231, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 208, 217, 230, 242, 247, 254, 277, 292,
	294, 301, 314, 327, 328, 337, 338, 341, 347, 399,
	406, 407, 408, 409, 431, 432, 433, 436, 439, 440,
	443, 445, 446, 449, 453, 457, 458, 459, 461, 463,
	465, 478, 483, 497, 498, 499, 500, 501, 504, 505,
	512, 513, 514, 515, 516, 524, 525, 530, 531, 532,
	533, 544, 617, 619, 636, 657, 664, 503, 404, 0,
	475, 610, 0, 0, 317, 318, 466, 467, 332, 333,
	678, 679, 316, 631, 665, 628, 677, 659, 460, 397,
	0, 0, 400, 297, 322, 339, 0, 648, 526, 236,
	489, 306, 265, 0, 0, 219, 257, 239, 275, 290,
	293, 343, 411, 421, 451, 456, 312, 287, 255, 482,
	252, 508, 547, 548, 549, 551, 415, 282, 455, 556,
	0, 395, 605, 606, 335, 0, 0, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 385, 283, 0, 0, 212, 529,
	0, 452, 0, 211, 0, 510, 268, 396, 393, 614,
	298, 289, 285, 264, 336, 405, 450, 546, 444, 0,
	389, 0, 650, 521, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 262, 344, 210, 435, 522,
	302, 0, 0, 0, 0, 1850, 535, 756, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	256, 0, 0, 0, 370, 379, 378, 358, 359, 361,
	363, 369, 376, 382, 355, 364, 0, 0, 640, 0,
	0, 0, 281, 340, 288, 280, 611, 0, 0, 0,
	0, 0, 0, 627, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 423, 273, 0,
	476, 0, 319, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 661, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 349, 205, 233, 0, 0, 434,
	484, 496, 0, 0, 0, 0, 269, 0, 494, 448,
	635, 243, 300, 481, 454, 492, 462, 303, 0, 0,
	493, 391, 616, 472, 632, 662, 663, 279, 428, 646,
	550, 655, 680, 234, 276, 442, 534, 638, 518, 417,
	612, 613, 348, 517, 311, 209, 388, 668, 232, 502,
	390, 253, 241, 618, 643, 315, 267, 305, 479, 0,
	675, 221, 545, 629, 250, 506, 0, 0, 683, 258,
	528, 641, 630, 223, 625, 527, 413, 345, 346, 222,
	0, 480, 284, 309, 0, 0, 274, 437, 620, 621,
	272, 684, 237, 654, 228, 0, 653, 430, 615, 626,
	414, 402, 227, 624, 412, 401, 353, 374, 375, 296,
	324, 469, 394, 470, 323, 325, 425, 424, 426, 215,
	639, 658, 0, 216, 0, 523, 642, 685, 474, 220,
	244, 245, 248, 0, 295, 299, 307, 310, 320, 321,
	331, 386, 441, 468, 464, 473, 0, 609, 633, 647,
	660, 666, 667, 669, 670, 671, 672, 673, 676, 674,
	429, 329, 519, 352, 392, 0, 0, 447, 495, 251,
	637, 520, 240, 603, 418, 427, 259, 261, 260, 235,
	511, 608, 246, 266, 207, 0, 0, 0, 0, 270,
	271, 0, 604, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 686, 687, 688, 689, 690, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 703,
	681, 536, 542, 537, 538, 539, 540, 541, 0, 543,
	0, 0, 0, 0, 0, 419, 0, 622, 623, 704,
	403, 509, 634, 354, 368, 371, 360, 380, 0, 381,
	356, 357, 362, 365, 366, 367, 372, 373, 377, 383,
	263, 218, 410, 420, 607, 330, 224, 225, 226, 552,
	553, 554, 555, 651, 652, 656, 213, 485, 486, 487,
	488, 308, 645, 326, 491, 490, 350, 351, 398, 471,
	568, 570, 581, 585, 587, 589, 595, 598, 569, 571,
	582, 586, 588, 590, 596, 599, 558, 560, 562, 564,
	577, 576, 573, 601, 602, 579, 584, 563, 575, 580,
	593, 600, 597, 557, 561, 565, 574, 592, 591, 572,
	583, 594, 578, 566, 559, 567, 0, 204, 229, 387,
	0, 477, 304, 682, 649, 507, 644, 214, 231, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 208, 217, 230, 242, 247, 254, 277,
	292, 294, 301, 314, 327, 328, 337, 338, 341, 347,
	399, 406, 407, 408, 409, 431, 432, 433, 436, 439,
	440, 443, 445, 446, 449, 453, 457, 458, 459, 461,
	463, 465, 478, 483, 497, 498, 499, 500, 501, 504,
	505, 512, 513, 514, 515, 516, 524, 525, 530, 531,
	532, 533, 544, 617, 619, 636, 657, 664, 503, 404,
	0, 475, 610, 0, 0, 317, 318, 466, 467, 332,
	333, 678, 679, 316, 631, 665, 628, 677, 659, 460,
	397, 0, 0, 400, 297, 322, 339, 0, 648, 526,
	236, 489, 306, 265, 0, 0, 219, 257, 239, 275,
	290, 293, 343, 411, 421, 451, 456, 312, 287, 255,
	482, 252, 508, 547, 548, 549, 551, 415, 282, 455,
	556, 0, 395, 605, 606, 335, 0, 0, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 385, 283, 0, 0, 212,
	529, 0, 452, 0, 211, 0, 510, 268, 396, 393,
	614, 298, 289, 285, 264, 336, 405, 450, 546, 444,
	0, 389, 0, 650, 521, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 262, 344, 210, 435,
	522, 302, 0, 0, 0, 0, 0, 535, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 256, 0, 0, 0, 370, 379, 378, 358, 359,
	361, 363, 369, 376, 382, 355, 364, 0, 0, 640,
	0, 0, 0, 281, 340, 288, 280, 611, 0, 0,
	0, 0, 0, 0, 627, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 423, 273,
	0, 476, 0, 319, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 661, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 349, 205, 233, 0, 0,
	434, 484, 496, 0, 0, 0, 0, 269, 0, 494,
	448, 635, 243, 300, 481, 454, 492, 462, 303, 0,
	0, 493, 391, 616, 472, 632, 662, 663, 279, 428,
	646, 550, 655, 680, 234, 276, 442, 534, 638, 518,
	417, 612, 613, 348, 517, 311, 209, 388, 668, 232,
	502, 390, 253, 241, 618, 643, 315, 267, 305, 479,
	0, 675, 221, 545, 629, 250, 506, 0, 0, 683,
	258, 528, 641, 630, 223, 625, 527, 413, 345, 346,
	222, 0, 480, 284, 309, 0, 0, 274, 437, 620,
	621, 272, 684, 237, 654, 228, 0, 653, 430, 615,
	626, 414, 402, 227, 624, 412, 401, 353, 374, 375,
	296, 324, 469, 394, 470, 323, 325, 425, 424, 426,
	215, 639, 658, 0, 216, 0, 523, 642, 685, 474,
	220, 244, 245, 248, 0, 295, 299, 307, 310, 320,
	321, 331, 386, 441, 468, 464, 473, 0, 609, 633,
	647, 660, 666, 667, 669, 670, 671, 672, 673, 676,
	674, 429, 329, 519, 352, 392, 0, 0, 447, 495,
	251, 637, 520, 240, 603, 418, 427, 259, 261, 260,
	235, 511, 608, 246, 266, 207, 0, 0, 0, 0,
	270, 271, 0, 604, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 681, 536, 542, 537, 538, 539, 540, 541, 0,
	543, 0, 0, 0, 0, 0, 419, 0, 622, 623,
	704, 403, 509, 634, 354, 368, 371, 360, 380, 0,
	381, 356, 357, 362, 365, 366, 367, 372, 373, 377,
	383, 263, 218, 410, 420, 607, 330, 224, 225, 226,
	552, 553, 554, 555, 651, 652, 656, 213, 485, 486,
	487, 488, 308, 645, 326, 491, 490, 350, 351, 398,
	471, 568, 570, 581, 585, 587, 589, 595, 598, 569,
	571, 582, 586, 588, 590, 596, 599, 558, 560, 562,
	564, 577, 576, 573, 601, 602, 579, 584, 563, 575,
	580, 593, 600, 597, 557, 561, 565, 574, 592, 591,
	572, 583, 594, 578, 566, 559, 567, 0, 204, 229,
	387, 2144, 477, 304, 682, 649, 507, 644, 214, 231,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 208, 217, 230, 242, 247, 254,
	277, 292, 294, 301, 314, 327, 328, 337, 338, 341,
	347, 399, 406, 407, 408, 409, 431, 432, 433, 436,
	439, 440, 443, 445, 446, 449, 453, 457, 458, 459,
	461, 463, 465, 478, 483, 497, 498, 499, 500, 501,
	504, 505, 512, 513, 514, 515, 516, 524, 525, 530,
	531, 532, 533, 544, 617, 619, 636, 657, 664, 503,
	404, 0, 475, 610, 0, 0, 317, 318, 466, 467,
	332, 333, 678, 679, 316, 631, 665, 628, 677, 659,
	460, 397, 0, 0, 400, 297, 322, 339, 0, 648,
	526, 236, 489, 306, 265, 0, 0, 219, 257, 239,
	275, 290, 293, 343, 411, 421, 451, 456, 312, 287,
	255, 482, 252, 508, 547, 548, 549, 551, 415, 282,
	455, 556, 0, 395, 605, 606, 335, 0, 0, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 0, 0, 0, 385, 283, 0, 0,
	212, 529, 0, 452, 0, 211, 0, 510, 268, 396,
	393, 614, 298, 289, 285, 264, 336, 405, 450, 546,
	444, 0, 389, 0, 650, 521, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 262, 344, 210,
	435, 522, 302, 0, 0, 0, 0, 2135, 535, 756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 256, 0, 0, 0, 370, 379, 378, 358,
	359, 361, 363, 369, 376, 382, 355, 364, 0, 0,
	640, 0, 0, 0, 281, 340, 288, 280, 611, 0,
	0, 0, 0, 0, 0, 627, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 423,
	273, 0, 476, 0, 319, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 661, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 349, 205, 233, 0,
	0, 434, 484, 496, 0, 0, 0, 0, 269, 0,
	494, 448, 635, 243, 300, 481, 454, 492, 462, 303,
	0, 0, 493, 391, 616, 472, 632, 662, 663, 279,
	428, 646, 550, 655, 680, 234, 276, 442, 534, 638,
	518, 417, 612, 613, 348, 517, 311, 209, 388, 668,
	232, 502, 390, 253, 241, 618, 643, 315, 267, 305,
	479, 0, 675, 221, 545, 629, 250, 506, 0, 0,
	683, 258, 528, 641, 630, 223, 625, 527, 413, 345,
	346, 222, 0, 480, 284, 309, 0, 0, 274, 437,
	620, 621, 272, 684, 237, 654, 228, 0, 653, 430,
	615, 626, 414, 402, 227, 624, 412, 401, 353, 374,
	375, 296, 324, 469, 394, 470, 323, 325, 425, 424,
	426, 215, 639, 658, 0, 216, 0, 523, 642, 685,
	474, 220, 244, 245, 248, 0, 295, 299, 307, 310,
	320, 321, 331, 386, 441, 468, 464, 473, 0, 609,
	633, 647, 660, 666, 667, 669, 670, 671, 672, 673,
	676, 674, 429, 329, 519, 352, 392, 0, 0, 447,
	495, 251, 637, 520, 240, 603, 418, 427, 259, 261,
	260, 235, 511, 608, 246, 266, 207, 0, 0, 0,
	0, 270, 271, 0, 604, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 686, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 681, 536, 542, 537, 538, 539, 540, 541,
	0, 543, 0, 0, 0, 0, 0, 419, 0, 622,
	623, 704, 403, 509, 634, 354, 368, 371, 360, 380,
	0, 381, 356, 357, 362, 365, 366, 367, 372, 373,
	377, 383, 263, 218, 410, 420, 607, 330, 224, 225,
	226, 552, 553, 554, 555, 651, 652, 656, 213, 485,
	486, 487, 488, 308, 645, 326, 491, 490, 350, 351,
	398, 471, 568, 570, 581, 585, 587, 589, 595, 598,
	569, 571, 582, 586, 588, 590, 596, 599, 558, 560,
	562, 564, 577, 576, 573, 601, 602, 579, 584, 563,
	575, 580, 593, 600, 597, 557, 561, 565, 574, 592,
	591, 572, 583, 594, 578, 566, 559, 567, 0, 204,
	229, 387, 0, 477, 304, 682, 649, 507, 644, 214,
	231, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 208, 217, 230, 242, 247,
	254, 277, 292, 294, 301, 314, 327, 328, 337, 338,
	341, 347, 399, 406, 407, 408, 409, 431, 432, 433,
	436, 439, 440, 443, 445, 446, 449, 453, 457, 458,
	459, 461, 463, 465, 478, 483, 497, 498, 499, 500,
	501, 504, 505, 512, 513, 514, 515, 516, 524, 525,
	530, 531, 532, 533, 544, 617, 619, 636, 657, 664,
	503, 404, 0, 475, 610, 0, 0, 317, 318, 466,
	467, 332, 333, 678, 679, 316, 631, 665, 628, 677,
	659, 460, 397, 0, 0, 400, 297, 322, 339, 0,
	648, 526, 236, 489, 306, 265, 0, 0, 219, 257,
	239, 275, 290, 293, 343, 411, 421, 451, 456, 312,
	287, 255, 482, 252, 508, 547, 548, 549, 551, 415,
	282, 455, 556, 0, 395, 605, 606, 335, 0, 0,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 385, 283, 0,
	1992, 212, 529, 0, 452, 0, 211, 0, 510, 268,
	396, 393, 614, 298, 289, 285, 264, 336, 405, 450,
	546, 444, 0, 389, 0, 650, 521, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 262, 344,
	210, 435, 522, 302, 0, 0, 0, 0, 0, 535,
	756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 256, 0, 0, 0, 370, 379, 378,
	358, 359, 361, 363, 369, 376, 382, 355, 364, 0,
	0, 640, 0, 0, 0, 281, 340, 288, 280, 611,
	0, 0, 0, 0, 0, 0, 627, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	423, 273, 0, 476, 0, 319, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 661, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 349, 205, 233,
	0, 0, 434, 484, 496, 0, 0, 0, 0, 269,
	0, 494, 448, 635, 243, 300, 481, 454, 492, 462,
	303, 0, 0, 493, 391, 616, 472, 632, 662, 663,
	279, 428, 646, 550, 655, 680, 234, 276, 442, 534,
	638, 518, 417, 612, 613, 348, 517, 311, 209, 388,
	668, 232, 502, 390, 253, 241, 618, 643, 315, 267,
	305, 479, 0, 675, 221, 545, 629, 250, 506, 0,
	0, 683, 258, 528, 641, 630, 223, 625, 527, 413,
	345, 346, 222, 0, 480, 284, 309, 0, 0, 274,
	437, 620, 621, 272, 684, 237, 654, 228, 0, 653,
	430, 615, 626, 414, 402, 227, 624, 412, 401, 353,
	374, 375, 296, 324, 469, 394, 470, 323, 325, 425,
	424, 426, 215, 639, 658, 0, 216, 0, 523, 642,
	685, 474, 220, 244, 245, 248, 0, 295, 299, 307,
	310, 320, 321, 331, 386, 441, 468, 464, 473, 0,
	609, 633, 647, 660, 666, 667, 669, 670, 671, 672,
	673, 676, 674, 429, 329, 519, 352, 392, 0, 0,
	447, 495, 251, 637, 520, 240, 603, 418, 427, 259,
	261, 260, 235, 511, 608, 246, 266, 207, 0, 0,
	0, 0, 270, 271, 0, 604, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 681, 536, 542, 537, 538, 539, 540,
	541, 0, 543, 0, 0, 0, 0, 0, 419, 0,
	622, 623, 704, 403, 509, 634, 354, 368, 371, 360,
	380, 0, 381, 356, 357, 362, 365, 366, 367, 372,
	373, 377, 383, 263, 218, 410, 420, 607, 330, 224,
	225, 226, 552, 553, 554, 555, 651, 652, 656, 213,
	485, 486, 487, 488, 308, 645, 326, 491, 490, 350,
	351, 398, 471, 568, 570, 581, 585, 587, 589, 595,
	598, 569, 571, 582, 586, 588, 590, 596, 599, 558,
	560, 562, 564, 577, 576, 573, 601, 602, 579, 584,
	563, 575, 580, 593, 600, 597, 557, 561, 565, 574,
	592, 591, 572, 583, 594, 578, 566, 559, 567, 0,
	204, 229, 387, 0, 477, 304, 682, 649, 507, 644,
	214, 231, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 208, 217, 230, 242,
	247, 254, 277, 292, 294, 301, 314, 327, 328, 337,
	338, 341, 347, 399, 406, 407, 408, 409, 431, 432,
	433, 436, 439, 440, 443, 445, 446, 449, 453, 457,
	458, 459, 461, 463, 465, 478, 483, 497, 498, 499,
	500, 501, 504, 505, 512, 513, 514, 515, 516, 524,
	525, 530, 531, 532, 533, 544, 617, 619, 636, 657,
	664, 503, 404, 0, 475, 610, 0, 0, 317, 318,
	466, 467, 332, 333, 678, 679, 316, 631, 665, 628,
	677, 659, 460, 397, 0, 0, 400, 297, 322, 339,
	0, 648, 526, 236, 489, 306, 265, 0, 0, 219,
	257, 239, 275, 290, 293, 343, 411, 421, 451, 456,
	312, 287, 255, 482, 252, 508, 547, 548, 549, 551,
	415, 282, 455, 556, 0, 395, 605, 606, 335, 0,
	0, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 385, 283,
	0, 1990, 212, 529, 0, 452, 0, 211, 0, 510,
	268, 396, 393, 614, 298, 289, 285, 264, 336, 405,
	450, 546, 444, 0, 389, 0, 650, 521, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 262,
	344, 210, 435, 522, 302, 0, 0, 0, 0, 0,
	535, 756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 256, 0, 0, 0, 370, 379,
	378, 358, 359, 361, 363, 369, 376, 382, 355, 364,
	0, 0, 640, 0, 0, 0, 281, 340, 288, 280,
	611, 0, 0, 0, 0, 0, 0, 627, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 313,
	0, 423, 273, 0, 476, 0, 319, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 661, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 349, 205,
	233, 0, 0, 434, 484, 496, 0, 0, 0, 0,
	269, 0, 494, 448, 635, 243, 300, 481, 454, 492,
	462, 303, 0, 0, 493, 391, 616, 472, 632, 662,
	663, 279, 428, 646, 550, 655, 680, 234, 276, 442,
	534, 638, 518, 417, 612, 613, 348, 517, 311, 209,
	388, 668, 232, 502, 390, 253, 241, 618, 643, 315,
	267, 305, 479, 0, 675, 221, 545, 629, 250, 506,
	0, 0, 683, 258, 528, 641, 630, 223, 625, 527,
	413, 345, 346, 222, 0, 480, 284, 309, 0, 0,
	274, 437, 620, 621, 272, 684, 237, 654, 228, 0,
	653, 430, 615, 626, 414, 402, 227, 624, 412, 401,
	353, 374, 375, 296, 324, 469, 394, 470, 323, 325,
	425, 424, 426, 215, 639, 658, 0, 216, 0, 523,
	642, 685, 474, 220, 244, 245, 248, 0, 295, 299,
	307, 310, 320, 321, 331, 386, 441, 468, 464, 473,
	0, 609, 633, 647, 660, 666, 667, 669, 670, 671,
	672, 673, 676, 674, 429, 329, 519, 352, 392, 0,
	0, 447, 495, 251, 637, 520, 240, 603, 418, 427,
	259, 261, 260, 235, 511, 608, 246, 266, 207, 0,
	0, 0, 0, 270, 271, 0, 604, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 686, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 681, 536, 542, 537, 538, 539,
	540, 541, 0, 543, 0, 0, 0, 0, 0, 419,
	0, 622, 623, 704, 403, 509, 634, 354, 368, 371,
	360, 380, 0, 381, 356, 357, 362, 365, 366, 367,
	372, 373, 377, 383, 263, 218, 410, 420, 607, 330,
	224, 225, 226, 552, 553, 554, 555, 651, 652, 656,
	213, 485, 486, 487, 488, 308, 645, 326, 491, 490,
	350, 351, 398, 471, 568, 570, 581, 585, 587, 589,
	595, 598, 569, 571, 582, 586, 588, 590, 596, 599,
	558, 560, 562, 564, 577, 576, 573, 601, 602, 579,
	584, 563, 575, 580, 593, 600, 597, 557, 561, 565,
	574, 592, 591, 572, 583, 594, 578, 566, 559, 567,
	0, 204, 229, 387, 0, 477, 304, 682, 649, 507,
	644, 214, 231, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 208, 217, 230,
	242, 247, 254, 277, 292, 294, 301, 314, 327, 328,
	337, 338, 341, 347, 399, 406, 407, 408, 409, 431,
	432, 433, 436, 439, 440, 443, 445, 446, 449, 453,
	457, 458, 459, 461, 463, 465, 478, 483, 497, 498,
	499, 500, 501, 504, 505, 512, 513, 514, 515, 516,
	524, 525, 530, 531, 532, 533, 544, 617, 619, 636,
	657, 664, 503, 404, 0, 475, 610, 0, 0, 317,
	318, 466, 467, 332, 333, 678, 679, 316, 631, 665,
	628, 677, 659, 460, 397, 0, 0, 400, 297, 322,
	339, 0, 648, 526, 236, 489, 306, 265, 0, 0,
	219, 257, 239, 275, 290, 293, 343, 411, 421, 451,
	456, 312, 287, 255, 482, 252, 508, 547, 548, 549,
	551, 415, 282, 455, 556, 0, 395, 605, 606, 335,
	0, 0, 0, 0, 0, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 385,
	283, 0, 1988, 212, 529, 0, 452, 0, 211, 0,
	510, 268, 396, 393, 614, 298, 289, 285, 264, 336,
	405, 450, 546, 444, 0, 389, 0, 650, 521, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	262, 344, 210, 435, 522, 302, 0, 0, 0, 0,
	0, 535, 756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 256, 0, 0, 0, 370,
	379, 378, 358, 359, 361, 363, 369, 376, 382, 355,
	364, 0, 0, 640, 0, 0, 0, 281, 340, 288,
	280, 611, 0, 0, 0, 0, 0, 0, 627, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 423, 273, 0, 476, 0, 319, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 661,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 349,
	205, 233, 0, 0, 434, 484, 496, 0, 0, 0,
	0, 269, 0, 494, 448, 635, 243, 300, 481, 454,
	492, 462, 303, 0, 0, 493, 391, 616, 472, 632,
	662, 663, 279, 428, 646, 550, 655, 680, 234, 276,
	442, 534, 638, 518, 417, 612, 613, 348, 517, 311,
	209, 388, 668, 232, 502, 390, 253, 241, 618, 643,
	315, 267, 305, 479, 0, 675, 221, 545, 629, 250,
	506, 0, 0, 683, 258, 528, 641, 630, 223, 625,
	527, 413, 345, 346, 222, 0, 480, 284, 309, 0,
	0, 274, 437, 620, 621, 272, 684, 237, 654, 228,
	0, 653, 430, 615, 626, 414, 402, 227, 624, 412,
	401, 353, 374, 375, 296, 324, 469, 394, 470, 323,
	325, 425, 424, 426, 215, 639, 658, 0, 216, 0,
	523, 642, 685, 474, 220, 244, 245, 248, 0, 295,
	299, 307, 310, 320, 321, 331, 386, 441, 468, 464,
	473, 0, 609, 633, 647, 660, 666, 667, 669, 670,
	671, 672, 673, 676, 674, 429, 329, 519, 352, 392,
	0, 0, 447, 495, 251, 637, 520, 240, 603, 418,
	427, 259, 261, 260, 235, 511, 608, 246, 266, 207,
	0, 0, 0, 0, 270, 271, 0, 604, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 681, 536, 542, 537, 538,
	539, 540, 541, 0, 543, 0, 0, 0, 0, 0,
	419, 0, 622, 623, 704, 403, 509, 634, 354, 368,
	371, 360, 380, 0, 381, 356, 357, 362, 365, 366,
	367, 372, 373, 377, 383, 263, 218, 410, 420, 607,
	330, 224, 225, 226, 552, 553, 554, 555, 651, 652,
	656, 213, 485, 486, 487, 488, 308, 645, 326, 491,
	490, 350, 351, 398, 471, 568, 570, 581, 585, 587,
	589, 595, 598, 569, 571, 582, 586, 588, 590, 596,
	599, 558, 560, 562, 564, 577, 576, 573, 601, 602,
	579, 584, 563, 575, 580, 593, 600, 597, 557, 561,
	565, 574, 592, 591, 572, 583, 594, 578, 566, 559,
	567, 0, 204, 229, 387, 0, 477, 304, 682, 649,
	507, 644, 214, 231, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 208, 217,
	230, 242, 247, 254, 277, 292, 294, 301, 314, 327,
	328, 337, 338, 341, 347, 399, 406, 407, 408, 409,
	431, 432, 433, 436, 439, 440, 443, 445, 446, 449,
	453, 457, 458, 459, 461, 463, 465, 478, 483, 497,
	498, 499, 500, 501, 504, 505, 512, 513, 514, 515,
	516, 524, 525, 530, 531, 532, 533, 544, 617, 619,
	636, 657, 664, 503, 404, 0, 475, 610, 0, 0,
	317, 318, 466, 467, 332, 333, 678, 679, 316, 631,
	665, 628, 677, 659, 460, 397, 0, 0, 400, 297,
	322, 339, 0, 648, 526, 236, 489, 306, 265, 0,
	0, 219, 257, 239, 275, 290, 293, 343, 411, 421,
	451, 456, 312, 287, 255, 482, 252, 508, 547, 548,
	549, 551, 415, 282, 455, 556, 0, 395, 605, 606,
	335, 0, 0, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	385, 283, 0, 1986, 212, 529, 0, 452, 0, 211,
	0, 510, 268, 396, 393, 614, 298, 289, 285, 264,
	336, 405, 450, 546, 444, 0, 389, 0, 650, 521,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 262, 344, 210, 435, 522, 302, 0, 0, 0,
	0, 0, 535, 756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 256, 0, 0, 0,
	370, 379, 378, 358, 359, 361, 363, 369, 376, 382,
	355, 364, 0, 0, 640, 0, 0, 0, 281, 340,
	288, 280, 611, 0, 0, 0, 0, 0, 0, 627,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 423, 273, 0, 476, 0, 319, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	661, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	349, 205, 233, 0, 0, 434, 484, 496, 0, 0,
	0, 0, 269, 0, 494, 448, 635, 243, 300, 481,
	454, 492, 462, 303, 0, 0, 493, 391, 616, 472,
	632, 662, 663, 279, 428, 646, 550, 655, 680, 234,
	276, 442, 534, 638, 518, 417, 612, 613, 348, 517,
	311, 209, 388, 668, 232, 502, 390, 253, 241, 618,
	643, 315, 267, 305, 479, 0, 675, 221, 545, 629,
	250, 506, 0, 0, 683, 258, 528, 641, 630, 223,
	625, 527, 413, 345, 346, 222, 0, 480, 284, 309,
	0, 0, 274, 437, 620, 621, 272, 684, 237, 654,
	228, 0, 653, 430, 615, 626, 414, 402, 227, 624,
	412, 401, 353, 374, 375, 296, 324, 469, 394, 470,
	323, 325, 425, 424, 426, 215, 639, 658, 0, 216,
	0, 523, 642, 685, 474, 220, 244, 245, 248, 0,
	295, 299, 307, 310, 320, 321, 331, 386, 441, 468,
	464, 473, 0, 609, 633, 647, 660, 666, 667, 669,
	670, 671, 672, 673, 676, 674, 429, 329, 519, 352,
	392, 0, 0, 447, 495, 251, 637, 520, 240, 603,
	418, 427, 259, 261, 260, 235, 511, 608, 246, 266,
	207, 0, 0, 0, 0, 270, 271, 0, 604, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 686, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 681, 536, 542, 537,
	538, 539, 540, 541, 0, 543, 0, 0, 0, 0,
	0, 419, 0, 622, 623, 704, 403, 509, 634, 354,
	368, 371, 360, 380, 0, 381, 356, 357, 362, 365,
	366, 367, 372, 373, 377, 383, 263, 218, 410, 420,
	607, 330, 224, 225, 226, 552, 553, 554, 555, 651,
	652, 656, 213, 485, 486, 487, 488, 308, 645, 326,
	491, 490, 350, 351, 398, 471, 568, 570, 581, 585,
	587, 589, 595, 598, 569, 571, 582, 586, 588, 590,
	596, 599, 558, 560, 562, 564, 577, 576, 573, 601,
	602, 579, 584, 563, 575, 580, 593, 600, 597, 557,
	561, 565, 574, 592, 591, 572, 583, 594, 578, 566,
	559, 567, 0, 204, 229, 387, 0, 477, 304, 682,
	649, 507, 644, 214, 231, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 208,
	217, 230, 242, 247, 254, 277, 292, 294, 301, 314,
	327, 328, 337, 338, 341, 347, 399, 406, 407, 408,
	409, 431, 432, 433, 436, 439, 440, 443, 445, 446,
	449, 453, 457, 458, 459, 461, 463, 465, 478, 483,
	497, 498, 499, 500, 501, 504, 505, 512, 513, 514,
	515, 516, 524, 525, 530, 531, 532, 533, 544, 617,
	619, 636, 657, 664, 503, 404, 0, 475, 610, 0,
	0, 317, 318, 466, 467, 332, 333, 678, 679, 316,
	631, 665, 628, 677, 659, 460, 397, 0, 0, 400,
	297, 322, 339, 0, 648, 526, 236, 489, 306, 265,
	0, 0, 219, 257, 239, 275, 290, 293, 343, 411,
	421, 451, 456, 312, 287, 255, 482, 252, 508, 547,
	548, 549, 551, 415, 282, 455, 556, 0, 395, 605,
	606, 335, 0, 0, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 385, 283, 0, 1984, 212, 529, 0, 452, 0,
	211, 0, 510, 268, 396, 393, 614, 298, 289, 285,
	264, 336, 405, 450, 546, 444, 0, 389, 0, 650,
	521, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 262, 344, 210, 435, 522, 302, 0, 0,
	0, 0, 0, 535, 756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 256, 0, 0,
	0, 370, 379, 378, 358, 359, 361, 363, 369, 376,
	382, 355, 364, 0, 0, 640, 0, 0, 0, 281,
	340, 288, 280, 611, 0, 0, 0, 0, 0, 0,
	627, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 423, 273, 0, 476, 0, 319,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 661, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 349, 205, 233, 0, 0, 434, 484, 496, 0,
	0, 0, 0, 269, 0, 494, 448, 635, 243, 300,
	481, 454, 492, 462, 303, 0, 0, 493, 391, 616,
	472, 632, 662, 663, 279, 428, 646, 550, 655, 680,
	234, 276, 442, 534, 638, 518, 417, 612, 613, 348,
	517, 311, 209, 388, 668, 232, 502, 390, 253, 241,
	618, 643, 315, 267, 305, 479, 0, 675, 221, 545,
	629, 250, 506, 0, 0, 683, 258, 528, 641, 630,
	223, 625, 527, 413, 345, 346, 222, 0, 480, 284,
	309, 0, 0, 274, 437, 620, 621, 272, 684, 237,
	654, 228, 0, 653, 430, 615, 626, 414, 402, 227,
	624, 412, 401, 353, 374, 375, 296, 324, 469, 394,
	470, 323, 325, 425, 424, 426, 215, 639, 658, 0,
	216, 0, 523, 642, 685, 474, 220, 244, 245, 248,
	0, 295, 299, 307, 310, 320, 321, 331, 386, 441,
	468, 464, 473, 0, 609, 633, 647, 660, 666, 667,
	669, 670, 671, 672, 673, 676, 674, 429, 329, 519,
	352, 392, 0, 0, 447, 495, 251, 637, 520, 240,
	603, 418, 427, 259, 261, 260, 235, 511, 608, 246,
	266, 207, 0, 0, 0, 0, 270, 271, 0, 604,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 681, 536, 542,
	537, 538, 539, 540, 541, 0, 543, 0, 0, 0,
	0, 0, 419, 0, 622, 623, 704, 403, 509, 634,
	354, 368, 371, 360, 380, 0, 381, 356, 357, 362,
	365, 366, 367, 372, 373, 377, 383, 263, 218, 410,
	420, 607, 330, 224, 225, 226, 552, 553, 554, 555,
	651, 652, 656, 213, 485, 486, 487, 488, 308, 645,
	326, 491, 490, 350, 351, 398, 471, 568, 570, 581,
	585, 587, 589, 595, 598, 569, 571, 582, 586, 588,
	590, 596, 599, 558, 560, 562, 564, 577, 576, 573,
	601, 602, 579, 584, 563, 575, 580, 593, 600, 597,
	557, 561, 565, 574, 592, 591, 572, 583, 594, 578,
	566, 559, 567, 0, 204, 229, 387, 0, 477, 304,
	682, 649, 507, 644, 214, 231, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	208, 217, 230, 242, 247, 254, 277, 292, 294, 301,
	314, 327, 328, 337, 338, 341, 347, 399, 406, 407,
	408, 409, 431, 432, 433, 436, 439, 440, 443, 445,
	446, 449, 453, 457, 458, 459, 461, 463, 465, 478,
	483, 497, 498, 499, 500, 501, 504, 505, 512, 513,
	514, 515, 516, 524, 525, 530, 531, 532, 533, 544,
	617, 619, 636, 657, 664, 503, 404, 0, 475, 610,
	0, 0, 317, 318, 466, 467, 332, 333, 678, 679,
	316, 631, 665, 628, 677, 659, 460, 397, 0, 0,
	400, 297, 322, 339, 0, 648, 526, 236, 489, 306,
	265, 0, 0, 219, 257, 239, 275, 290, 293, 343,
	411, 421, 451, 456, 312, 287, 255, 482, 252, 508,
	547, 548, 549, 551, 415, 282, 455, 556, 0, 395,
	605, 606, 335, 0, 0, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 385, 283, 0, 1980, 212, 529, 0, 452,
	0, 211, 0, 510, 268, 396, 393, 614, 298, 289,
	285, 264, 336, 405, 450, 546, 444, 0, 389, 0,
	650, 521, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 262, 344, 210, 435, 522, 302, 0,
	0, 0, 0, 0, 535, 756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 256, 0,
	0, 0, 370, 379, 378, 358, 359, 361, 363, 369,
	376, 382, 355, 364, 0, 0, 640, 0, 0, 0,
	281, 340, 288, 280, 611, 0, 0, 0, 0, 0,
	0, 627, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 0, 423, 273, 0, 476, 0,
	319, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 661, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 349, 205, 233, 0, 0, 434, 484, 496,
	0, 0, 0, 0, 269, 0, 494, 448, 635, 243,
	300, 481, 454, 492, 462, 303, 0, 0, 493, 391,
	616, 472, 632, 662, 663, 279, 428, 646, 550, 655,
	680, 234, 276, 442, 534, 638, 518, 417, 612, 613,
	348, 517, 311, 209, 388, 668, 232, 502, 390, 253,
	241, 618, 643, 315, 267, 305, 479, 0, 675, 221,
	545, 629, 250, 506, 0, 0, 683, 258, 528, 641,
	630, 223, 625, 527, 413, 345, 346, 222, 0, 480,
	284, 309, 0, 0, 274, 437, 620, 621, 272, 684,
	237, 654, 228, 0, 653, 430, 615, 626, 414, 402,
	227, 624, 412, 401, 353, 374, 375, 296, 324, 469,
	394, 470, 323, 325, 425, 424, 426, 215, 639, 658,
	0, 216, 0, 523, 642, 685, 474, 220, 244, 245,
	248, 0, 295, 299, 307, 310, 320, 321, 331, 386,
	441, 468, 464, 473, 0, 609, 633, 647, 660, 666,
	667, 669, 670, 671, 672, 673, 676, 674, 429, 329,
	519, 352, 392, 0, 0, 447, 495, 251, 637, 520,
	240, 603, 418, 427, 259, 261, 260, 235, 511, 608,
	246, 266, 207, 0, 0, 0, 0, 270, 271, 0,
	604, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	686, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 681, 536,
	542, 537, 538, 539, 540, 541, 0, 543, 0, 0,
	0, 0, 0, 419, 0, 622, 623, 704, 403, 509,
	634, 354, 368, 371, 360, 380, 0, 381, 356, 357,
	362, 365, 366, 367, 372, 373, 377, 383, 263, 218,
	410, 420, 607, 330, 224, 225, 226, 552, 553, 554,
	555, 651, 652, 656, 213, 485, 486, 487, 488, 308,
	645, 326, 491, 490, 350, 351, 398, 471, 568, 570,
	581, 585, 587, 589, 595, 598, 569, 571, 582, 586,
	588, 590, 596, 599, 558, 560, 562, 564, 577, 576,
	573, 601, 602, 579, 584, 563, 575, 580, 593, 600,
	597, 557, 561, 565, 574, 592, 591, 572, 583, 594,
	578, 566, 559, 567, 0, 204, 229, 387, 0, 477,
	304, 682, 649, 507, 644, 214, 231, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 208, 217, 230, 242, 247, 254, 277, 292, 294,
	301, 314, 327, 328, 337, 338, 341, 347, 399, 406,
	407, 408, 409, 431, 432, 433, 436, 439, 440, 443,
	445, 446, 449, 453, 457, 458, 459, 461, 463, 465,
	478, 483, 497, 498, 499, 500, 501, 504, 505, 512,
	513, 514, 515, 516, 524, 525, 530, 531, 532, 533,
	544, 617, 619, 636, 657, 664, 503, 404, 0, 475,
	610, 0, 0, 317, 318, 466, 467, 332, 333, 678,
	679, 316, 631, 665, 628, 677, 659, 460, 397, 0,
	0, 400, 297, 322, 339, 0, 648, 526, 236, 489,
	306, 265, 0, 0, 219, 257, 239, 275, 290, 293,
	343, 411, 421, 451, 456, 312, 287, 255, 482, 252,
	508, 547, 548, 549, 551, 415, 282, 455, 556, 0,
	395, 605, 606, 335, 0, 0, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 385, 283, 0, 1978, 212, 529, 0,
	452, 0, 211, 0, 510, 268, 396, 393, 614, 298,
	289, 285, 264, 336, 405, 450, 546, 444, 0, 389,
	0, 650, 521, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 262, 344, 210, 435, 522, 302,
	0, 0, 0, 0, 0, 535, 756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 256,
	0, 0, 0, 370, 379, 378, 358, 359, 361, 363,
	369, 376, 382, 355, 364, 0, 0, 640, 0, 0,
	0, 281, 340, 288, 280, 611, 0, 0, 0, 0,
	0, 0, 627, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 423, 273, 0, 476,
	0, 319, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 661, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 349, 205, 233, 0, 0, 434, 484,
	496, 0, 0, 0, 0, 269, 0, 494, 448, 635,
	243, 300, 481, 454, 492, 462, 303, 0, 0, 493,
	391, 616, 472, 632, 662, 663, 279, 428, 646, 550,
	655, 680, 234, 276, 442, 534, 638, 518, 417, 612,
	613, 348, 517, 311, 209, 388, 668, 232, 502, 390,
	253, 241, 618, 643, 315, 267, 305, 479, 0, 675,
	221, 545, 629, 250, 506, 0, 0, 683, 258, 528,
	641, 630, 223, 625, 527, 413, 345, 346, 222, 0,
	480, 284, 309, 0, 0, 274, 437, 620, 621, 272,
	684, 237, 654, 228, 0, 653, 430, 615, 626, 414,
	402, 227, 624, 412, 401, 353, 374, 375, 296, 324,
	469, 394, 470, 323, 325, 425, 424, 426, 215, 639,
	658, 0, 216, 0, 523, 642, 685, 474, 220, 244,
	245, 248, 0, 295, 299, 307, 310, 320, 321, 331,
	386, 441, 468, 464, 473, 0, 609, 633, 647, 660,
	666, 667, 669, 670, 671, 672, 673, 676, 674, 429,
	329, 519, 352, 392, 0, 0, 447, 495, 251, 637,
	520, 240, 603, 418, 427, 259, 261, 260, 235, 511,
	608, 246, 266, 207, 0, 0, 0, 0, 270, 271,
	0, 604, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 681,
	536, 542, 537, 538, 539, 540, 541, 0, 543, 0,
	0, 0, 0, 0, 419, 0, 622, 623, 704, 403,
	509, 634, 354, 368, 371, 360, 380, 0, 381, 356,
	357, 362, 365, 366, 367, 372, 373, 377, 383, 263,
	218, 410, 420, 607, 330, 224, 225, 226, 552, 553,
	554, 555, 651, 652, 656, 213, 485, 486, 487, 488,
	308, 645, 326, 491, 490, 350, 351, 398, 471, 568,
	570, 581, 585, 587, 589, 595, 598, 569, 571, 582,
	586, 588, 590, 596, 599, 558, 560, 562, 564, 577,
	576, 573, 601, 602, 579, 584, 563, 575, 580, 593,
	600, 597, 557, 561, 565, 574, 592, 591, 572, 583,
	594, 578, 566, 559, 567, 0, 204, 229, 387, 0,
	477, 304, 682, 649, 507, 644, 214, 231, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 208, 217, 230, 242, 247, 254, 277, 292,
	294, 301, 314, 327, 328, 337, 338, 341, 347, 399,
	406, 407, 408, 409, 431, 432, 433, 436, 439, 440,
	443, 445, 446, 449, 453, 457, 458, 459, 461, 463,
	465, 478, 483, 497, 498, 499, 500, 501, 504, 505,
	512, 513, 514, 515, 516, 524, 525, 530, 531, 532,
	533, 544, 617, 619, 636, 657, 664, 503, 404, 0,
	475, 610, 0, 0, 317, 318, 466, 467, 332, 333,
	678, 679, 316, 631, 665, 628, 677, 659, 460, 397,
	0, 0, 400, 297, 322, 339, 0, 648, 526, 236,
	489, 306, 265, 0, 0, 219, 257, 239, 275, 290,
	293, 343, 411, 421, 451, 456, 312, 287, 255, 482,
	252, 508, 547, 548, 549, 551, 415, 282, 455, 556,
	0, 395, 605, 606, 335, 0, 0, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 385, 283, 0, 1976, 212, 529,
	0, 452, 0, 211, 0, 510, 268, 396, 393, 614,
	298, 289, 285, 264, 336, 405, 450, 546, 444, 0,
	389, 0, 650, 521, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 262, 344, 210, 435, 522,
	302, 0, 0, 0, 0, 0, 535, 756, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	256, 0, 0, 0, 370, 379, 378, 358, 359, 361,
	363, 369, 376, 382, 355, 364, 0, 0, 640, 0,
	0, 0, 281, 340, 288, 280, 611, 0, 0, 0,
	0, 0, 0, 627, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 423, 273, 0,
	476, 0, 319, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 661, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 349, 205, 233, 0, 0, 434,
	484, 496, 0, 0, 0, 0, 269, 0, 494, 448,
	635, 243, 300, 481, 454, 492, 462, 303, 0, 0,
	493, 391, 616, 472, 632, 662, 663, 279, 428, 646,
	550, 655, 680, 234, 276, 442, 534, 638, 518, 417,
	612, 613, 348, 517, 311, 209, 388, 668, 232, 502,
	390, 253, 241, 618, 643, 315, 267, 305, 479, 0,
	675, 221, 545, 629, 250, 506, 0, 0, 683, 258,
	528, 641, 630, 223, 625, 527, 413, 345, 346, 222,
	0, 480, 284, 309, 0, 0, 274, 437, 620, 621,
	272, 684, 237, 654, 228, 0, 653, 430, 615, 626,
	414, 402, 227, 624, 412, 401, 353, 374, 375, 296,
	324, 469, 394, 470, 323, 325, 425, 424, 426, 215,
	639, 658, 0, 216, 0, 523, 642, 685, 474, 220,
	244, 245, 248, 0, 295, 299, 307, 310, 320, 321,
	331, 386, 441, 468, 464, 473, 0, 609, 633, 647,
	660, 666, 667, 669, 670, 671, 672, 673, 676, 674,
	429, 329, 519, 352, 392, 0, 0, 447, 495, 251,
	637, 520, 240, 603, 418, 427, 259, 261, 260, 235,
	511, 608, 246, 266, 207, 0, 0, 0, 0, 270,
	271, 0, 604, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 686, 687, 688, 689, 690, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 703,
	681, 536, 542, 537, 538, 539, 540, 541, 0, 543,
	0, 0, 0, 0, 0, 419, 0, 622, 623, 704,
	403, 509, 634, 354, 368, 371, 360, 380, 0, 381,
	356, 357, 362, 365, 366, 367, 372, 373, 377, 383,
	263, 218, 410, 420, 607, 330, 224, 225, 226, 552,
	553, 554, 555, 651, 652, 656, 213, 485, 486, 487,
	488, 308, 645, 326, 491, 490, 350, 351, 398, 471,
	568, 570, 581, 585, 587, 589, 595, 598, 569, 571,
	582, 586, 588, 590, 596, 599, 558, 560, 562, 564,
	577, 576, 573, 601, 602, 579, 584, 563, 575, 580,
	593, 600, 597, 557, 561, 565, 574, 592, 591, 572,
	583, 594, 578, 566, 559, 567, 0, 204, 229, 387,
	0, 477, 304, 682, 649, 507, 644, 214, 231, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 208, 217, 230, 242, 247, 254, 277,
	292, 294, 301, 314, 327, 328, 337, 338, 341, 347,
	399, 406, 407, 408, 409, 431, 432, 433, 436, 439,
	440, 443, 445, 446, 449, 453, 457, 458, 459, 461,
	463, 465, 478, 483, 497, 498, 499, 500, 501, 504,
	505, 512, 513, 514, 515, 516, 524, 525, 530, 531,
	532, 533, 544, 617, 619, 636, 657, 664, 503, 404,
	0, 475, 610, 0, 0, 317, 318, 466, 467, 332,
	333, 678, 679, 316, 631, 665, 628, 677, 659, 460,
	397, 0, 0, 400, 297, 322, 339, 0, 648, 526,
	236, 489, 306, 265, 0, 0, 219, 257, 239, 275,
	290, 293, 343, 411, 421, 451, 456, 312, 287, 255,
	482, 252, 508, 547, 548, 549, 551, 415, 282, 455,
	556, 0, 395, 605, 606, 335, 0, 0, 0, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 0, 0, 385, 283, 0, 0, 212,
	529, 0, 452, 0, 211, 0, 510, 268, 396, 393,
	614, 298, 289, 285, 264, 336, 405, 450, 546, 444,
	0, 389, 0, 650, 521, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 342, 262, 344, 210, 435,
	522, 302, 0, 1951, 0, 0, 0, 535, 756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 256, 0, 0, 0, 370, 379, 378, 358, 359,
	361, 363, 369, 376, 382, 355, 364, 0, 0, 640,
	0, 0, 0, 281, 340, 288, 280, 611, 0, 0,
	0, 0, 0, 0, 627, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 313, 0, 423, 273,
	0, 476, 0, 319, 334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 661, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 349, 205, 233, 0, 0,
	434, 484, 496, 0, 0, 0, 0, 269, 0, 494,
	448, 635, 243, 300, 481, 454, 492, 462, 303, 0,
	0, 493, 391, 616, 472, 632, 662, 663, 279, 428,
	646, 550, 655, 680, 234, 276, 442, 534, 638, 518,
	417, 612, 613, 348, 517, 311, 209, 388, 668, 232,
	502, 390, 253, 241, 618, 643, 315, 267, 305, 479,
	0, 675, 221, 545, 629, 250, 506, 0, 0, 683,
	258, 528, 641, 630, 223, 625, 527, 413, 345, 346,
	222, 0, 480, 284, 309, 0, 0, 274, 437, 620,
	621, 272, 684, 237, 654, 228, 0, 653, 430, 615,
	626, 414, 402, 227, 624, 412, 401, 353, 374, 375,
	296, 324, 469, 394, 470, 323, 325, 425, 424, 426,
	215, 639, 658, 0, 216, 0, 523, 642, 685, 474,
	220, 244, 245, 248, 0, 295, 299, 307, 310, 320,
	321, 331, 386, 441, 468, 464, 473, 0, 609, 633,
	647, 660, 666, 667, 669, 670, 671, 672, 673, 676,
	674, 429, 329, 519, 352, 392, 0, 0, 447, 495,
	251, 637, 520, 240, 603, 418, 427, 259, 261, 260,
	235, 511, 608, 246, 266, 207, 0, 0, 0, 0,
	270, 271, 0, 604, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 681, 536, 542, 537, 538, 539, 540, 541, 0,
	543, 0, 0, 0, 0, 0, 419, 0, 622, 623,
	704, 403, 509, 634, 354, 368, 371, 360, 380, 0,
	381, 356, 357, 362, 365, 366, 367, 372, 373, 377,
	383, 263, 218, 410, 420, 607, 330, 224, 225, 226,
	552, 553, 554, 555, 651, 652, 656, 213, 485, 486,
	487, 488, 308, 645, 326, 491, 490, 350, 351, 398,
	471, 568, 570, 581, 585, 587, 589, 595, 598, 569,
	571, 582, 586, 588, 590, 596, 599, 558, 560, 562,
	564, 577, 576, 573, 601, 602, 579, 584, 563, 575,
	580, 593, 600, 597, 557, 561, 565, 574, 592, 591,
	572, 583, 594, 578, 566, 559, 567, 0, 204, 229,
	387, 0, 477, 304, 682, 649, 507, 644, 214, 231,
	0, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 206, 208, 217, 230, 242, 247, 254,
	277, 292, 294, 301, 314, 327, 328, 337, 338, 341,
	347, 399, 406, 407, 408, 409, 431, 432, 433, 436,
	439, 440, 443, 445, 446, 449, 453, 457, 458, 459,
	461, 463, 465, 478, 483, 497, 498, 499, 500, 501,
	504, 505, 512, 513, 514, 515, 516, 524, 525, 530,
	531, 532, 533, 544, 617, 619, 636, 657, 664, 503,
	404, 0, 475, 610, 0, 0, 317, 318, 466, 467,
	332, 333, 678, 679, 316, 631, 665, 628, 677, 659,
	460, 397, 0, 0, 400, 297, 322, 339, 0, 648,
	526, 236, 489, 306, 265, 0, 0, 219, 257, 239,
	275, 290, 293, 343, 411, 421, 451, 456, 312, 287,
	255, 482, 252, 508, 547, 548, 549, 551, 415, 282,
	455, 556, 0, 395, 605, 606, 335, 0, 0, 0,
	0, 0, 0, 438, 0, 0, 0, 0, 0, 0,
	1854, 286, 0, 0, 0, 0, 385, 283, 0, 0,
	212, 529, 0, 452, 0, 211, 0, 510, 268, 396,
	393, 614, 298, 289, 285, 264, 336, 405, 450, 546,
	444, 0, 389, 0, 650, 521, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 342, 262, 344, 210,
	435, 522, 302, 0, 0, 0, 0, 0, 535, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 256, 0, 0, 0, 370, 379, 378, 358,
	359, 361, 363, 369, 376, 382, 355, 364, 0, 0,
	640, 0, 0, 0, 281, 340, 288, 280, 611, 0,
	0, 0, 0, 0, 0, 627, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 313, 0, 423,
	273, 0, 476, 0, 319, 334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 661, 0, 0, 0,
	0, 0, 0, 0, 384, 0, 349, 205, 233, 0,
	0, 434, 484, 496, 0, 0, 0, 0, 269, 0,
	494, 448, 635, 243, 300, 481, 454, 492, 462, 303,
	0, 0, 493, 391, 616, 472, 632, 662, 663, 279,
	428, 646, 550, 655, 680, 234, 276, 442, 534, 638,
	518, 417, 612, 613, 348, 517, 311, 209, 388, 668,
	232, 502, 390, 253, 241, 618, 643, 315, 267, 305,
	479, 0, 675, 221, 545, 629, 250, 506, 0, 0,
	683, 258, 528, 641, 630, 223, 625, 527, 413, 345,
	346, 222, 0, 480, 284, 309, 0, 0, 274, 437,
	620, 621, 272, 684, 237, 654, 228, 0, 653, 430,
	615, 626, 414, 402, 227, 624, 412, 401, 353, 374,
	375, 296, 324, 469, 394, 470, 323, 325, 425, 424,
	426, 215, 639, 658, 0, 216, 0, 523, 642, 685,
	474, 220, 244, 245, 248, 0, 295, 299, 307, 310,
	320, 321, 331, 386, 441, 468, 464, 473, 0, 609,
	633, 647, 660, 666, 667, 669, 670, 671, 672, 673,
	676, 674, 429, 329, 519, 352, 392, 0, 0, 447,
	495, 251, 637, 520, 240, 603, 418, 427, 259, 261,
	260, 235, 511, 608, 246, 266, 207, 0, 0, 0,
	0, 270, 271, 0, 604, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 686, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 681, 536, 542, 537, 538, 539, 540, 541,
	0, 543, 0, 0, 0, 0, 0, 419, 0, 622,
	623, 704, 403, 509, 634, 354, 368, 371, 360, 380,
	0, 381, 356, 357, 362, 365, 366, 367, 372, 373,
	377, 383, 263, 218, 410, 420, 607, 330, 224, 225,
	226, 552, 553, 554, 555, 651, 652, 656, 213, 485,
	486, 487, 488, 308, 645, 326, 491, 490, 350, 351,
	398, 471, 568, 570, 581, 585, 587, 589, 595, 598,
	569, 571, 582, 586, 588, 590, 596, 599, 558, 560,
	562, 564, 577, 576, 573, 601, 602, 579, 584, 563,
	575, 580, 593, 600, 597, 557, 561, 565, 574, 592,
	591, 572, 583, 594, 578, 566, 559, 567, 0, 204,
	229, 387, 0, 477, 304, 682, 649, 507, 644, 214,
	231, 0, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 208, 217, 230, 242, 247,
	254, 277, 292, 294, 301, 314, 327, 328, 337, 338,
	341, 347, 399, 406, 407, 408, 409, 431, 432, 433,
	436, 439, 440, 443, 445, 446, 449, 453, 457, 458,
	459, 461, 463, 465, 478, 483, 497, 498, 499, 500,
	501, 504, 505, 512, 513, 514, 515, 516, 524, 525,
	530, 531, 532, 533, 544, 617, 619, 636, 657, 664,
	503, 404, 0, 475, 610, 0, 0, 317, 318, 466,
	467, 332, 333, 678, 679, 316, 631, 665, 628, 677,
	659, 460, 397, 0, 0, 400, 297, 322, 339, 0,
	648, 526, 236, 489, 306, 265, 0, 0, 219, 257,
	239, 275, 290, 293, 343, 411, 421, 451, 456, 312,
	287, 255, 482, 252, 508, 547, 548, 549, 551, 415,
	282, 455, 556, 0, 395, 605, 606, 335, 0, 0,
	0, 0, 0, 0, 438, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 0, 0, 0, 385, 283, 0,
	0, 212, 529, 0, 452, 0, 211, 0, 510, 268,
	396, 393, 614, 298, 289, 285, 264, 336, 405, 450,
	546, 444, 0, 389, 0, 650, 521, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 342, 262, 344,
	210, 435, 522, 302, 0, 101, 0, 0, 0, 535,
	991, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 256, 0, 0, 0, 370, 379, 378,
	358, 359, 361, 363, 369, 376, 382, 355, 364, 0,
	0, 640, 0, 0, 0, 281, 340, 288, 280, 611,
	0, 0, 0, 0, 0, 0, 627, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 313, 0,
	423, 273, 0, 476, 0, 319, 334, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 661, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 349, 205, 233,
	0, 0, 434, 484, 496, 0, 0, 0, 0, 269,
	0, 494, 448, 635, 243, 300, 481, 454, 492, 462,
	303, 0, 0, 493, 391, 616, 472, 632, 662, 663,
	279, 428, 646, 550, 655, 680, 234, 276, 442, 534,
	638, 518, 417, 612, 613, 348, 517, 311, 209, 388,
	668, 232, 502, 390, 253, 241, 618, 643, 315, 267,
	305, 479, 0, 675, 221, 545, 629, 250, 506, 0,
	0, 683, 258, 528, 641, 630, 223, 625, 527, 413,
	345, 346, 222, 0, 480, 284, 309, 0, 0, 274,
	437, 620, 621, 272, 684, 237, 654, 228, 0, 653,
	430, 615, 626, 414, 402, 227, 624, 412, 401, 353,
	374, 375, 296, 324, 469, 394, 470, 323, 325, 425,
	424, 426, 215, 639, 658, 0, 216, 0, 523, 642,
	685, 474, 220, 244, 245, 248, 0, 295, 299, 307,
	310, 320, 321, 331, 386, 441, 468, 464, 473, 0,
	609, 633, 647, 660, 666, 667, 669, 670, 671, 672,
	673, 676, 674, 429, 329, 519, 352, 392, 0, 0,
	447, 495, 251, 637, 520, 240, 603, 418, 427, 259,
	261, 260, 235, 511, 608, 246, 266, 207, 0, 0,
	0, 0, 270, 271, 0, 604, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 681, 536, 542, 537, 538, 539, 540,
	541, 0, 543, 0, 0, 0, 0, 0, 419, 0,
	622, 623, 704, 403, 509, 634, 354, 368, 371, 360,
	380, 0, 381, 356, 357, 362, 365, 366, 367, 372,
	373, 377, 383, 263, 218, 410, 420, 607, 330, 224,
	225, 226, 552, 553, 554, 555, 651, 652, 656, 213,
	485, 486, 487, 488, 308, 645, 326, 491, 490, 350,
	351, 398, 471, 568, 570, 581, 585, 587, 589, 595,
	598, 569, 571, 582, 586, 588, 590, 596, 599, 558,
	560, 562, 564, 577, 576, 573, 601, 602, 579, 584,
	563, 575, 580, 593, 600, 597, 557, 561, 565, 574,
	592, 591, 572, 583, 594, 578, 566, 559, 567, 0,
	204, 229, 387, 0, 477, 304, 682, 649, 507, 644,
	214, 231, 0, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 208, 217, 230, 242,
	247, 254, 277, 292, 294, 301, 314, 327, 328, 337,
	338, 341, 347, 399, 406, 407, 408, 409, 431, 432,
	433, 436, 439, 440, 443, 445, 446, 449, 453, 457,
	458, 459, 461, 463, 465, 478, 483, 497, 498, 499,
	500, 501, 504, 505, 512, 513, 514, 515, 516, 524,
	525, 530, 531, 532, 533, 544, 617, 619, 636, 657,
	664, 503, 404, 0, 475, 610, 0, 0, 317, 318,
	466, 467, 332, 333, 678, 679, 316, 631, 665, 628,
	677, 659, 460, 397, 0, 0, 400, 297, 322, 339,
	0, 648, 526, 236, 489, 306, 265, 0, 0, 219,
	257, 239, 275, 290, 293, 343, 411, 421, 451, 456,
	312, 287, 255, 482, 252, 508, 547, 548, 549, 551,
	415, 282, 455, 556, 0, 395, 605, 606, 335, 0,
	0, 0, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 0, 0, 0, 385, 283,
	0, 0, 212, 529, 0, 452, 0, 211, 0, 510,
	268, 396, 393, 614, 298, 289, 285, 264, 336, 405,
	450, 546, 444, 0, 389, 0, 650, 521, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 262,
	344, 210, 435, 522, 302, 0, 0, 0, 0, 0,
	535, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 256, 0, 0, 0, 370, 379,
	378, 358, 359, 361, 363, 369, 376, 382, 355, 364,
	0, 0, 640, 0, 0, 0, 281, 340, 288, 280,
	611, 0, 0, 0, 0, 0, 0, 627, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	416, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 0, 313,
	0, 423, 273, 0, 476, 0, 319, 334, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 661, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 349, 205,
	233, 0, 0, 434, 484, 496, 0, 0, 0, 0,
	269, 0, 494, 448, 635, 243, 300, 481, 454, 492,
	462, 303, 0, 0, 493, 391, 616, 472, 632, 662,
	663, 279, 428, 646, 550, 655, 680, 234, 276, 442,
	534, 638, 518, 417, 612, 613, 348, 517, 311, 209,
	388, 668, 232, 502, 390, 253, 241, 618, 643, 315,
	267, 305, 479, 0, 675, 221, 545, 629, 250, 506,
	0, 0, 683, 258, 528, 641, 630, 223, 625, 527,
	413, 345, 346, 222, 0, 480, 284, 309, 0, 0,
	274, 437, 620, 621, 272, 684, 237, 654, 228, 0,
	653, 430, 615, 626, 414, 402, 227, 624, 412, 401,
	353, 374, 375, 296, 324, 469, 394, 470, 323, 325,
	425, 424, 426, 215, 639, 658, 0, 216, 0, 523,
	642, 685, 474, 220, 244, 245, 248, 0, 295, 299,
	307, 310, 320, 321, 331, 386, 441, 468, 464, 473,
	0, 609, 633, 647, 660, 666, 667, 669, 670, 671,
	672, 673, 676, 674, 429, 329, 519, 352, 392, 0,
	0, 447, 495, 251, 637, 520, 240, 603, 418, 427,
	259, 261, 260, 235, 511, 608, 246, 266, 207, 0,
	0, 0, 0, 270, 271, 0, 604, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 686, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 681, 536, 542, 537, 538, 539,
	540, 541, 0, 543, 0, 0, 0, 0, 0, 419,
	0, 622, 623, 704, 403, 509, 634, 354, 368, 371,
	360, 380, 0, 381, 356, 357, 362, 365, 366, 367,
	372, 373, 377, 383, 263, 218, 410, 420, 607, 330,
	224, 225, 226, 552, 553, 554, 555, 651, 652, 656,
	213, 485, 486, 487, 488, 308, 645, 326, 491, 490,
	350, 351, 398, 471, 568, 570, 581, 585, 587, 589,
	595, 598, 569, 571, 582, 586, 588, 590, 596, 599,
	558, 560, 562, 564, 577, 576, 573, 601, 602, 579,
	584, 563, 575, 580, 593, 600, 597, 557, 561, 565,
	574, 592, 591, 572, 583, 594, 578, 566, 559, 567,
	0, 204, 229, 387, 0, 477, 304, 682, 649, 507,
	644, 214, 231, 0, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 208, 217, 230,
	242, 247, 254, 277, 292, 294, 301, 314, 327, 328,
	337, 338, 341, 347, 399, 406, 407, 408, 409, 431,
	432, 433, 436, 439, 440, 443, 445, 446, 449, 453,
	457, 458, 459, 461, 463, 465, 478, 483, 497, 498,
	499, 500, 501, 504, 505, 512, 513, 514, 515, 516,
	524, 525, 530, 531, 532, 533, 544, 617, 619, 636,
	657, 664, 503, 404, 0, 475, 610, 0, 0, 317,
	318, 466, 467, 332, 333, 678, 679, 1507, 631, 665,
	628, 677, 659, 460, 397, 0, 0, 400, 297, 322,
	339, 0, 648, 526, 236, 489, 306, 265, 0, 0,
	219, 257, 239, 275, 290, 293, 343, 411, 421, 451,
	456, 312, 287, 255, 482, 252, 508, 547, 548, 549,
	551, 415, 282, 455, 556, 0, 395, 605, 606, 335,
	0, 0, 0, 0, 0, 0, 438, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 0, 0, 0, 385,
	283, 0, 0, 212, 529, 0, 452, 0, 211, 0,
	510, 268, 396, 393, 614, 298, 289, 285, 264, 336,
	405, 450, 546, 444, 0, 389, 0, 650, 521, 422,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	262, 344, 210, 435, 522, 302, 0, 0, 0, 0,
	0, 535, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 256, 0, 0, 0, 370,
	379, 378, 358, 359, 361, 363, 369, 376, 382, 355,
	364, 0, 0, 640, 0, 0, 0, 281, 340, 288,
	280, 611, 0, 0, 0, 0, 0, 0, 627, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	313, 0, 423, 273, 0, 476, 0, 319, 334, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 661,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 349,
	205, 233, 0, 0, 434, 484, 496, 0, 0, 0,
	0, 269, 0, 494, 448, 635, 243, 300, 481, 454,
	492, 462, 303, 0, 0, 493, 391, 616, 472, 632,
	662, 663, 279, 428, 646, 550, 655, 680, 234, 276,
	442, 534, 638, 518, 417, 612, 613, 348, 517, 311,
	209, 388, 668, 232, 502, 390, 253, 241, 618, 643,
	315, 267, 305, 479, 0, 675, 221, 545, 629, 250,
	506, 0, 0, 683, 258, 528, 641, 630, 223, 625,
	527, 413, 345, 346, 222, 0, 480, 284, 309, 0,
	0, 274, 437, 620, 621, 272, 684, 237, 654, 228,
	0, 653, 430, 615, 626, 414, 402, 227, 624, 412,
	401, 353, 374, 375, 296, 324, 469, 394, 470, 323,
	325, 425, 424, 426, 215, 639, 658, 0, 216, 0,
	523, 642, 685, 474, 220, 244, 245, 248, 0, 295,
	299, 307, 310, 320, 321, 331, 386, 441, 468, 464,
	473, 0, 609, 633, 647, 660, 666, 667, 669, 670,
	671, 672, 673, 676, 674, 429, 329, 519, 352, 392,
	0, 0, 447, 495, 251, 637, 520, 240, 603, 418,
	427, 259, 261, 260, 235, 511, 608, 246, 266, 207,
	0, 0, 0, 0, 270, 271, 0, 604, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 681, 536, 542, 537, 538,
	539, 540, 541, 0, 543, 0, 0, 0, 0, 0,
	419, 0, 622, 623, 704, 403, 509, 634, 354, 368,
	371, 360, 380, 0, 381, 356, 357, 362, 365, 366,
	367, 372, 373, 377, 383, 263, 218, 410, 420, 607,
	330, 224, 225, 226, 552, 553, 554, 555, 651, 652,
	656, 213, 485, 486, 487, 488, 308, 645, 326, 491,
	490, 350, 351, 398, 471, 568, 570, 581, 585, 587,
	589, 595, 598, 569, 571, 582, 586, 588, 590, 596,
	599, 558, 560, 562, 564, 577, 576, 573, 601, 602,
	579, 584, 563, 575, 580, 593, 600, 597, 557, 561,
	565, 574, 592, 591, 572, 583, 594, 578, 566, 559,
	567, 0, 204, 229, 387, 0, 477, 304, 682, 649,
	507, 644, 214, 231, 0, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1084, 0, 0, 0, 206, 208, 217,
	230, 242, 247, 254, 277, 292, 294, 301, 314, 327,
	328, 337, 338, 341, 347, 399, 406, 407, 408, 409,
	431, 432, 433, 436, 439, 440, 443, 445, 446, 449,
	453, 457, 458, 459, 461, 463, 465, 478, 483, 497,
	498, 499, 500, 501, 504, 505, 512, 513, 514, 515,
	516, 524, 525, 530, 531, 532, 533, 544, 617, 619,
	636, 657, 664, 503, 404, 0, 475, 610, 0, 0,
	317, 318, 466, 467, 332, 333, 678, 679, 316, 631,
	665, 628, 677, 659, 460, 397, 0, 0, 400, 297,
	322, 339, 0, 648, 526, 236, 489, 306, 265, 0,
	0, 219, 257, 239, 275, 290, 293, 343, 411, 421,
	451, 456, 312, 287, 255, 482, 252, 508, 547, 548,
	549, 551, 415, 282, 455, 556, 0, 395, 605, 606,
	335, 0, 0, 0, 0, 0, 0, 438, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 0, 0, 0,
	385, 283, 0, 0, 212, 529, 0, 452, 0, 211,
	0, 510, 268, 396, 393, 614, 298, 289, 285, 264,
	336, 405, 450, 546, 444, 0, 389, 0, 650, 521,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	342, 262, 344, 210, 435, 522, 302, 0, 0, 0,
	0, 0, 535, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 256, 0, 0, 0,
	370, 379, 378, 358, 359, 361, 363, 369, 376, 382,
	355, 364, 0, 0, 640, 0, 0, 0, 281, 340,
	288, 280, 611, 0, 0, 0, 0, 0, 0, 627,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 313, 0, 423, 273, 0, 476, 0, 319, 334,
	0, 0, 0, 0, 0, 0, 0, 0, 707, 0,
	661, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	349, 205, 233, 0, 0, 434, 484, 496, 0, 0,
	0, 0, 269, 0, 494, 448, 635, 243, 300, 481,
	454, 492, 462, 303, 0, 0, 493, 391, 616, 472,
	632, 662, 663, 279, 428, 646, 550, 655, 680, 234,
	276, 442, 534, 638, 518, 417, 612, 613, 348, 517,
	311, 209, 388, 668, 232, 502, 390, 253, 241, 618,
	643, 315, 267, 305, 479, 0, 675, 221, 545, 629,
	250, 506, 0, 0, 683, 258, 528, 641, 630, 223,
	625, 527, 413, 345, 346, 222, 0, 480, 284, 309,
	0, 0, 274, 437, 620, 621, 272, 684, 237, 654,
	228, 0, 653, 430, 615, 626, 414, 402, 227, 624,
	412, 401, 353, 374, 375, 296, 324, 469, 394, 470,
	323, 325, 425, 424, 426, 215, 639, 658, 0, 216,
	0, 523, 642, 685, 474, 220, 244, 245, 248, 0,
	295, 299, 307, 310, 320, 321, 331, 386, 441, 468,
	464, 473, 0, 609, 633, 647, 660, 666, 667, 669,
	670, 671, 672, 673, 676, 674, 429, 329, 519, 352,
	392, 0, 0, 447, 495, 251, 637, 520, 240, 603,
	418, 427, 259, 261, 260, 235, 511, 608, 246, 266,
	207, 0, 0, 0, 0, 270, 271, 0, 604, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 686, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 681, 536, 542, 537,
	538, 539, 540, 541, 0, 543, 0, 0, 0, 0,
	0, 419, 0, 622, 623, 704, 403, 509, 634, 354,
	368, 371, 360, 380, 0, 381, 356, 357, 362, 365,
	366, 367, 372, 373, 377, 383, 263, 218, 410, 420,
	607, 330, 224, 225, 226, 552, 553, 554, 555, 651,
	652, 656, 213, 485, 486, 487, 488, 308, 645, 326,
	491, 490, 350, 351, 398, 471, 568, 570, 581, 585,
	587, 589, 595, 598, 569, 571, 582, 586, 588, 590,
	596, 599, 558, 560, 562, 564, 577, 576, 573, 601,
	602, 579, 584, 563, 575, 580, 593, 600, 597, 557,
	561, 565, 574, 592, 591, 572, 583, 594, 578, 566,
	559, 567, 0, 204, 229, 387, 0, 477, 304, 682,
	649, 507, 644, 214, 231, 0, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 208,
	217, 230, 242, 247, 254, 277, 292, 294, 301, 314,
	327, 328, 337, 338, 341, 347, 399, 406, 407, 408,
	409, 431, 432, 433, 436, 439, 440, 443, 445, 446,
	449, 453, 457, 458, 459, 461, 463, 465, 478, 483,
	497, 498, 499, 500, 501, 504, 505, 512, 513, 514,
	515, 516, 524, 525, 530, 531, 532, 533, 544, 617,
	619, 636, 657, 664, 503, 404, 0, 475, 610, 0,
	0, 317, 318, 466, 467, 332, 333, 678, 679, 316,
	631, 665, 628, 677, 659, 460, 397, 0, 0, 400,
	297, 322, 339, 0, 648, 526, 236, 489, 306, 265,
	0, 0, 219, 257, 239, 275, 290, 293, 343, 411,
	421, 451, 456, 312, 287, 255, 482, 252, 508, 547,
	548, 549, 551, 415, 282, 455, 556, 0, 395, 605,
	606, 335, 0, 0, 0, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 0, 0,
	0, 385, 283, 0, 0, 212, 529, 0, 452, 0,
	211, 0, 510, 268, 396, 393, 614, 298, 289, 285,
	264, 336, 405, 450, 546, 444, 0, 389, 0, 650,
	521, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 342, 262, 344, 210, 435, 522, 302, 0, 0,
	0, 0, 0, 535, 756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 256, 0, 0,
	0, 370, 379, 378, 358, 359, 361, 363, 369, 376,
	382, 355, 364, 0, 0, 640, 0, 0, 0, 281,
	340, 288, 280, 611, 0, 0, 0, 0, 0, 0,
	627, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 313, 0, 423, 273, 0, 476, 0, 319,
	334, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 661, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 349, 205, 233, 0, 0, 434, 484, 496, 0,
	0, 0, 0, 269, 0, 494, 448, 635, 243, 300,
	481, 454, 492, 462, 303, 0, 0, 493, 391, 616,
	472, 632, 662, 663, 279, 428, 646, 550, 655, 680,
	234, 276, 442, 534, 638, 518, 417, 612, 613, 348,
	517, 311, 209, 388, 668, 232, 502, 390, 253, 241,
	618, 643, 315, 267, 305, 479, 0, 675, 221, 545,
	629, 250, 506, 0, 0, 683, 258, 528, 641, 630,
	223, 625, 527, 413, 345, 346, 222, 0, 480, 284,
	309, 0, 0, 274, 437, 620, 621, 272, 684, 237,
	654, 228, 0, 653, 430, 615, 626, 414, 402, 227,
	624, 412, 401, 353, 374, 375, 296, 324, 469, 394,
	470, 323, 325, 425, 424, 426, 215, 639, 658, 0,
	216, 0, 523, 642, 685, 474, 220, 244, 245, 248,
	0, 295, 299, 307, 310, 320, 321, 331, 386, 441,
	468, 464, 473, 0, 609, 633, 647, 660, 666, 667,
	669, 670, 671, 672, 673, 676, 674, 429, 329, 519,
	352, 392, 0, 0, 447, 495, 251, 637, 520, 240,
	603, 418, 427, 259, 261, 260, 235, 511, 608, 246,
	266, 207, 0, 0, 0, 0, 270, 271, 0, 604,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 681, 536, 542,
	537, 538, 539, 540, 541, 0, 543, 0, 0, 0,
	0, 0, 419, 0, 622, 623, 704, 403, 509, 634,
	354, 368, 371, 360, 380, 0, 381, 356, 357, 362,
	365, 366, 367, 372, 373, 377, 383, 263, 218, 410,
	420, 607, 330, 224, 225, 226, 552, 553, 554, 555,
	651, 652, 656, 213, 485, 486, 487, 488, 308, 645,
	326, 491, 490, 350, 351, 398, 471, 568, 570, 581,
	585, 587, 589, 595, 598, 569, 571, 582, 586, 588,
	590, 596, 599, 558, 560, 562, 564, 577, 576, 573,
	601, 602, 579, 584, 563, 575, 580, 593, 600, 597,
	557, 561, 565, 574, 592, 591, 572, 583, 594, 578,
	566, 559, 567, 0, 204, 229, 387, 0, 477, 304,
	682, 649, 507, 644, 214, 231, 0, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 206,
	208, 217, 230, 242, 247, 254, 277, 292, 294, 301,
	314, 327, 328, 337, 338, 341, 347, 399, 406, 407,
	408, 409, 4311, 432, 433, 436, 439, 440, 443, 445,
	446, 449, 453, 457, 458, 459, 461, 463, 465, 478,
	483, 497, 498, 499, 500, 501, 504, 505, 512, 513,
	514, 515, 516, 524, 525, 530, 531, 532, 533, 544,
	617, 619, 636, 657, 664, 503, 404, 0, 475, 610,
	0, 0, 317, 318, 466, 467, 332, 333, 678, 679,
	316, 631, 665, 628, 677, 659, 460, 397, 0, 0,
	400, 297, 322, 339, 0, 648, 526, 236, 489, 306,
	265, 0, 0, 219, 257, 239, 275, 290, 293, 343,
	411, 421, 451, 456, 312, 287, 255, 482, 252, 508,
	547, 548, 549, 551, 415, 282, 455, 556, 0, 395,
	605, 606, 335, 0, 0, 0, 0, 0, 0, 438,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 0,
	0, 0, 385, 283, 0, 0, 212, 529, 0, 452,
	0, 211, 0, 510, 268, 396, 393, 614, 298, 289,
	285, 264, 336, 405, 450, 546, 444, 0, 389, 0,
	650, 521, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 262, 344, 210, 435, 522, 302, 0,
	0, 0, 0, 0, 535, 756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 256, 0,
	0, 0, 370, 379, 378, 358, 359, 361, 363, 369,
	376, 382, 355, 364, 0, 0, 640, 0, 0, 0,
	281, 340, 288, 280, 611, 0, 0, 0, 0, 0,
	0, 627, 0, 0, 238, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 313, 0, 423, 273, 0, 476, 0,
	319, 334, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 661, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 349, 205, 233, 0, 0, 434, 484, 496,
	0, 0, 0, 0, 269, 0, 494, 448, 635, 243,
	300, 481, 454, 492, 462, 303, 0, 0, 493, 391,
	616, 472, 632, 662, 663, 279, 428, 646, 550, 655,
	680, 234, 276, 442, 534, 638, 518, 417, 612, 613,
	348, 517, 311, 209, 388, 668, 232, 502, 390, 253,
	241, 618, 643, 315, 267, 305, 479, 0, 675, 221,
	545, 629, 250, 506, 0, 0, 683, 258, 528, 641,
	630, 223, 625, 527, 413, 345, 346, 222, 0, 480,
	284, 309, 0, 0, 274, 437, 620, 621, 272, 684,
	237, 654, 228, 0, 653, 430, 615, 626, 414, 402,
	227, 624, 412, 401, 353, 374, 375, 296, 324, 469,
	394, 470, 323, 325, 425, 424, 426, 215, 639, 658,
	0, 216, 0, 523, 642, 685, 474, 220, 244, 245,
	248, 0, 295, 299, 307, 310, 320, 321, 331, 386,
	441, 468, 464, 473, 0, 609, 633, 647, 660, 666,
	667, 669, 670, 671, 672, 673, 676, 674, 429, 329,
	519, 352, 392, 0, 0, 447, 495, 251, 637, 520,
	240, 603, 418, 427, 259, 261, 260, 235, 511, 608,
	246, 266, 207, 0, 0, 0, 0, 270, 271, 0,
	604, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	686, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 681, 536,
	542, 537, 538, 539, 540, 541, 0, 543, 0, 0,
	0, 0, 0, 419, 0, 622, 623, 704, 403, 509,
	634, 354, 368, 371, 360, 380, 0, 381, 356, 357,
	362, 365, 366, 367, 372, 373, 377, 383, 263, 218,
	410, 420, 607, 330, 224, 225, 226, 552, 553, 554,
	555, 651, 652, 656, 213, 485, 486, 487, 488, 308,
	645, 326, 491, 490, 350, 351, 398, 471, 568, 570,
	581, 585, 587, 589, 595, 598, 569, 571, 582, 586,
	588, 590, 596, 599, 558, 560, 562, 564, 577, 576,
	573, 601, 602, 579, 584, 563, 575, 580, 593, 600,
	597, 557, 561, 565, 574, 592, 591, 572, 583, 594,
	578, 566, 559, 567, 0, 204, 229, 387, 0, 477,
	304, 682, 649, 507, 644, 214, 231, 0, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 208, 217, 230, 242, 247, 254, 277, 292, 294,
	301, 314, 327, 328, 337, 338, 341, 347, 399, 406,
	407, 408, 409, 431, 432, 433, 436, 439, 440, 443,
	445, 446, 449, 453, 457, 458, 459, 461, 463, 465,
	478, 483, 497, 498, 499, 500, 501, 504, 505, 512,
	513, 514, 515, 516, 524, 525, 530, 531, 532, 533,
	544, 617, 619, 636, 657, 664, 503, 404, 0, 475,
	610, 0, 0, 317, 318, 466, 467, 332, 333, 678,
	679, 316, 631, 665, 628, 677, 659, 460, 397, 0,
	0, 400, 297, 322, 339, 0, 648, 526, 236, 489,
	306, 265, 0, 0, 219, 257, 239, 275, 290, 293,
	343, 411, 421, 451, 456, 312, 287, 255, 482, 252,
	508, 547, 548, 549, 551, 415, 282, 455, 556, 0,
	395, 605, 606, 335, 0, 0, 0, 0, 0, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	0, 0, 0, 385, 283, 0, 0, 212, 529, 0,
	452, 0, 211, 0, 510, 268, 396, 393, 614, 298,
	289, 285, 264, 336, 405, 450, 546, 444, 0, 389,
	0, 650, 521, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 342, 262, 344, 210, 435, 522, 302,
	0, 0, 0, 0, 0, 535, 991, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 256,
	0, 0, 0, 370, 379, 378, 358, 359, 361, 363,
	369, 376, 382, 355, 364, 0, 0, 640, 0, 0,
	0, 281, 340, 288, 280, 611, 0, 0, 0, 0,
	0, 0, 627, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 416, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 313, 0, 423, 273, 0, 476,
	0, 319, 334, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 661, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 349, 205, 233, 0, 0, 434, 484,
	496, 0, 0, 0, 0, 269, 0, 494, 448, 635,
	243, 300, 481, 454, 492, 462, 303, 0, 0, 493,
	391, 616, 472, 632, 662, 663, 279, 428, 646, 550,
	655, 680, 234, 276, 442, 534, 638, 518, 417, 612,
	613, 348, 517, 311, 209, 388, 668, 232, 502, 390,
	253, 241, 618, 643, 315, 267, 305, 479, 0, 675,
	221, 545, 629, 250, 506, 0, 0, 683, 258, 528,
	641, 630, 223, 625, 527, 413, 345, 346, 222, 0,
	480, 284, 309, 0, 0, 274, 437, 620, 621, 272,
	684, 237, 654, 228, 0, 653, 430, 615, 626, 414,
	402, 227, 624, 412, 401, 353, 374, 375, 296, 324,
	469, 394, 470, 323, 325, 425, 424, 426, 215, 639,
	658, 0, 216, 0, 523, 642, 685, 474, 220, 244,
	245, 248, 0, 295, 299, 307, 310, 320, 321, 331,
	386, 441, 468, 464, 473, 0, 609, 633, 647, 660,
	666, 667, 669, 670, 671, 672, 673, 676, 674, 429,
	329, 519, 352, 392, 0, 0, 447, 495, 251, 637,
	520, 240, 603, 418, 427, 259, 261, 260, 235, 511,
	608, 246, 266, 207, 0, 0, 0, 0, 270, 271,
	0, 604, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 681,
	536, 542, 537, 538, 539, 540, 541, 0, 543, 0,
	0, 0, 0, 0, 419, 0, 622, 623, 704, 403,
	509, 634, 354, 368, 371, 360, 380, 0, 381, 356,
	357, 362, 365, 366, 367, 372, 373, 377, 383, 263,
	218, 410, 420, 607, 330, 224, 225, 226, 552, 553,
	554, 555, 651, 652, 656, 213, 485, 486, 487, 488,
	308, 645, 326, 491, 490, 350, 351, 398, 471, 568,
	570, 581, 585, 587, 589, 595, 598, 569, 571, 582,
	586, 588, 590, 596, 599, 558, 560, 562, 564, 577,
	576, 573, 601, 602, 579, 584, 563, 575, 580, 593,
	600, 597, 557, 561, 565, 574, 592, 591, 572, 583,
	594, 578, 566, 559, 567, 0, 204, 229, 387, 0,
	477, 304, 682, 649, 507, 644, 214, 231, 0, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 208, 217, 230, 242, 247, 254, 277, 292,
	294, 301, 314, 327, 328, 337, 338, 341, 347, 399,
	406, 407, 408, 409, 431, 432, 433, 436, 439, 440,
	443, 445, 446, 449, 453, 457, 458, 459, 461, 463,
	465, 478, 483, 497, 498, 499, 500, 501, 504, 505,
	512, 513, 514, 515, 516, 524, 525, 530, 531, 532,
	533, 544, 617, 619, 636, 657, 664, 503, 404, 0,
	475, 610, 0, 0, 317, 318, 466, 467, 332, 333,
	678, 679, 316, 631, 665, 628, 677, 659, 460, 397,
	0, 0, 400, 297, 322, 339, 0, 648, 526, 236,
	489, 306, 265, 0, 0, 219, 257, 239, 275, 290,
	293, 343, 411, 421, 451, 456, 312, 287, 255, 482,
	252, 508, 547, 548, 549, 551, 415, 282, 455, 556,
	0, 395, 605, 606, 335, 0, 0, 0, 0, 0,
	0, 438, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 0, 385, 283, 0, 0, 212, 529,
	0, 452, 0, 211, 0, 510, 268, 396, 393, 614,
	298, 289, 285, 264, 336, 405, 450, 546, 444, 0,
	389, 0, 650, 521, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 342, 262, 344, 210, 435, 522,
	302, 0, 0, 0, 0, 0, 535, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	256, 0, 0, 0, 370, 379, 378, 358, 359, 361,
	363, 369, 376, 382, 355, 364, 0, 0, 640, 0,
	0, 0, 281, 340, 288, 280, 611, 0, 0, 0,
	0, 0, 0, 627, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 313, 0, 423, 273, 0,
	476, 0, 319, 334, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 661, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 349, 205, 233, 0, 0, 434,
	484, 496, 0, 0, 0, 0, 269, 0, 494, 448,
	635, 243, 300, 481, 454, 492, 462, 303, 0, 0,
	493, 391, 616, 472, 632, 662, 663, 279, 428, 646,
	550, 655, 680, 234, 276, 442, 534, 638, 518, 417,
	612, 613, 348, 517, 311, 209, 388, 668, 232, 502,
	390, 253, 241, 618, 643, 315, 267, 305, 479, 0,
	675, 221, 545, 629, 250, 506, 0, 0, 683, 258,
	528, 641, 630, 223, 625, 527, 413, 345, 346, 222,
	0, 480, 284, 309, 0, 0, 274, 437, 620, 621,
	272, 684, 237, 654, 228, 0, 653, 430, 615, 626,
	414, 402, 227, 624, 412, 401, 353, 374, 375, 296,
	324, 469, 394, 470, 323, 325, 425, 424, 426, 215,
	639, 658, 0, 216, 0, 523, 642, 685, 474, 220,
	244, 245, 248, 0, 295, 299, 307, 310, 320, 321,
	331, 386, 441, 468, 464, 473, 0, 609, 633, 647,
	660, 666, 667, 669, 670, 671, 672, 673, 676, 674,
	429, 329, 519, 352, 392, 0, 0, 447, 495, 251,
	637, 520, 240, 603, 418, 427, 259, 261, 260, 235,
	511, 608, 246, 266, 207, 0, 0, 0, 0, 270,
	271, 0, 604, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 686, 687, 688, 689, 690, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 703,
	681, 536, 542, 537, 538, 539, 540, 541, 0, 543,
	0, 0, 0, 0, 0, 419, 0, 622, 623, 704,
	403, 509, 634, 354, 368, 371, 360, 380, 0, 381,
	356, 357, 362, 365, 366, 367, 372, 373, 377, 383,
	263, 218, 410, 420, 607, 330, 224, 225, 226, 552,
	553, 554, 555, 651, 652, 656, 213, 485, 486, 487,
	488, 308, 645, 326, 491, 490, 350, 351, 398, 471,
	568, 570, 581, 585, 587, 589, 595, 598, 569, 571,
	582, 586, 588, 590, 596, 599, 558, 560, 562, 564,
	577, 576, 573, 601, 602, 579, 584, 563, 575, 580,
	593, 600, 597, 557, 561, 565, 574, 592, 591, 572,
	583, 594, 578, 566, 559, 567, 0, 204, 229, 387,
	0, 477, 304, 682, 649, 507, 644, 214, 231, 0,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 208, 217, 230, 242, 247, 254, 277,
	292, 294, 301, 314, 327, 328, 337, 338, 341, 347,
	399, 406, 407, 408, 409, 431, 432, 433, 436, 439,
	440, 443, 445, 446, 449, 453, 457, 458, 459, 461,
	463, 465, 478, 483, 497, 498, 499, 500, 501, 504,
	505, 512, 513, 514, 515, 516, 524, 525, 530, 531,
	532, 533, 544, 617, 619, 636, 657, 664, 503, 404,
	0, 475, 610, 0, 0, 317, 318, 466, 467, 332,
	333, 678, 679, 316, 631, 665, 628, 677, 659, 460,
	397, 0, 0, 400, 297, 322, 339, 0, 648, 526,
	236, 489, 306, 265, 0, 0, 219, 257, 239, 275,
	290, 293, 343, 411, 421, 451, 456, 312, 287, 255,
	482, 252, 508, 547, 548, 549, 551, 415, 282, 455,
	0, 0, 395, 605, 606, 335,
}

var yyPact = [...]int32{
	-1000, -1000, -559, -1000, 7478, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2904, 2873, -1000, -1000, -1000,
	-1000, 3036, -1000, 1273, -1000, 2344, 2286, 2831, 5230, -1000,
	60517, 905, -1000, 57433, -425, 1049, 4543, 39699, -1000, 316,
	-1000, 301, 58975, 310, -1000, -1000, -1000, -1000, -425, 23476,
	2669, 181, 174, 60517, -1000, -1000, -1000, -1000, -377, 2963,
	2264, -1000, 394, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	56662, -1000, -1000, -1000, 1360, -1000, 2836, 2866, 2634, 1113,
	1703, -1000, 2890, 2264, -1000, 23476, 2970, 2759, 22699, 22699,
	849, -1000, -1000, 271, -1000, -1000, 34302, 60517, 43554, 2894,
	58975, -1000, 2831, -1000, -1000, -1000, 232, -1000, 746, 2271,
	-1000, 2270, -1000, 975, 1174, 769, 907, 897, 767, 766,
	765, 764, 762, 760, 759, 758, 778, -1000, 1148, 1148,
	-231, -239, 1480, 840, 819, 819, 1103, 864, 2780, 2704,
	-1000, -1000, 1148, 1148, 1148, 866, 1148, 1148, 1148, 1148,
	720, 711, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148,
	1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 1148, 943,
	2831, 479, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 60517, 327, 60517, -1000, 992,
	904, -1000, -1000, -430, 1313, 1313, 217, 1313, 1313, 1313,
	1313, 331, 1084, 170, -1000, 325, 451, 317, 474, 1264,
	736, -1000, -1000, 437, 1264, 2090, -1000, 1106, 449, 312,
	-1000, 1313, 1313, -1000, 15699, 212, 15699, 15699, 447, 270,
	-1000, 2803, -1000, -1000, -1000, -1000, -1000, 1552, -1000, -1000,
	-1000, -1000, -17, 863, -1000, -1000, -1000, -1000, 58975, 55891,
	328, -1000, -1000, 815, 2123, 1359, 23476, 2567, 1097, -1000,
	-1000, 1453, 1057, -1000, -1000, -1000, -1000, -1000, 962, -1000,
	25807, 25807, 25807, 25807, -1000, -1000, 2273, 55120, 2273, 2273,
	25807, 2273, 25807, 2273, 2273, 2273, 2273, 23476, 2273, 2273,
	2273, 2273, -1000, 2273, 2273, 2273, 2273, 2273, 2273, 2273,
	2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273,
	2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273,
	2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273,
	2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273,
	2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273,
	2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273,
	2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273,
	2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273,
	2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273,
	2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273,
	2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273,
	2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273,
	2273, 2273, -1000, -1000, -1000, -1000, 2273, 988, 2273, 2273,
	2273, 2273, 2273, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2273, 2273, 2273, 2273, 2273, 2273, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2273, 2273, 2273, 2273, 2273,
	2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, -1000,
	-1000, -1000, 1911, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1547, 1795, 1784, 1765, -1000, 20368, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2273, -1000, -1000, -1000,
	60517, -1000, 2273, 335, 58975, 58975, 774, 1542, -1000, -1000,
	2890, 2264, -1000, 2963, 2951, 394, -1000, 4390, 1864, 2253,
	1696, 2264, 955, 2218, 60517, -1000, 2286, 200, -1000, -1000,
	-1000, -350, -354, 2578, 1663, 2076, 2267, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2537, 23476, -1000, -1000, 3020,
	-1000, 31218, 987, 3019, 54349, -1000, 849, 849, 2242, 686,
	161, -1000, -1000, -1000, -1000, 1204, 38928, -1000, -1000, -1000,
	-1000, -1000, 2080, 60517, -1000, -1000, 6312, 58975, -1000, 2343,
	-1000, 2065, -1000, 2306, 23476, 394, 2063, -1000, -1000, -1000,
	-1000, 1148, 1148, 1148, -1000, 777, 2966, 5230, 6392, -1000,
	-1000, -1000, 53578, 2342, 58975, -1000, 2339, -1000, 1279, 953,
	1005, 1005, 58975, -1000, -1000, 59746, 58975, 1277, 1272, 58975,
	58975, 58975, 58975, -1000, 52807, -1000, 52036, 51265, 1527, 58975,
	50494, 49723, 48952, 48181, 47410, -1000, 2774, -1000, 2352, -1000,
	-1000, -1000, 59746, 58975, 58975, 59746, 58975, 59746, 60517, 58975,
	-1000, -1000, 640, -1000, -1000, 1516, 1515, 1512, 1148, 1148,
	1510, 2048, 2031, 2022, 1148, 1148, 1509, 2015, 42012, 2014,
	461, 1508, 1503, 1491, 1627, 1993, 253, 1991, 1473, 1452,
	1486, 58975, 2338, 60517, -1000, 408, 1096, 1011, -1000, -1000,
	-1000, 1201, 2831, 2660, 2241, 859, 902, 58975, 845, 845,
	845, 58975, -1000, -1000, 16478, 60517, 346, -1000, 1988, 23476,
	-1000, 1265, 1264, 1264, -1000, -1000, -1000, -1000, -1000, -1000,
	1313, 60517, 1265, -1000, -1000, -1000, 1264, 1313, 60517, 1313,
	1313, 1313, 1313, 1264, 1264, 1264, 1313, 60517, 60517, 60517,
	60517, 60517, 60517, 60517, 60517, 60517, 15699, 1106, 1313, -441,
	-1000, 1986, -1000, -1000, -1000, 2398, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	15699, 15699, -1000, -1000, 2928, 2925, -1000, -1000, -1000, 2240,
	-1000, 299, 149, 309, -1000, 46639, 591, 1192, -1000, 591,
	-1000, -1000, -1000, -1000, -1000, 2232, 45868, -1000, -443, -448,
	-450, -451, -1000, -1000, -1000, -452, -458, -1000, -1000, -1000,
	23476, 23476, 23476, 23476, -280, 1090, 1948, 25807, 2806, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 23476, 1373, 1111, 25807,
	25807, 25807, 25807, 25807, 25807, 25807, 27361, 26584, 25807, 25807,
	25807, 25807, 25807, 25807, -1000, -1000, 36615, 8082, 8082, 1057,
	1057, 1057, 1057, -1000, -173, 2229, 59746, -1000, -1000, -1000,
	984, 23476, 23476, 1057, -1000, 1474, 2276, 20368, 23476, 23476,
	23476, 23476, 1227, 1359, 59746, 23476, -1000, 1696, -1000, -1000,
	-1000, -1000, 1392, -1000, -1000, 1233, 2758, 2758, 2758, 2758,
	23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476,
	2758, 23476, 223, 223, 282, 23476, 23476, 23476, 23476, 23476,
	23476, 23476, 23476, 18813, 23476, 23476, 25807, 23476, 23476, 23476,
	1696, 23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476,
	23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476,
	23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476,
	23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476,
	23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476,
	23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476,
	23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476,
	23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476,
	1696, 23476, 1394, 23476, 23476, 23476, 23476, 23476, 23476, 23476,
	18036, 23476, 23476, 23476, 23476, 23476, -1000, -1000, -1000, -1000,
	-1000, -1000, 23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476,
	1696, 23476, 23476, 23476, 23476, 23476, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1791, 1837, 1721, 2273,
	23476, -1000, 2221, -1000, -159, 33531, 23476, 1985, 3017, 2393,
	58975, -1000, -1000, -1000, -1000, 2890, -1000, 2890, 1791, 4186,
	2596, 22699, -1000, -1000, 4186, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2033, -1000,
	405, 901, 2362, 408, 58975, 898, 893, 867, 843, -1000,
	-58, 1170, 60517, 2218, 2888, -1000, 2213, -1000, -1000, 2273,
	-1000, -318, -1000, -319, 2574, 1984, 861, -1000, 1551, 23476,
	23476, 2211, -1000, 1444, 60517, -1000, -280, -1000, 45097, -1000,
	-1000, 14920, 60517, 751, 60517, -1000, 32760, 44326, 311, -1000,
	161, 2187, -1000, 136, 146, 19590, 1053, -1000, -1000, -1000,
	1480, 28132, 2117, 1053, 215, -1000, -1000, -1000, 2306, -1000,
	2306, 2306, 2306, 2306, 2306, 861, 861, 861, 2306, -1000,
	-1000, -1000, -1000, 2334, 2306, 2333, -1000, 2306, 2306, 2306,
	2306, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2332, 2332,
	2332, 2325, 2325, 2308, 2308, 826, -1000, 23476, 491, 43554,
	2841, 1484, 1611, -185, -1000, 58975, 1671, 1643, 1622, -1000,
	-550, 2208, -1000, -1000, 2964, -1000, -1000, 1190, 1312, 1305,
	1274, 58975, 358, 748, -1000, 814, -1000, 43554, 58975, 1271,
	1005, 58975, -1000, 58975, -1000, -1000, -1000, -1000, -1000, 58975,
	-1000, -1000, 2207, -1000, 2165, 1338, 1299, 1336, 1292, 2207,
	-1000, -1000, -184, 2207, -1000, 2207, -1000, 2207, -1000, 2207,
	-1000, 2207, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1155, 421, -344, 58975, 358, 854, -1000, 852, 36615,
	-1000, -1000, -1000, 36615, 36615, -1000, -1000, -1000, -1000, 1976,
	1950, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-534, 60517, -1000, 383, 493, 487, 442, 60517, 806, 2773,
	2770, 2756, 334, 2755, 2749, 2740, 2716, 417, 503, 60517,
	60517, 845, 2446, 60517, 2860, 60517, 60517, -1000, -1000, -1000,
	-1000, -1000, 1929, 1927, -1000, 1359, 60517, -1000, -1000, 1313,
	1313, -1000, -1000, 60517, 1313, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1313, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 60517,
	-1000, -1000, -1000, -1000, 1923, -1000, 60517, -17, 293, -1000,
	-1000, 58975, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -67, -1000, 834, 40, 389, -1000, -1000, -1000, -1000,
	-1000, 2923, -1000, 1359, 1302, 1200, 1090, 2273, -1000, -1000,
	1386, -1000, -1000, -1000, -1000, -1000, 2273, 2273, 2273, -1000,
	-1000, -1000, -1000, -1000, 1373, 25807, 25807, 25807, 1651, 885,
	1662, 1758, 1639, 1498, 1498, 1207, 25807, 1207, 25807, 1062,
	1062, 1062, 1062, 1062, -1000, -1000, -1000, -1000, -1000, -1000,
	1911, -1000, 1901, -1000, 2273, 59746, 1975, 18036, 1589, 1210,
	1696, 1083, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 4049, 1696, 2123, 1696, 2401, 4012, 1247, -1000,
	23476, 1696, 4004, -1000, -1000, 1696, 1696, 23476, -1000, -1000,
	23476, 23476, 23476, 23476, 1611, 1611, 1611, 1611, 1611, 1611,
	1611, 1611, 1611, 1611, 23476, 1611, 2203, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2191, 3016, 1584, 1611, 1611,
	1611, 1611, 3998, 1611, 1611, 23476, 1280, -1000, -1000, -1000,
	1774, 3991, 1598, 3982, 1611, 1611, -1000, 1611, 3970, 3964,
	1696, 2886, 2874, 1611, 1611, 1611, 1611, 1611, 2785, 2781,
	1611, 1611, 2772, 1611, 3957, 1611, 2763, 2747, 2719, 2701,
	2697, 2686, 2656, 2650, 2635, 2602, 2571, 2541, 2532, 2522,
	2516, 2487, 2469, 2455, 1611, 1611, 1611, 3723, 1611, 3715,
	1611, 3706, 1611, 1611, 3695, 2444, 2437, 1696, 2189, -1000,
	3690, 1611, 3507, 3457, 3451, 2407, 3446, 3437, 3432, 1611,
	1611, 1611, 2394, 3426, 3364, 3290, 3279, 3272, 3265, 3259,
	3192, 3187, 1611, 1721, 1721, 1721, 1721, 1721, 3180, -284,
	1611, 1696, -1000, -1000, -1000, -1000, 3170, 2390, 3155, 3150,
	3122, 3118, 1696, 2273, 980, -1000, -1000, 1721, 1696, 1696,
	1721, 1721, 3112, 3106, 3102, 3074, 3070, 3057, 1611, 1611,
	-1000, 1611, 3025, 3009, 2374, 2357, 1696, -1000, 1721, 60517,
	-1000, -422, -1000, 8, 1068, 2273, -1000, 42012, 1696, -1000,
	3280, -1000, 1502, -1000, -1000, -1000, -1000, -1000, 38157, 2083,
	-1000, -1000, -1000, 843, 890, 380, 843, 408, 383, 2391,
	58975, 58975, 58975, 60517, 1245, -1000, 522, -1000, 2273, -507,
	21922, -1000, -1000, -1000, 861, 219, 37386, 1046, 1046, 239,
	-1000, 1359, 1359, 23476, -1000, -1000, -1000, -1000, -1000, -1000,
	979, 2991, 578, 2273, -1000, 2200, 402, -1000, -1000, -1000,
	2887, 28904, -1000, -1000, 2273, 2273, 60517, 2089, 1974, -1000,
	978, -1000, 1557, 2187, 161, 128, -1000, -1000, -1000, -1000,
	1359, -1000, 1591, 756, 1388, -1000, 821, -1000, -1000, -1000,
	-1000, 2683, 205, -1000, -1000, -1000, 855, 861, -1000, -1000,
	861, -1000, -1000, -1000, -1000, 1891, -1000, 1891, -1000, -1000,
	-1000, -1000, -1000, 1482, -1000, -1000, -1000, -1000, 1463, -1000,
	-1000, 1454, -1000, -1000, 3005, 2405, 491, -1000, -1000, 1148,
	1877, -1000, -1000, 2698, 1148, 1148, 58975, -1000, -1000, 2097,
	2841, -1000, 3, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-540, 158, 593, -1000, -1000, -1000, 5303, 58975, 1972, -1000,
	341, -1000, 2081, -1000, 58975, -1000, 1970, 2324, 58975, 58975,
	-1000, -1000, -1000, 58975, 2273, -1000, -1000, -1000, -1000, 900,
	2822, 296, -1000, -1000, -316, -1000, -1000, 358, 341, 59746,
	58975, 1053, -1000, -1000, -1000, -1000, -1000, -541, 1960, 882,
	60517, 60517, 60517, 60517, 60517, 60517, 935, -1000, -1000, 152,
	-1000, 330, -1000, 323, -1000, -1000, 1873, -1000, -1000, -1000,
	2703, -1000, 323, -1000, -1000, -1000, -1000, -1000, 481, 851,
	-1000, 60517, 60517, 1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1264, -1000, -1000, 1264, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2799, 60517, 33, -503,
	-1000, -499, 23476, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1490, 884, 1662, 25807, 25807, 2276, 2276, 25807, -1000, -1000,
	-1000, 1040, 1040, 36615, -1000, 25807, 23476, -1000, -1000, 23476,
	23476, 23476, 1217, -1000, 23476, 1574, -1000, 23476, -1000, -284,
	1721, 1611, 1611, 1611, 1611, -284, -284, -284, -284, -284,
	-284, -284, -284, -284, -284, 2199, -1000, 23476, 23476, 23476,
	1696, 761, -1000, -1000, -1000, -284, 23476, -1000, -1000, 3008,
	-1000, 23476, -1000, 36615, 23476, 23476, 23476, -1000, -1000, -1000,
	23476, 23476, -1000, -1000, 23476, -1000, 23476, -1000, -1000, -1000,
	-1000, -1000, -1000, 23476, -1000, 23476, -1000, -1000, -1000, 23476,
	-1000, 23476, -1000, -1000, 23476, -1000, 23476, -1000, 23476, -1000,
	23476, -1000, 23476, -1000, 23476, -1000, 23476, -1000, 23476, -1000,
	23476, -1000, 23476, -1000, 23476, -1000, 23476, -1000, 23476, -1000,
	23476, -1000, 23476, -1000, 23476, -1000, 23476, -1000, 23476, -1000,
	-1000, -1000, 23476, -1000, 23476, -1000, 23476, -1000, -1000, 23476,
	-1000, 23476, -1000, 23476, -1000, 23476, 23476, -1000, 23476, 23476,
	23476, -1000, 23476, 23476, 23476, 23476, -1000, -1000, -1000, -1000,
	23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476, 23476,
	-1000, -1000, -1000, -1000, -1000, -1000, 23476, -1000, 43554, 58,
	-284, 1394, 58, 1394, 25030, 994, 963, 24253, -1000, 23476,
	17257, -1000, -1000, -1000, -1000, -1000, 23476, 23476, 23476, 23476,
	23476, 23476, -1000, -1000, -1000, 23476, 23476, -1000, 23476, -1000,
	23476, -1000, -1000, -1000, -1000, -1000, 1068, -1000, 869, 868,
	1005, 58975, -1000, -1000, -1000, -1000, 2184, -1000, 2906, -1000,
	2617, 2612, 3003, 2991, 22699, -1000, 32760, 60517, 60517, 395,
	60517, 383, 862, 2440, -1000, 2391, 2391, 2391, -1000, 2857,
	-1000, 2319, 1548, -1000, -1000, -1000, -1000, -1000, -413, -1000,
	2657, 2779, 1046, 1046, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 14141, 2890, 23476, 2438, 59746, 2273, -1000, 30447, -1000,
	-1000, 58975, 59746, 32760, 32760, 32760, 32760, 32760, -1000, 2636,
	2583, 2562, 2561, -1000, 2843, 2818, 342, 60517, -1000, 1791,
	1947, -1000, 23476, 35073, 2114, 32760, -1000, -1000, 32760, 60517,
	13362, -1000, -1000, 27, 34, -1000, -1000, -1000, -1000, 1480,
	-1000, -1000, 1250, 2885, 2679, -1000, -1000, -1000, -1000, -1000,
	-1000, 1922, -1000, 1918, 2177, 1916, 1910, 421, -1000, 2361,
	2798, 1148, 1148, -1000, 1451, -1000, 1474, 1862, 1838, -1000,
	-1000, -1000, 824, -1000, -1000, -548, 1448, 2315, 2356, 23476,
	2311, 2956, 2135, 58975, -1000, -1000, 59746, -1000, 320, -1000,
	491, 58975, -1000, -1000, -1000, 748, 60517, -1000, 9787, -1000,
	-1000, -1000, 341, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	60517, 2369, -1000, -1000, -1000, -1000, -1000, 353, 347, 1823,
	-1000, 319, 1817, -1000, -1000, 319, -1000, 60517, 983, 2405,
	60517, -1000, -1000, -1000, 1313, 1313, -1000, -1000, 2795, -1000,
	1474, 1611, 25807, 25807, -1000, 1057, -1000, -1000, 494, -253,
	2306, 2306, -1000, 2306, 2308, -1000, 2306, 275, 2306, 255,
	2306, -1000, -1000, 1696, 1696, -1000, 1721, 2345, 1770, 2990,
	-1000, 1359, 23476, 2984, -1000, -1000, -284, -284, -284, -284,
	-284, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -68, 2978, 2962, 1611, -1000, 2305, 2299, -1000, 1611,
	23476, 1611, 1696, 2329, 1611, 1611, 1611, 1611, 1611, 1611,
	1611, 1611, 1611, 1611, 1611, 1611, 2320, 2268, 2256, 2252,
	2243, 2234, 2223, 2216, 2205, 2201, 2155, 2136, 2126, 2121,
	2115, 2111, 1611, 1611, 2107, 1611, 2074, 2046, -1000, 1359,
	1721, 2812, 1721, 1611, 1611, 2777, 279, 1611, 1900, 1900,
	1900, 1900, 1900, 1721, 1721, 1721, 1721, 1611, 58975, -1000,
	-284, -1000, -1000, -335, -339, -1000, 1696, -284, 2176, 25807,
	1611, 25807, 25807, 25807, 1611, 1696, -1000, 2042, 2037, 2550,
	1966, 1611, 1932, 1611, 1611, 1611, 1962, -1000, 2921, 2273,
	2921, 2273, 2921, 1870, 1502, 60517, -1000, -1000, -1000, -1000,
	2991, 2985, -1000, 2158, 2273, -1000, -1000, -1000, -1000, -1000,
	856, 60517, 60517, 2435, 2432, 2431, -1000, 2075, -1000, -1000,
	219, 648, -1000, 2748, 2779, -1000, 2954, 2653, 2953, -1000,
	-1000, -1000, -1000, -1000, 1359, -1000, 2819, 2128, -1000, 1161,
	2113, -1000, -1000, 21922, 1884, 2611, 972, 1870, 2173, 402,
	2403, 2430, 387, -1000, -1000, 2514, 2558, 2493, 2463, -1000,
	2547, -1000, -1000, -1000, 2535, 2513, -1000, 2511, 2494, -1000,
	-1000, 2554, 2286, -1000, 1920, 751, 32760, 2163, 2163, -1000,
	968, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1337, 9787,
	3029, -1000, 1811, -1000, 1564, 220, 1442, -1000, -1000, 1148,
	1148, -1000, 1268, 1266, -1000, 60517, 2293, -1000, 861, 1809,
	861, 1432, -1000, -1000, 1426, -1000, -1000, -1000, -1000, 2300,
	2593, -1000, -1000, -1000, -1000, 401, 2291, 2947, -1000, 23476,
	2288, 1160, 2731, 58975, 58975, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 857, 1148, -518, 484,
	483, 1148, 1148, 1148, -549, -1000, -1000, 1857, 1835, -1000,
	-234, -1000, 23476, -1000, -1000, -1000, -1000, -1000, 1465, 1465,
	1795, 1784, 1765, -1000, 2286, -190, 58975, 58975, 58975, 58975,
	-1000, -1000, -1000, 1415, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1057, 1696, 384, -201,
	1696, -1000, -1000, 861, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 23476, -1000, 23476, -1000, 23476, 1359,
	23476, -1000, -1000, -1000, -1000, -1000, 2890, 1756, 23476, 23476,
	-1000, 1425, 1423, -284, 1611, -1000, -1000, -1000, 23476, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 23476, -1000, 23476, -1000, 23476, -1000, 23476, -1000,
	23476, -1000, 23476, -1000, 23476, -1000, 23476, -1000, 23476, -1000,
	23476, -1000, 23476, -1000, 23476, -1000, 23476, -1000, 23476, -1000,
	23476, -1000, 23476, -1000, -1000, 23476, -1000, -1000, -1000, 23476,
	-1000, 23476, -1000, 23476, -1000, -1000, -1000, 23476, 260, 1040,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1696, 750, -1000, -1000, -1000, 3001, -1000, 1696, 23476,
	2276, -1000, 2276, 2276, 2276, -1000, -1000, -1000, 23476, -1000,
	23476, 23476, -1000, 23476, -1000, 23476, -1000, -1000, -1000, -1000,
	23476, 2273, 2670, 42783, 2273, 42783, 2273, 35073, -1000, -1000,
	2985, 2987, 2944, 233, 60517, -1000, -1000, 60517, 60517, 60517,
	-1000, 2628, 2647, 2647, 2748, -1000, 2940, 2937, -1000, 1715,
	2936, 1708, 1252, -1000, 59746, 23476, -1000, 2273, 42012, -1000,
	592, 58975, 2273, -1000, 58975, -1000, 2972, -1000, -1000, 23476,
	2282, -1000, 23476, -1000, -1000, 2503, -1000, -1000, 2484, 2490,
	-1000, 2464, 2474, -1000, -1000, -1000, 2461, -1000, -1000, 2458,
	-1000, 8082, 2991, 2163, -1000, -1000, 1080, -1000, 23476, -1000,
	11335, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1704, 1691, -1000, -1000, 2280, 23476, -1000, -1000, -1000, 1871,
	1836, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 748, -547, 2566, 58975, 1420, -1000, 1831, 2135, 726,
	2273, 1667, 1148, 1148, 1148, 1395, 1389, 42012, 1815, -1000,
	58975, 802, -1000, 748, -1000, -247, -248, 1611, -1000, -1000,
	2879, -1000, 17257, -1000, -1000, 2279, 2386, -1000, -1000, -1000,
	-1000, 2539, -182, -217, -1000, -1000, 1611, 1611, 1611, 1700,
	1696, -1000, 1611, 1611, 1832, 1816, -1000, -1000, 1611, 1611,
	1611, 1611, 1611, 1611, 1611, 1611, 1611, 1611, 1611, 1611,
	1611, 1611, 1611, 1611, 1611, 1611, 1611, 1611, 1721, 1937,
	-1000, 260, 1696, 2429, -1000, -1000, 8082, -1000, -1000, 2972,
	2935, 58, -1000, -1000, 376, 58, 1359, 1171, 1696, 1696,
	1171, 1898, 1611, 1882, 1876, 1611, 1611, 35844, -1000, 2933,
	2932, 1793, -1000, -1000, 42783, 1793, 42783, 1068, 2987, -303,
	23476, 23476, 1696, 2139, -1000, 58975, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2624, 1375, -1000, -1000, -1000, -1000, 1664,
	1659, -1000, 1656, -1000, 3023, -1000, 1359, -1000, 2273, 2273,
	-1000, 966, 2113, -1000, 2890, 1359, 58975, 1359, -1000, -1000,
	-1000, 2448, -1000, -1000, 2418, -1000, -1000, 172, 2972, -1000,
	1611, -1000, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273,
	2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273,
	2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273,
	2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273,
	2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273,
	2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273,
	2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273,
	2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273,
	2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273,
	2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273,
	2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273,
	2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273,
	2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273, 2273,
	2273, 2273, 2273, -1000, -1000, 58975, 2168, -1000, -1000, 1801,
	157, -1000, 1794, 2135, -1000, -1000, 952, -1000, 23476, -1000,
	42012, 1650, 1633, -1000, -1000, -1000, -1000, -549, -1000, -1000,
	-1000, -1000, -1000, -1000, 394, 2132, -1000, 1133, 58975, 60517,
	-1000, 2529, -1000, -1000, -1000, -1000, 23476, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 23476, -1000, 1696, 2426, -1000, -343,
	-1000, -474, 23476, -284, -1000, -1000, -284, -1000, -1000, -1000,
	-1000, -1000, 23476, -1000, -1000, 23476, -1000, 23476, -1000, -1000,
	1793, -1000, -1000, -1000, 41241, -1000, 1793, -1000, 1793, -1000,
	-303, -1000, 2130, -1000, 58975, 1359, 333, 8734, 233, 6312,
	-1000, 1368, -1000, -1000, -1000, -1000, -1000, 59746, 58975, 2113,
	58975, -1000, -1000, 1781, -1000, -1000, 1696, 2273, 2890, -1000,
	1779, -1000, -1000, 2278, 2356, -1000, -1000, -1000, 21145, -1000,
	-1000, -1000, -1000, -1000, 314, -185, 17257, 12583, 1762, -1000,
	-186, 1611, 1721, -1000, -488, -1000, -1000, -1000, -1000, 295,
	-1000, -1000, 2123, -1000, -1000, 1867, 1821, 1713, -1000, -1000,
	-1000, -1000, -1000, -1000, -303, -1000, -1000, 2878, -1000, -250,
	-1000, -563, -1000, -1000, 8734, 23476, 31989, 40470, -1000, -1000,
	-1000, -1000, 2119, 1695, -1000, -1000, -1000, 35073, 58204, -1000,
	-171, 478, 23476, 2275, 1696, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 942, -1000, -1000, -1000, 2369,
	-207, -1000, -1000, -1000, 338, -508, -322, -326, 25807, -1000,
	23476, -1000, 23476, -1000, 23476, -1000, 58975, 2273, -1000, -1000,
	1216, 8734, -1000, -563, 1469, 5739, 917, 908, -1000, -1000,
	-1000, 2802, -1000, -1000, 2587, -1000, -1000, -1000, 1638, -1000,
	4430, -355, 2422, -1000, -96, -1000, -1000, -1000, 1286, 1630,
	-1000, 1374, -1000, -1000, -1000, -1000, 2027, 58975, -1000, 16478,
	-190, -228, 1258, -1000, -1000, -1000, -1000, -1000, 2276, 1570,
	1439, 1611, -1000, 58975, -1000, -1000, 8734, 2816, 2920, 2919,
	-1000, 235, 235, 1571, -1000, -1000, 58204, -342, 1053, 8082,
	-1000, 2411, 2395, 3007, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -556, 1618, -1000, -1000, -1000, 338, -331, -1000, 23476,
	-1000, 23476, -1000, 1696, 5432, -1000, 9787, 29675, 1067, -1000,
	1128, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2851, 172, -1000,
	3011, -1000, 2992, 1073, 1073, -1000, 1367, -556, -1000, -1000,
	-1000, 1611, 1611, -1000, 1222, 1219, -1000, 23476, 23476, -1000,
	7390, -1000, -1000, -1000, -1000, 923, -1000, -1000, -1000, -1000,
	9461, -358, -1000, -1000, -1000, -1000, -1000, 811, 1447, -1000,
	-1000, -1000, -1000, -1000, 1209, 8734, -1000, 1396, 1611, -1000,
	29675, -1000, -1000, 8082, -1000, -1000, -1000, 841, 8734, 8734,
	-1000, -1000, 264, -1000, 8734, 264, -1000, -1000,
}

var yyPgo = [...]int16{
	0, 3652, 3641, 45, 11, 55, 54, 3640, 3054, 3639,
	3638, 3048, 3631, 207, 3628, 3627, 3626, 3624, 3622, 3620,
	206, 202, 200, 3619, 3618, 3617, 3615, 3614, 3609, 3608,
	3600, 3597, 66, 108, 16, 118, 248, 219, 3595, 3591,
	77, 185, 220, 3589, 3586, 3584, 3583, 3580, 133, 228,
	100, 98, 215, 3576, 3575, 89, 3574, 3573, 3572, 3571,
	3570, 6, 14, 39, 38, 3569, 3568, 3567, 25, 3566,
	212, 208, 199, 1238, 3565, 225, 126, 61, 3564, 3563,
	3562, 3561, 8, 4, 3560, 10, 3559, 9, 3557, 3556,
	3555, 3554, 3552, 3551, 3550, 3549, 3548, 3546, 3545, 3544,
	3541, 3540, 3539, 3537, 3534, 299, 3531, 3524, 46, 3523,
	92, 3472, 3471, 3470, 3468, 3467, 19, 3466, 3464, 26,
	58, 72, 3462, 3461, 59, 3459, 3457, 3456, 3455, 3454,
	31, 3453, 41, 3452, 57, 3450, 3449, 137, 3448, 3447,
	3442, 56, 3440, 3439, 3437, 43, 191, 3429, 3426, 162,
	3424, 3423, 3422, 190, 221, 3417, 2591, 3413, 112, 3410,
	3409, 3408, 188, 192, 218, 3407, 119, 3405, 3396, 3393,
	3392, 145, 3390, 3389, 3416, 3388, 3385, 15, 18, 140,
	3382, 3379, 205, 7, 70, 3374, 37, 40, 3373, 3372,
	17, 88, 3369, 123, 3364, 3362, 113, 74, 3360, 106,
	115, 3358, 3357, 23, 13, 3356, 1, 3, 2, 76,
	3354, 3352, 132, 3351, 3350, 3346, 105, 3344, 3341, 6094,
	3338, 104, 152, 120, 82, 3337, 193, 62, 3332, 3331,
	3330, 3328, 3327, 3324, 65, 3322, 3321, 3319, 160, 184,
	131, 3318, 3317, 159, 157, 144, 79, 147, 3315, 176,
	3314, 156, 94, 3313, 197, 3312, 3307, 158, 154, 3304,
	3302, 71, 186, 224, 3300, 117, 143, 134, 149, 116,
	148, 3299, 3298, 3296, 101, 80, 3294, 3293, 3292, 3290,
	198, 3289, 3287, 84, 3286, 99, 3284, 194, 3279, 153,
	73, 3272, 204, 180, 3270, 85, 187, 3269, 3263, 3256,
	67, 128, 78, 47, 3248, 179, 183, 141, 177, 3238,
	3237, 87, 3234, 3232, 3228, 75, 216, 324, 3224, 3222,
	251, 203, 166, 150, 102, 3220, 217, 3219, 3217, 3216,
	28, 5255, 7335, 213, 42, 181, 3215, 3207, 8348, 29,
	81, 36, 3205, 209, 3203, 155, 3201, 3200, 3199, 229,
	227, 121, 182, 69, 3197, 3195, 3194, 3193, 27, 3192,
	3191, 3190, 3189, 3186, 3185, 53, 52, 51, 103, 222,
	64, 22, 110, 189, 173, 86, 3183, 3182, 3179, 136,
	97, 3175, 178, 175, 138, 146, 3174, 210, 167, 139,
	3173, 83, 50, 3172, 3168, 3167, 3159, 122, 3154, 3147,
	3130, 3129, 174, 168, 135, 95, 3128, 96, 111, 171,
	169, 68, 3125, 63, 3123, 3122, 49, 214, 48, 3119,
	3116, 3114, 44, 3109, 30, 125, 127, 3101, 6829, 3099,
	32, 241, 172, 3098, 3095, 12, 20, 24, 3094, 3092,
	3091, 3088, 151, 3087, 3085, 3082, 3081, 35, 60, 34,
	33, 124, 161, 90, 3078, 3073, 165, 3072, 3070, 0,
	1387, 142, 3046, 223,
}

var yyR1 = [...]int16{
	0, 458, 7, 7, 11, 9, 9, 8, 8, 8,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 8, 8, 82, 82, 82, 82, 82, 82, 82,
	66, 66, 67, 67, 68, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 59, 59, 59,
	60, 60, 62, 62, 65, 65, 63, 64, 61, 61,
	61, 61, 61, 170, 170, 273, 273, 273, 83, 81,
	81, 84, 84, 85, 85, 86, 86, 89, 89, 88,
	88, 87, 295, 428, 293, 293, 31, 100, 40, 40,
	39, 39, 42, 42, 41, 34, 34, 34, 35, 35,
	35, 35, 35, 35, 35, 35, 36, 36, 36, 36,
	36, 32, 32, 32, 32, 33, 33, 33, 33, 33,
	38, 38, 18, 19, 37, 37, 37, 20, 20, 135,
	135, 21, 22, 22, 22, 22, 461, 461, 214, 214,
	212, 212, 213, 213, 300, 300, 23, 304, 304, 306,
	306, 306, 306, 294, 294, 294, 24, 24, 305, 305,
	307, 307, 307, 310, 310, 310, 310, 352, 352, 352,
	25, 25, 25, 25, 25, 25, 155, 430, 430, 429,
	424, 424, 423, 423, 422, 427, 427, 426, 426, 425,
	45, 44, 46, 46, 46, 47, 56, 56, 56, 56,
	57, 58, 431, 431, 393, 74, 74, 73, 73, 73,
	73, 73, 73, 75, 75, 71, 71, 70, 70, 72,
	72, 395, 395, 381, 381, 394, 394, 394, 394, 394,
	394, 394, 380, 380, 167, 167, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 446, 446, 446, 446, 445, 445, 272,
	272, 272, 272, 272, 272, 272, 272, 272, 178, 178,
	190, 190, 190, 190, 190, 190, 176, 176, 177, 175,
	175, 175, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 183, 450, 450,
	450, 450, 450, 450, 450, 450, 450, 450, 450, 450,
	450, 450, 450, 450, 450, 450, 450, 450, 450, 450,
	450, 450, 450, 450, 450, 450, 450, 450, 450, 450,
	450, 450, 450, 450, 450, 450, 450, 450, 450, 450,
	189, 189, 184, 184, 184, 186, 186, 185, 185, 185,
	187, 187, 447, 447, 447, 447, 358, 358, 358, 358,
	361, 361, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 360, 360, 360, 360, 360, 360, 360, 362, 362,
	362, 362, 362, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	364, 364, 364, 364, 364, 364, 364, 364, 379, 379,
	368, 368, 373, 373, 374, 374, 375, 375, 375, 376,
	376, 376, 377, 377, 370, 370, 370, 370, 370, 370,
	370, 370, 370, 372, 372, 371, 371, 371, 382, 407,
	407, 406, 406, 404, 404, 404, 404, 404, 404, 404,
	404, 391, 391, 401, 401, 401, 401, 401, 390, 390,
	386, 386, 386, 387, 387, 388, 388, 385, 385, 389,
	389, 403, 403, 402, 402, 383, 383, 384, 384, 409,
	448, 448, 448, 448, 448, 449, 449, 410, 438, 440,
	440, 440, 439, 439, 436, 437, 435, 435, 435, 435,
	435, 110, 110, 110, 324, 324, 325, 325, 399, 399,
	398, 398, 398, 400, 400, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 319, 319, 319, 434,
	434, 434, 434, 434, 434, 433, 433, 433, 396, 396,
	396, 396, 432, 432, 76, 76, 252, 252, 451, 451,
	453, 453, 453, 53, 53, 53, 53, 53, 53, 52,
	52, 52, 48, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 48, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 48, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 48, 54, 54, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 137, 137, 138, 138, 138, 138, 140, 140, 140,
	412, 412, 77, 77, 3, 3, 202, 204, 205, 205,
	203, 203, 203, 203, 203, 203, 79, 79, 78, 78,
	207, 206, 208, 208, 208, 1, 1, 2, 2, 4,
	4, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 417, 417, 417, 417, 417, 417, 417,
	417, 417, 417, 378, 378, 378, 411, 411, 413, 139,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 143,
	142, 142, 141, 144, 144, 144, 144, 144, 144, 144,
	144, 415, 415, 415, 80, 80, 416, 365, 366, 367,
	5, 6, 392, 414, 151, 151, 27, 43, 43, 28,
	28, 28, 28, 28, 29, 29, 90, 93, 93, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 329, 329, 318, 318, 327,
	327, 317, 317, 343, 343, 343, 320, 320, 320, 321,
	321, 444, 444, 444, 313, 313, 92, 92, 92, 344,
	344, 344, 344, 95, 95, 454, 454, 455, 455, 456,
	456, 456, 96, 97, 97, 347, 347, 348, 348, 98,
	99, 111, 111, 111, 111, 111, 112, 112, 112, 112,
	112, 112, 136, 136, 136, 13, 13, 13, 13, 107,
	107, 107, 12, 12, 14, 94, 94, 101, 441, 441,
	442, 443, 443, 443, 443, 102, 104, 30, 30, 30,
	30, 30, 30, 161, 161, 149, 149, 149, 149, 149,
	149, 149, 149, 149, 149, 149, 149, 156, 156, 156,
	150, 150, 462, 105, 106, 106, 154, 154, 154, 147,
	147, 147, 153, 153, 153, 15, 15, 16, 298, 298,
	17, 17, 160, 160, 159, 159, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 157, 157, 158,
	158, 158, 158, 336, 336, 336, 335, 335, 196, 196,
	198, 197, 197, 199, 199, 200, 200, 200, 200, 250,
	250, 222, 222, 290, 290, 291, 291, 289, 289, 297,
	297, 292, 292, 292, 292, 301, 301, 201, 201, 201,
	201, 209, 209, 210, 210, 211, 211, 346, 346, 341,
	341, 341, 340, 340, 215, 215, 215, 215, 215, 215,
	215, 215, 215, 217, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	218, 218, 220, 220, 219, 219, 221, 226, 226, 225,
	225, 223, 223, 223, 223, 223, 223, 224, 224, 224,
	224, 227, 227, 174, 174, 174, 174, 174, 174, 174,
	174, 452, 452, 188, 188, 188, 188, 188, 188, 188,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 280, 280, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 255, 255, 254, 254, 113, 113, 113,
	114, 114, 115, 115, 115, 115, 115, 116, 116, 116,
	116, 116, 116, 116, 118, 118, 117, 117, 241, 241,
	333, 333, 119, 120, 120, 121, 121, 124, 124, 123,
	122, 122, 128, 128, 125, 125, 127, 127, 126, 129,
	129, 130, 131, 131, 314, 314, 228, 228, 237, 237,
	237, 237, 229, 229, 230, 230, 230, 230, 230, 230,
	238, 238, 238, 249, 239, 239, 235, 235, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 193, 193, 193, 193, 260, 260, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 180, 180, 180,
	180, 180, 180, 181, 181, 194, 194, 194, 194, 195,
	195, 195, 195, 195, 195, 195, 354, 354, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 463, 463, 369, 369,
	369, 236, 236, 236, 236, 236, 152, 152, 152, 152,
	152, 351, 351, 351, 355, 355, 355, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 356, 356, 258, 258, 148, 148, 256, 256,
	257, 259, 259, 251, 251, 251, 251, 253, 253, 232,
	232, 232, 261, 261, 357, 357, 262, 262, 132, 133,
	133, 134, 134, 263, 263, 265, 264, 264, 266, 267,
	267, 267, 268, 268, 269, 269, 269, 55, 55, 55,
	55, 55, 50, 50, 50, 50, 51, 51, 51, 51,
	163, 163, 164, 164, 164, 166, 166, 165, 165, 108,
	108, 109, 109, 109, 421, 421, 420, 420, 418, 419,
	419, 419, 419, 171, 171, 172, 173, 173, 173, 168,
	168, 169, 169, 287, 287, 287, 287, 287, 287, 287,
	270, 270, 270, 270, 299, 299, 296, 296, 278, 278,
	278, 274, 274, 276, 276, 276, 277, 277, 277, 275,
	284, 284, 286, 286, 285, 285, 281, 281, 282, 282,
	283, 283, 283, 279, 279, 231, 231, 231, 231, 231,
	315, 315, 288, 288, 288, 288, 345, 345, 345, 302,
	302, 242, 242, 243, 243, 247, 247, 246, 246, 244,
	245, 248, 248, 192, 303, 303, 311, 308, 308, 309,
	309, 337, 337, 337, 312, 312, 326, 326, 322, 322,
	323, 323, 316, 316, 328, 328, 328, 103, 240, 240,
	408, 408, 405, 332, 332, 334, 334, 338, 338, 342,
	342, 339, 339, 10, 457, 457, 457, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 331, 459, 460, 349, 350, 350,
	350,
}

var yyR2 = [...]int8{
	0, 1, 1, 3, 2, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 8, 4, 6, 5, 3,
	0, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 1, 1, 1, 1, 3, 1, 1, 1,
	1, 2, 1, 0, 1, 0, 4, 2, 2, 1,
	1, 0, 1, 1, 2, 0, 2, 0, 1, 2,
	1, 4, 1, 1, 1, 1, 2, 3, 2, 3,
	0, 1, 3, 1, 4, 3, 3, 4, 3, 2,
	3, 4, 3, 4, 2, 7, 1, 3, 3, 3,
	3, 1, 2, 1, 1, 3, 2, 3, 3, 2,
	3, 3, 5, 7, 10, 9, 1, 7, 8, 1,
	1, 10, 11, 9, 8, 8, 1, 1, 1, 3,
	1, 3, 1, 3, 0, 4, 3, 1, 3, 3,
	3, 3, 3, 1, 1, 2, 5, 4, 1, 3,
	3, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	2, 2, 1, 6, 5, 2, 2, 0, 2, 1,
	0, 2, 1, 3, 3, 0, 1, 1, 3, 3,
	10, 6, 6, 8, 7, 4, 7, 8, 8, 8,
	5, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 1, 0,
	2, 2, 3, 3, 2, 3, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 3, 3, 3, 2, 2, 3, 2,
	2, 2, 2, 1, 1, 1, 1, 5, 2, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 1, 3, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 3, 3, 2, 2, 2,
	1, 2, 2, 0, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 0, 1, 0, 1, 0, 2, 0, 2,
	0, 2, 2, 0, 1, 5, 1, 3, 7, 1,
	3, 3, 1, 2, 2, 2, 5, 5, 5, 6,
	8, 5, 5, 4, 4, 4, 6, 5, 5, 5,
	2, 2, 2, 2, 3, 3, 3, 4, 3, 3,
	1, 3, 5, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 3, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 6,
	10, 7, 5, 5, 5, 5, 7, 5, 5, 5,
	6, 6, 5, 5, 7, 7, 5, 5, 5, 5,
	6, 0, 6, 5, 6, 4, 5, 0, 8, 9,
	0, 3, 0, 1, 0, 3, 8, 4, 1, 3,
	3, 6, 7, 7, 8, 4, 0, 1, 0, 1,
	3, 3, 1, 1, 2, 1, 1, 0, 2, 0,
	2, 5, 3, 7, 4, 4, 4, 4, 3, 3,
	3, 7, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 0, 2, 2, 1, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 3,
	1, 3, 3, 0, 2, 2, 2, 2, 2, 2,
	2, 4, 4, 3, 0, 1, 4, 3, 4, 4,
	3, 3, 3, 2, 1, 3, 3, 3, 5, 7,
	7, 6, 5, 5, 3, 2, 4, 5, 5, 3,
	3, 7, 3, 3, 3, 3, 4, 7, 5, 2,
	4, 4, 4, 4, 4, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 2, 4, 4, 4,
	4, 4, 2, 3, 3, 3, 3, 3, 5, 2,
	3, 3, 2, 3, 4, 4, 4, 3, 4, 4,
	5, 3, 5, 3, 5, 0, 1, 0, 1, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	2, 0, 1, 1, 1, 1, 2, 1, 3, 1,
	1, 1, 1, 1, 3, 0, 1, 1, 3, 3,
	2, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 4, 4, 4, 2, 2, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 4, 3, 3, 6,
	4, 7, 6, 1, 3, 2, 2, 2, 2, 1,
	1, 1, 3, 2, 1, 1, 1, 0, 1, 1,
	0, 3, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 1, 5, 5, 4, 0, 2,
	4, 4, 0, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 1, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 3, 1, 1,
	2, 3, 7, 0, 3, 0, 1, 1, 3, 1,
	3, 1, 1, 3, 3, 1, 3, 4, 4, 4,
	3, 2, 4, 0, 1, 0, 2, 0, 1, 0,
	1, 2, 1, 1, 1, 2, 2, 3, 3, 4,
	2, 2, 3, 1, 2, 3, 3, 4, 3, 4,
	4, 5, 2, 3, 3, 4, 3, 4, 4, 5,
	2, 2, 2, 1, 1, 3, 3, 0, 1, 1,
	2, 6, 5, 6, 6, 5, 5, 0, 2, 3,
	3, 0, 2, 3, 3, 3, 2, 3, 1, 3,
	6, 1, 1, 3, 4, 3, 4, 4, 4, 1,
	3, 4, 5, 6, 3, 4, 5, 6, 3, 4,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 5,
	5, 3, 3, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 3, 1, 1, 1, 2, 2, 2, 2,
	1, 1, 2, 7, 7, 6, 6, 2, 2, 5,
	6, 3, 3, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 4, 2, 4, 0, 1, 2, 5, 0, 3,
	0, 1, 4, 4, 2, 1, 0, 0, 1, 1,
	2, 2, 1, 1, 2, 2, 0, 1, 1, 1,
	1, 5, 1, 3, 0, 3, 1, 1, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 6, 4, 4,
	8, 8, 6, 8, 6, 5, 4, 10, 2, 2,
	1, 2, 2, 2, 2, 2, 5, 6, 6, 6,
	6, 6, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 8, 4, 8, 8, 6, 5, 4, 4,
	4, 5, 7, 4, 4, 7, 4, 4, 6, 6,
	6, 8, 6, 6, 4, 4, 3, 4, 6, 6,
	4, 4, 6, 4, 6, 4, 4, 4, 4, 4,
	4, 6, 4, 6, 4, 4, 4, 6, 4, 6,
	4, 4, 6, 4, 6, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 4, 4, 6, 4, 6, 4,
	8, 6, 4, 4, 6, 4, 6, 8, 4, 6,
	8, 4, 4, 6, 8, 6, 4, 6, 6, 8,
	10, 7, 8, 8, 9, 4, 4, 4, 4, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 4,
	4, 4, 4, 4, 4, 6, 4, 6, 5, 9,
	6, 9, 8, 6, 8, 8, 8, 6, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 6, 8,
	10, 12, 14, 6, 8, 8, 10, 12, 14, 6,
	8, 10, 12, 6, 8, 4, 4, 3, 4, 6,
	6, 4, 6, 4, 6, 8, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 2,
	3, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 0, 5, 5, 2, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 2,
	1, 1, 0, 1, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 1, 3, 5, 1, 1, 1,
	2, 2, 0, 4, 0, 2, 0, 2, 2, 1,
	3, 0, 1, 0, 1, 3, 1, 3, 2, 0,
	1, 1, 0, 1, 2, 4, 4, 0, 2, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	0, 1, 3, 3, 3, 0, 3, 1, 1, 0,
	4, 0, 1, 1, 0, 1, 1, 3, 3, 0,
	1, 1, 1, 0, 1, 3, 1, 3, 2, 1,
	1, 0, 1, 2, 3, 4, 2, 3, 4, 4,
	9, 3, 5, 2, 3, 1, 1, 1, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 2, 1, 2, 3, 3, 0, 2, 1, 2,
	3, 4, 3, 0, 1, 3, 1, 6, 5, 4,
	1, 1, 1, 3, 3, 5, 0, 2, 5, 0,
	5, 1, 3, 1, 3, 1, 3, 1, 2, 3,
	4, 1, 1, 1, 1, 3, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}

var yyChk = [...]int16{
	-1000, -458, -7, -11, -105, -462, 789, -9, -8, -32,
	-18, -19, -20, -21, -22, -23, -24, -25, -26, -27,
	-28, -29, -90, -93, -91, -92, -95, -96, -97, -98,
	-99, -12, -14, -94, -30, -31, -100, -101, -102, -103,
	-104, -15, -16, -17, -10, -35, -34, -33, 12, 13,
	-135, -39, 34, -44, -45, -56, -46, -57, -47, 243,
	-58, 245, 244, 293, 246, 411, 286, 83, 344, 345,
	347, 348, 349, 350, -136, 741, 291, 292, 248, 38,
	50, 35, 36, 39, 252, 299, 300, 251, 145, -36,
	-40, 11, -459, 14, 513, 242, 288, 287, 30, -37,
	623, 95, -38, 62, -106, -11, -287, -270, 25, 35,
	31, -269, -265, -154, -270, 23, 21, 10, -105, -105,
	-105, 15, 16, -105, -393, -395, 95, 174, 95, -290,
	95, -74, -73, -71, -70, -72, -75, 33, -53, -54,
	-417, -52, -49, 247, 244, 303, 135, 136, 293, 294,
	295, 246, 276, 292, 296, 291, 312, -48, 90, 35,
	623, 626, -400, 243, 249, 250, 245, 514, 138, 137,
	84, -397, 406, 657, 759, -75, 761, 110, 113, 760,
	49, 266, 762, 763, 764, 664, 765, 275, 766, 767,
	768, 769, 775, 706, 776, 777, 778, 139, 10, -105,
	-342, -338, 100, -331, 620, 278, 655, 467, 656, 328,
	90, 46, 41, 559, 630, 402, 406, 657, 544, 759,
	412, 344, 362, 356, 549, 550, 551, 385, 377, 621,
	658, 631, 331, 279, 316, 462, 753, 375, 149, 761,
	455, 335, 659, 294, 413, 414, 465, 660, 415, 110,
	347, 452, 774, 334, 661, 772, 113, 760, 352, 459,
	461, 460, 88, 543, 56, 756, 466, 339, 49, 289,
	472, 473, 373, 251, 369, 762, 317, 662, 633, 310,
	138, 135, 781, 38, 365, 55, 32, 771, 137, 54,
	763, 165, 663, 764, 664, 417, 392, 747, 53, 418,
	295, 665, 93, 300, 625, 340, 755, 419, 564, 366,
	420, 327, 770, 248, 666, 338, 736, 728, 729, 255,
	421, 422, 748, 397, 393, 398, 566, 667, 668, 444,
	548, 423, 732, 733, 256, 788, 57, 669, 670, 749,
	136, 671, 87, 765, 89, 360, 361, 672, 325, 277,
	569, 570, 446, 389, 526, 127, 533, 534, 120, 121,
	529, 122, 535, 123, 128, 536, 537, 538, 527, 124,
	117, 528, 539, 540, 390, 391, 125, 541, 119, 118,
	530, 532, 126, 542, 275, 37, 424, 622, 329, 63,
	333, 304, 447, 51, 395, 785, 50, 743, 571, 673,
	746, 388, 384, 523, 722, 58, 674, 675, 676, 677,
	545, 766, 387, 359, 383, 780, 179, 322, 457, 518,
	546, 767, 67, 250, 400, 399, 401, 458, 311, 443,
	380, 678, 679, 680, 282, 91, 681, 370, 24, 682,
	683, 425, 318, 684, 61, 685, 686, 450, 292, 687,
	59, 768, 44, 688, 297, 782, 769, 689, 690, 691,
	742, 692, 299, 693, 427, 694, 730, 731, 426, 394,
	396, 572, 306, 428, 411, 724, 253, 624, 695, 341,
	364, 296, 773, 696, 283, 560, 561, 562, 563, 754,
	568, 567, 298, 303, 291, 451, 284, 697, 698, 699,
	700, 701, 332, 721, 702, 703, 348, 628, 775, 524,
	48, 463, 704, 705, 706, 707, 708, 326, 321, 445,
	454, 66, 92, 408, 709, 710, 752, 358, 353, 42,
	711, 712, 713, 714, 319, 99, 504, 506, 507, 508,
	509, 510, 505, 512, 715, 345, 60, 776, 777, 778,
	313, 779, 552, 553, 554, 555, 12, 606, 589, 617,
	590, 607, 591, 600, 592, 608, 616, 618, 573, 581,
	574, 582, 612, 595, 609, 601, 594, 593, 615, 598,
	602, 575, 583, 613, 599, 576, 584, 577, 585, 578,
	586, 611, 610, 603, 614, 579, 587, 605, 580, 588,
	604, 596, 597, 456, 475, 786, 787, 547, 464, 430,
	725, 139, 323, 324, 52, 381, 305, 716, 336, 717,
	371, 372, 520, 521, 386, 357, 382, 146, 739, 346,
	355, 737, 307, 431, 525, 293, 718, 453, 320, 403,
	131, 354, 409, 337, 629, 565, 312, 432, 751, 627,
	65, 556, 557, 379, 376, 314, 558, 719, 404, 741,
	433, 267, 308, 309, 720, 738, 434, 435, 330, 436,
	437, 438, 439, 440, 442, 343, 441, 740, 734, 735,
	315, 503, 626, 351, 374, 410, 485, 486, 487, 488,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 522, 265, -105, 265, -219, -338,
	-156, 743, 745, 194, -308, 414, -327, 416, 429, 424,
	434, 422, -318, 425, 427, 306, -444, 444, 265, 431,
	242, 417, 426, 435, 436, 330, 442, 437, 343, 441,
	315, 438, 439, 440, -428, 194, 764, 779, 346, 354,
	149, 378, 421, 419, 445, 743, 100, -344, 100, 101,
	102, -331, 346, -347, 351, -332, -428, -331, 349, -105,
	-105, -349, -349, -156, -239, -174, 157, -188, -295, -191,
	101, -179, -182, -233, -234, -235, -236, -189, -253, -293,
	183, 184, 191, 158, -249, -192, 28, 619, 515, 514,
	194, 33, 237, 76, 77, 517, 518, 160, 62, 14,
	480, 481, -190, 470, 471, 482, 476, 477, 543, 545,
	546, 547, 544, 549, 550, 551, 552, 553, 554, 555,
	556, 557, 558, 548, 559, 520, 521, 129, 522, 117,
	119, 118, 127, 128, 523, 524, 525, 375, 571, 572,
	566, 569, 570, 568, 567, 390, 391, 526, 589, 590,
	594, 593, 591, 592, 595, 598, 599, 600, 601, 602,
	603, 605, 604, 596, 597, 574, 573, 575, 576, 577,
	578, 579, 580, 582, 581, 583, 584, 585, 586, 587,
	588, 606, 607, 608, 609, 610, 612, 611, 616, 615,
	613, 614, 618, 617, 527, 528, 120, 121, 122, 123,
	124, 125, 126, 529, 532, 530, 531, 533, 534, 535,
	540, 541, 536, 537, 538, 539, 542, 401, 399, 400,
	396, 395, 394, -115, -128, 646, 645, -129, 467, 472,
	473, 475, -180, -181, -194, -195, -332, -338, 270, 469,
	264, 189, 513, -183, -177, -251, 116, 102, -34, -248,
	468, 478, 479, 483, 474, 484, 632, 634, 649, 650,
	652, 637, 642, 641, 644, 560, 561, 562, 563, 564,
	565, 728, 729, 730, 731, 732, 733, 734, 735, -428,
	-331, 100, -186, -184, -228, 103, 108, 111, 112, 114,
	-450, 289, 371, 372, 130, -459, -244, -245, -185, 105,
	106, 107, 132, 133, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 757, 98, 104, 49,
	430, 430, -219, -105, -105, -105, -105, -457, 760, 624,
	-263, -154, -265, -36, -34, -459, 11, -105, -34, -35,
	-33, -40, -105, -42, 651, -41, -338, -105, 109, -270,
	-287, 15, 66, 177, 47, 55, -299, -296, -295, 100,
	101, -268, -269, -37, -34, -174, 22, 40, 26, -158,
	185, -174, -338, -158, -316, 269, -105, -105, -304, -352,
	346, -306, 445, 743, 444, -294, -309, 100, -293, -308,
	443, 101, -394, 174, -380, -384, -332, 280, -410, 276,
	-219, -403, -402, -332, -459, 27, -289, -332, -70, -71,
	-72, -308, 193, 763, -137, 298, 302, 96, 96, -384,
	-383, -382, -432, 302, 280, -409, -401, 272, 281, -390,
	273, 274, -385, 266, 151, -432, -385, 271, 281, 276,
	280, 302, 302, 139, 302, 139, 302, 302, 302, 302,
	302, 302, 302, 302, 302, 297, -391, 166, -391, 627,
	627, -397, -432, 276, 266, -432, -432, 272, -328, -385,
	268, 27, 268, 37, 37, -391, -391, -391, -308, 193,
	-391, -391, -391, -391, 310, 310, -391, -391, -391, -391,
	-391, -391, -391, -391, -391, -391, -391, -391, -391, -391,
	-391, -391, -391, 265, -431, -163, 441, 330, 469, 264,
	-164, 90, -73, 312, -43, -219, -326, 266, 267, -431,
	306, 299, 323, -219, 238, 265, 746, -320, 174, 18,
	-320, -317, 430, 428, 415, 420, -320, -320, -320, -320,
	313, 413, -386, 266, 37, 277, 430, 313, 413, 313,
	314, 313, 314, 423, 433, 313, -343, 17, 177, 469,
	418, 422, 306, 265, 307, 267, 432, 314, -343, 98,
	-321, 174, 313, 430, 424, 309, -320, -320, -350, -459,
	-334, -332, -330, 247, 40, 156, 27, 29, 159, 194,
	142, 22, 160, 39, 249, 378, 276, 193, 272, 263,
	257, 514, 242, 80, 632, 470, 477, 468, 476, 480,
	516, 517, 469, 416, 254, 33, 16, 634, 30, 287,
	26, 43, 187, 244, 163, 164, 635, 290, 28, 258,
	288, 129, 133, 637, 25, 84, 281, 17, 274, 45,
	19, 638, 639, 81, 20, 73, 270, 269, 177, 266,
	78, 727, 14, 237, 31, 173, 74, 640, 151, 145,
	641, 642, 643, 644, 143, 76, 174, 23, 783, 478,
	479, 35, 744, 619, 301, 189, 82, 64, 745, 157,
	474, 645, 646, 130, 647, 134, 85, 750, 153, 21,
	726, 79, 47, 648, 723, 302, 649, 271, 784, 650,
	448, 651, 175, 245, 513, 77, 176, 757, 652, 758,
	264, 429, 11, 519, 34, 286, 285, 273, 72, 71,
	260, 261, 262, 141, 75, 484, 653, 265, 162, 268,
	144, 132, 259, 10, 150, 36, 15, 83, 86, 481,
	482, 483, 62, 140, 623, 161, 18, 654, 449, 155,
	-428, 746, -350, -350, 313, 355, 34, 101, -454, -455,
	-456, 623, 448, 268, -332, -219, -111, 736, 246, -112,
	742, 40, 253, 146, 37, -161, 430, -149, 194, 764,
	747, 748, 749, 746, 427, 754, 752, 750, 313, 751,
	96, 153, 155, 156, 179, -174, 173, -229, -230, 172,
	166, 167, 168, 169, 170, 171, 178, 177, 157, 159,
	174, -280, 154, 180, 181, 182, 183, 184, 185, 186,
	188, 187, 189, 190, 175, 176, 193, 240, 241, -182,
	-182, -182, -182, -249, -255, -254, -459, -251, -428, -331,
	-338, -459, -459, -182, -314, -459, -179, -459, -459, -459,
	-459, -459, -258, -174, -459, -459, -463, -459, -463, -463,
	-463, -369, -459, -369, -369, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, -459, -459, -459, -459,
	238, -459, -459, -459, -459, -459, -369, -369, -369, -369,
	-369, -369, -459, -459, -459, -459, -459, -459, -459, -459,
	-459, -459, -459, -459, -459, -459, 98, 112, 108, 111,
	103, 114, 98, 98, 98, 98, -34, -35, -239, 62,
	-459, -349, -441, -442, -222, -219, -459, 330, -332, -332,
	299, 105, -268, -37, -34, -263, -269, -265, -34, -105,
	-147, -160, 68, 69, -159, -162, 26, 43, 73, 75,
	99, 71, 72, 70, 40, -460, 97, -460, -287, -460,
	-171, -326, -155, -164, 266, 274, 273, 150, -431, -172,
	153, 317, 96, -42, -290, 115, -242, -247, -245, 757,
	680, 710, 680, 710, 66, 48, 98, 98, 96, 96,
	24, -264, -266, -174, 17, -336, 179, -335, 27, -332,
	98, 238, 17, -220, 31, -219, -316, -316, 96, 100,
	346, -305, -307, 446, 448, 166, -337, -332, 98, 33,
	97, 96, -219, -358, -361, -363, -362, -364, -359, -360,
	375, 376, 194, 379, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 392, 404, 34, 289, 371, 372, 373,
	374, 393, 394, 395, 396, 398, 399, 400, 401, 356,
	377, 621, 357, 358, 359, 360, 361, 362, 364, 365,
	368, 366, 367, 369, 370, -333, -332, 95, 97, 96,
	-368, 95, -174, -32, 97, 96, -391, -391, -391, 297,
	22, -52, -49, -417, 21, -48, -49, 247, 135, 136,
	244, 95, -380, 95, -389, -333, -332, 95, 151, 271,
	150, -388, -385, -388, -389, -332, -251, -332, 151, 151,
	-332, -332, -301, -332, -301, -301, 40, -301, 40, -301,
	40, 105, -332, -301, 40, -301, 40, -301, 40, -301,
	40, -301, 40, 33, 87, 88, 89, 33, 91, 92,
	93, -251, -332, -332, -251, -380, -251, -219, -332, -308,
	105, 105, 105, -391, -391, 105, 98, 98, 98, -391,
	-391, 105, 98, -340, -338, 98, 98, -433, 282, 327,
	329, 105, 105, 105, 105, 33, 98, -434, 33, 771,
	770, 772, 773, 774, 98, 105, 33, 105, 33, 105,
	-332, 95, -219, -171, 242, 244, 247, 85, 98, 335,
	333, 334, 342, 331, 336, 337, 338, 166, 49, 96,
	268, 265, -332, -322, 270, -322, -322, -332, -339, -338,
	-330, -219, 268, 412, 98, -174, -387, 17, 177, -343,
	-343, -320, -219, -387, -343, -320, -219, -320, -320, -320,
	-320, -343, -343, -343, -320, -338, -338, -219, -219, -219,
	-219, -219, -219, -219, -350, -321, -320, 746, 98, -313,
	17, 85, -350, -350, -329, 25, 25, 96, 352, 449,
	450, -348, 349, -107, -332, 98, -13, -32, -21, -20,
	-22, 166, -13, 96, 623, -212, -219, 746, 746, 746,
	746, 746, 746, -174, -174, -174, -174, 647, -237, -452,
	157, 132, 133, 130, 131, -191, 41, 42, 40, -174,
	-238, -244, -249, 115, 177, 159, 174, -280, -179, -182,
	-179, -179, -179, -179, -179, -179, 237, -179, 237, -179,
	-179, -179, -179, -179, -179, -351, -332, 98, 194, -187,
	-186, 114, -450, -187, 620, 96, -254, 238, -174, -174,
	-428, -145, 486, 487, 488, 489, 491, 492, 493, 496,
	497, 501, 502, 485, 503, 490, 495, 498, 499, 500,
	494, 374, -174, -240, -239, -240, -174, -174, -256, -257,
	161, -251, -174, -460, -460, 105, 185, -153, 26, 43,
	-153, -153, -153, -153, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -153, -174, -146, 485, 503, 490,
	495, 498, 499, 500, 494, 374, 504, 505, 506, 507,
	508, 509, 510, 511, 512, -146, -145, -174, -174, -174,
	-174, -174, -174, -174, -174, -113, -174, 142, 143, 144,
	-239, -174, -179, -174, -174, -174, -460, -174, -174, -174,
	-240, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -427, -426, -425,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -239, -239, -239, -239, -239, -174, -460,
	-174, -193, -177, 105, -295, 114, -174, -174, -174, -174,
	-174, -174, -240, -334, -339, -330, -331, -239, -240, -240,
	-239, -239, -174, -174, -174, -174, -174, -174, -174, -174,
	-460, -174, -174, -174, -174, -174, -287, -460, -239, 96,
	-443, 448, 449, 744, -341, 302, -340, 27, -240, 98,
	17, -298, 86, -332, -268, -268, 68, 69, 64, -157,
	-158, -162, -460, 306, -166, 319, 265, -163, -171, -332,
	266, 266, 266, -323, 270, 513, 166, -41, 27, 96,
	-459, 673, 673, 67, 98, -370, -308, 402, 403, 194,
	-296, -174, -174, 96, -267, 29, 30, -219, -335, 185,
	-339, -219, -300, 302, -219, -197, -199, -200, -201, -222,
	-250, -459, -202, -34, 643, 640, 17, -212, -213, -221,
	-338, -306, -352, -305, 96, 447, 449, 450, 85, 134,
	-174, -371, 193, -399, -398, -397, -380, -382, -383, -384,
	97, -371, -376, 409, 408, -368, -368, -368, -368, -368,
	-368, -370, -370, -370, -368, 95, -368, 95, -368, -368,
	-368, -368, -373, 95, -373, -373, -374, -373, 95, -374,
	-375, 95, -375, -410, -174, -407, -406, -404, -405, 275,
	110, 720, 672, 623, 664, 706, 86, -402, -267, 105,
	-460, -108, 623, -332, 100, 98, 100, 98, 100, 98,
	-138, -77, -1, 783, 784, 785, 96, 22, -381, -380,
	-76, 327, -413, -414, 302, -409, -403, -389, 151, -388,
	-389, -389, -332, 96, 31, 139, 139, 139, 139, 623,
	244, 34, -324, 663, 157, 720, 672, -380, -76, 268,
	268, -351, -351, -351, 98, 98, -319, 779, -212, -166,
	308, 308, 265, 321, 265, 321, -219, 332, 335, 333,
	334, 342, 331, 336, 337, 338, 339, 40, 40, 40,
	334, 40, 40, 40, 40, 320, 322, 324, 310, -219,
	-219, -322, 85, -214, -219, 28, -338, -219, 98, 98,
	-219, -320, -320, -219, -320, -320, -219, 98, -338, -456,
	353, -332, 389, 737, 739, -149, 448, 96, 623, 25,
	-150, 25, -459, -452, 132, 133, -249, -249, -249, -238,
	-179, -182, -179, 156, 290, -179, -179, -459, -251, -460,
	-334, 27, 96, 86, -460, 183, 96, -460, -460, 96,
	17, 96, -259, -257, 163, -174, -460, 96, -460, -460,
	-239, -174, -174, -174, -174, -460, -460, -460, -460, -460,
	-460, -460, -460, -460, -460, -239, -460, 96, 96, 17,
	-355, 27, -460, -460, -460, -460, 96, -460, -460, -258,
	-460, 17, -460, 86, 96, 177, 96, -460, -460, -460,
	96, 96, -460, -460, 96, -460, 96, -460, -460, -460,
	-460, -460, -460, 96, -460, 96, -460, -460, -460, 96,
	-460, 96, -460, -460, 96, -460, 96, -460, 96, -460,
	96, -460, 96, -460, 96, -460, 96, -460, 96, -460,
	96, -460, 96, -460, 96, -460, 96, -460, 96, -460,
	96, -460, 96, -460, 96, -460, 96, -460, 96, -460,
	-460, -460, 96, -460, 96, -460, 96, -460, -460, 96,
	-460, 96, -460, 96, -460, 96, 96, -460, 96, 96,
	96, -460, 96, 96, 96, 96, -460, -460, -460, -460,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	-460, -460, -460, -460, -460, -460, 96, -120, 648, -460,
	-460, 96, -460, 96, 96, 96, 96, 96, -460, -459,
	238, -460, -460, -460, -460, -460, 96, 96, 96, 96,
	96, 96, -460, -460, -460, 96, 96, -460, 96, -460,
	96, -460, -442, 743, 449, -226, -225, -223, 83, 269,
	84, -459, -340, -460, -187, -295, -297, -295, -232, -332,
	105, 114, -270, -196, 96, -198, 17, -323, 267, 326,
	-323, -171, -166, -408, -405, -332, -332, -332, -338, 157,
	-173, 480, -168, 98, 100, -249, -247, -460, -370, -275,
	-281, -317, -332, 98, 194, -372, 194, -372, 402, 403,
	-266, 238, -227, 18, -231, 34, -315, -32, -459, 65,
	62, -459, 34, 96, -215, -217, -216, -218, 74, 723,
	78, 80, 81, 75, 76, 77, 82, -346, 27, -34,
	-197, -34, -459, -219, -212, -461, 17, 86, -461, 96,
	238, -307, -310, 451, 448, 454, -428, 98, -137, 96,
	-397, -384, -271, -167, 45, -377, 410, -370, 631, -370,
	-370, -379, 98, -379, 105, 105, 105, 97, -55, -50,
	-51, 35, 90, -404, -391, 98, 44, -391, -391, -332,
	97, -267, -109, 316, 743, -2, 782, 788, 151, 95,
	415, 21, -289, 96, 97, -252, 328, 97, -139, -332,
	97, 95, -389, -389, -332, -459, 265, 33, 33, 720,
	672, 663, -76, -252, -251, -332, -371, 781, 780, 97,
	267, -219, -219, -219, -219, -219, -219, 247, 244, 438,
	334, -451, 340, 98, 40, -451, 311, 268, -212, -219,
	96, -110, 284, 279, -343, -343, 35, -219, 448, 755,
	753, -174, 156, 290, -191, -182, -145, -145, -179, -353,
	194, 375, 289, 373, 369, 389, 380, 408, 371, 409,
	366, 365, 364, -353, -351, -179, -239, -174, -174, -174,
	165, -174, 162, -174, -121, -120, -460, -460, -460, -460,
	-460, -121, -121, -121, -121, -121, -121, -121, -121, -121,
	-121, -263, -174, -174, -174, -460, 194, 375, -121, -174,
	17, -174, -351, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -425, -174,
	-239, -174, -239, -174, -174, -174, -174, -174, -426, -426,
	-426, -426, -426, -239, -239, -239, -239, -174, -459, -332,
	-124, -123, -122, 699, 269, -120, -193, -124, -193, 237,
	-174, 237, 237, 237, -174, -240, -334, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -223, -385, 308,
	-385, 308, -385, -301, 96, -312, 25, 17, 62, 62,
	-196, -227, -158, -197, -219, -219, -165, 317, 325, -219,
	-166, 267, 85, -408, -408, -408, 28, 95, -169, 101,
	-278, 736, -284, 51, -282, -283, 52, -279, 53, 61,
	-372, -372, 185, -268, -174, -302, 85, -303, -311, -251,
	-243, -246, -244, -459, -288, -460, -332, -301, -303, -199,
	-200, -200, -199, -200, 74, 78, 81, 76, 77, 74,
	81, 74, 74, 74, 81, 79, 74, 81, 79, 74,
	-216, 723, -338, -460, -174, -341, 86, -197, -197, -221,
	-338, 185, 448, 452, 453, -397, -449, 130, 157, 33,
	85, 406, 110, -447, 193, 660, 715, 720, 672, 664,
	706, -448, 271, 150, 151, 283, 27, 46, 97, 96,
	97, 96, 97, 97, 96, -325, -324, -51, -50, -391,
	-391, 105, -428, 98, 98, 276, -140, 786, 105, 95,
	-3, 90, -174, 95, 22, -380, -251, -415, -365, -416,
	-366, -367, -5, -6, -392, -143, 62, 110, -80, 49,
	266, 766, 767, 139, -459, 779, -407, -289, -411, -413,
	-219, -178, -459, -190, -176, -175, -177, -183, 183, 184,
	289, 371, 372, -252, -219, -430, 86, 308, 406, 308,
	406, 98, -453, 341, 98, -453, -219, -110, -55, -219,
	-320, -320, 35, -428, -460, -191, -182, -152, 177, 623,
	-356, 630, -368, -368, -368, -375, -368, 361, -368, 361,
	-368, -460, -460, -460, 96, -460, 25, -460, 96, -174,
	96, -121, -121, -121, -121, -121, -148, 519, 96, 96,
	-460, 95, 95, -460, -174, -460, -460, -460, 96, -460,
	-460, -460, -460, -460, -460, -460, -460, -460, -460, -460,
	-460, -460, 96, -460, 96, -460, 96, -460, 96, -460,
	96, -460, 96, -460, 96, -460, 96, -460, 96, -460,
	96, -460, 96, -460, 96, -460, 96, -460, 96, -460,
	96, -460, 96, -460, -460, 96, -460, -460, -460, 96,
	-460, 96, -460, 96, -460, -460, -460, 96, -354, 721,
	-460, -460, -460, -460, -460, -460, -460, -460, -460, -460,
	-460, -119, -333, -120, 681, 681, -460, -120, -260, 96,
	-179, -460, -179, -179, -179, -460, -460, -460, 96, -460,
	96, 96, -460, 96, -460, 96, -460, -460, -460, -460,
	96, -224, 25, -459, -224, -459, -224, -460, -295, -219,
	-227, -261, 19, -459, 267, -219, -219, 85, 85, 85,
	97, -275, 56, 381, -286, -285, 60, 52, -283, 22,
	54, 22, 32, -302, 96, 166, -345, 96, 27, -460,
	-460, 96, -315, 62, 238, -460, -227, -210, -209, 85,
	86, -211, 85, -209, 74, 81, 74, 74, 81, 79,
	74, 81, 79, 74, 74, 74, 81, 74, 74, 81,
	-290, 96, -300, -197, -227, -227, 238, 130, -459, -178,
	15, 98, 98, -428, -446, 770, 771, 33, 772, 105,
	-391, -391, 151, 151, -219, 95, -370, 98, -370, 105,
	105, 33, 91, 92, 93, 33, 87, 88, 89, 318,
	-412, 95, 22, -174, 95, 166, 97, -289, -289, 304,
	177, -391, 764, 310, 310, -391, -391, -391, -142, -141,
	786, 97, -460, 96, -378, 623, 626, -174, -184, -184,
	-290, -424, 623, -429, -332, -332, -332, -332, 105, 107,
	-460, 621, 82, 624, -460, -370, -174, -174, -174, -174,
	-268, 98, -174, -174, 105, 105, -121, -460, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -174, -174,
	-174, -174, -174, -174, -174, -174, -174, -174, -239, -174,
	-460, -207, -206, -208, 747, 130, 33, -353, -460, -241,
	302, -127, -126, -125, 17, -460, -174, -145, -145, -145,
	-145, -174, -174, -174, -174, -174, -174, -459, 74, 21,
	19, -292, -332, 271, -459, -292, -459, -341, -261, -262,
	20, 22, -421, -420, -418, -419, 177, 727, 726, -219,
	-219, -219, -219, -276, 58, -274, 57, -274, -285, 22,
	22, 98, 22, 98, 151, -311, -174, -246, -340, -315,
	-32, -332, -243, -332, -263, -174, 95, -174, 74, 74,
	74, 81, 74, 74, 81, 74, 74, -187, -227, -227,
	-174, -234, 543, 545, 546, 547, 544, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 548, 559, 520,
	521, 522, 117, 119, 118, 127, 128, 523, 524, 525,
	375, 571, 572, 566, 569, 570, 568, 567, 390, 391,
	526, 589, 590, 594, 593, 591, 592, 595, 598, 599,
	600, 601, 602, 603, 605, 604, 596, 597, 574, 573,
	575, 576, 577, 578, 579, 580, 582, 581, 583, 584,
	585, 586, 587, 588, 606, 607, 608, 609, 610, 612,
	611, 616, 615, 613, 614, 618, 617, 527, 528, 120,
	121, 122, 123, 124, 125, 126, 529, 532, 530, 533,
	534, 535, 540, 541, 536, 537, 538, 539, 542, 401,
	399, 400, 396, 395, 394, 467, 472, 473, 475, 560,
	561, 562, 563, 564, 565, 728, 729, 730, 731, 732,
	733, 734, 735, 98, 98, 95, -174, 97, 97, -411,
	-77, 97, -291, -289, 105, 97, 305, -244, -459, 98,
	-391, -391, -391, 105, 105, -340, -460, 96, -332, -448,
	-413, 627, 627, -460, 27, -423, -422, -334, 95, 86,
	67, 622, 625, -460, -460, -460, 96, -460, -460, -460,
	97, 97, -460, -460, -460, -460, -460, -460, -460, -460,
	-460, -460, -460, -460, -460, -460, -460, -460, -460, -460,
	-460, -460, -460, -460, 96, -460, -206, -208, -460, 85,
	-187, -263, 22, -124, 327, 329, -124, -460, -460, -460,
	-460, -460, 96, -460, -460, 96, -460, 96, -460, -460,
	-292, -460, 22, 22, 96, -460, -292, -460, -292, -226,
	-262, -134, -133, -132, 654, -174, -239, -460, 96, -332,
	-277, 59, 85, 134, 98, 98, 98, 15, -459, -243,
	238, -345, -268, -289, 74, 74, -204, 415, -263, -460,
	-289, 97, 97, 788, 151, 97, -244, -151, -459, 301,
	-340, 98, 98, -141, -144, -32, 96, 166, -289, -219,
	67, -174, -239, -460, 85, 635, 747, -118, -117, -114,
	758, 784, -239, -120, -120, -174, -174, -174, -460, -332,
	271, -460, -460, -134, 96, -131, -130, -332, -357, 623,
	-81, -82, -83, -8, 344, 270, 254, 285, -418, -358,
	85, 134, -303, -289, -345, -332, 97, -460, -459, -268,
	97, -272, 95, -3, 301, -365, -416, -366, -367, -5,
	-6, -392, -108, -422, -396, -338, -334, 98, 105, 97,
	623, -460, -460, -116, 159, 756, 718, -183, 237, -460,
	96, -460, 96, -460, 96, -132, 96, 27, 628, 789,
	-84, -85, -83, -82, -174, -289, -59, -332, 257, 258,
	259, -65, -63, -64, 261, -332, -460, -341, -205, -203,
	-332, 678, -439, -438, 619, -449, -445, 130, 157, 110,
	-447, 715, 720, 672, 140, 141, -174, 95, -460, 238,
	-430, 624, -116, 757, 692, 666, 692, 666, -179, -174,
	-174, -174, -130, -459, 165, -83, 162, -358, 256, 263,
	-66, -67, 34, -170, 65, -460, 96, 25, -358, -79,
	689, -436, -437, 85, -440, 421, 688, 709, 130, 98,
	105, 97, -289, -339, -424, 625, 156, -145, -460, 96,
	-460, 96, -460, -119, -85, -273, 33, 25, 25, -68,
	-69, 455, 456, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, -68, 98, -203, 685, -371, -187, -437,
	85, -436, 85, 16, 15, -4, 787, 97, -116, 692,
	666, -174, -174, -460, -89, -88, -87, 164, -459, -178,
	-60, -61, -62, -64, 262, 157, 260, 105, -63, -62,
	166, -78, 28, -204, -435, 284, 279, 282, 34, -435,
	105, -4, -460, -460, -86, 163, -87, -174, -174, -82,
	96, 255, -183, 689, 278, 33, 130, 165, -85, 162,
	-460, -61, -187, 270, -85, -207, -206, -206,
}

var yyDef = [...]int16{
	962, -2, 1, 2, -2, 964, 962, 4, 5, 7,
	8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
	18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
	28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
	38, 39, 40, 41, 42, 131, 133, 134, 962, 962,
	962, 0, 962, 0, 192, 0, 1023, -2, -2, 962,
	1759, 0, 962, 0, 957, 0, -2, 877, 883, 0,
	892, -2, 0, 0, 962, 962, 2437, 2437, 957, 0,
	0, 0, 0, 0, 962, 962, 962, 962, 1764, 1593,
	111, 962, 0, 149, 150, 962, 912, 913, 914, 126,
	0, 2435, 146, 962, 963, 3, 132, 136, 0, 0,
	0, 119, 1602, 0, 139, 0, 0, 966, 0, 0,
	1742, 962, 962, 0, 190, 191, 0, 0, 0, 0,
	0, 195, -2, 227, 228, 229, 0, 234, 681, 596,
	648, 594, 633, -2, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 599, 471, 471,
	0, 0, -2, 582, 582, 582, 1744, 0, 0, 0,
	630, 533, 471, 471, 471, 0, 471, 471, 471, 471,
	0, 0, 471, 471, 471, 471, 471, 471, 471, 471,
	471, 471, 471, 471, 471, 471, 471, 471, 471, 1620,
	233, 1760, 1757, 1758, 1934, 1935, 1936, 1937, 1938, 1939,
	1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949,
	1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959,
	1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969,
	1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979,
	1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989,
	1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,
	2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,
	2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019,
	2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029,
	2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039,
	2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049,
	2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059,
	2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069,
	2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079,
	2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089,
	2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099,
	2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109,
	2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119,
	2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129,
	2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139,
	2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149,
	2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159,
	2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169,
	2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179,
	2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189,
	2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199,
	2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209,
	2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219,
	2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229,
	2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239,
	2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249,
	2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259,
	2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269,
	2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279,
	2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289,
	2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299,
	2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309,
	2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319,
	2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329,
	2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339,
	2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349,
	2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359,
	2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369,
	2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379,
	2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389,
	2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399,
	2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409,
	2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419,
	2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429,
	2430, 2431, 2432, 2433, 2434, 0, 1736, 0, 795, 1084,
	0, 958, 959, 0, 866, 866, 0, 866, 866, 866,
	866, 0, 0, 0, 809, 0, 0, 0, 0, 863,
	0, 825, 826, 0, 863, 0, 832, 869, 0, 0,
	839, 866, 866, 842, 2438, 0, 2438, 2438, 0, 0,
	1727, 0, 860, 858, 872, 873, 103, 876, 879, 880,
	881, 882, 885, 0, 896, 899, 1753, 1754, 0, 901,
	906, 925, 926, 0, 106, 1244, 0, 1108, 0, 1119,
	-2, 1130, 1147, 1148, 1149, 1150, 1151, 1153, 1154, 1155,
	0, 0, 0, 0, 1160, 1161, 0, 0, 0, 0,
	0, 1224, 0, 0, 0, 0, 2149, 1564, 0, 0,
	1526, 1526, 1260, 1526, 1526, 1528, 1528, 1528, 1993, 2140,
	2150, 2337, 1948, 1954, 1955, 1956, 2282, 2283, 2284, 2285,
	2381, 2382, 2386, 2060, 1943, 2352, 2353, 0, 2434, 2100,
	2108, 2109, 2085, 2094, 2133, 2239, 2364, 1967, 2128, 2201,
	2056, 2080, 2081, 2220, 2221, 2104, 2105, 2084, 2288, 2290,
	2306, 2307, 2292, 2294, 2303, 2309, 2314, 2293, 2305, 2310,
	2323, 2327, 2330, 2331, 2332, 2300, 2298, 2311, 2315, 2317,
	2319, 2325, 2328, 2301, 2299, 2312, 2316, 2318, 2320, 2326,
	2329, 2287, 2291, 2295, 2304, 2322, 2302, 2321, 2296, 2308,
	2313, 2324, 2297, 2289, 2098, 2101, 2088, 2089, 2091, 2093,
	2099, 2106, 2112, 2090, 2111, 2110, 0, 2086, 2087, 2092,
	2103, 2107, 2095, 2096, 2097, 2102, 2113, 2156, 2155, 2154,
	2200, 2124, 2199, 0, 0, 0, 0, 0, 1937, 2000,
	2001, 2334, 1448, 1449, 1450, 1451, 0, 0, 0, 0,
	0, 0, 0, 360, 361, 1577, 1578, 105, 1243, 1723,
	1528, 1528, 1528, 1528, 1528, 1528, 1182, 1183, 1184, 1185,
	1186, 1212, 1213, 1219, 1220, 2215, 2216, 2217, 2218, 2038,
	2375, 2047, 2048, 2196, 2197, 2062, 2063, 2408, 2409, -2,
	-2, -2, 302, 303, 304, 305, 306, 307, 308, 309,
	0, 1999, 2350, 2351, 298, 0, 1721, 1722, 365, 362,
	363, 364, 1226, 1227, 318, 319, 320, 321, 322, 323,
	324, 325, 326, 327, 328, 329, 330, 331, 332, 333,
	334, 335, 336, 337, 338, 339, 340, 341, 342, 343,
	344, 345, 346, 347, 348, 349, 350, 351, 352, 353,
	354, 355, 356, 357, 358, 359, 0, 367, 368, 2437,
	0, 935, 0, 0, 0, 0, 0, 0, 1765, 1766,
	1602, 0, 1594, 1593, 124, 0, 962, -2, 0, 0,
	0, 0, -2, 108, 0, 113, 1023, 0, 965, 138,
	137, 1653, 1656, 0, 0, 0, 1663, 1665, 1666, 1667,
	102, 120, 1603, 128, 130, 1604, 0, 967, 968, 0,
	999, 1003, 0, 0, 0, 1743, 1742, 1742, 166, 0,
	0, 167, 187, 188, 189, 0, 0, 173, 174, 1729,
	1730, 104, 0, 0, 245, 246, 0, 1200, 498, 0,
	241, 0, 491, 430, 0, 0, 0, 1027, 230, 231,
	232, 471, 471, 471, 645, 0, 0, 233, 233, 603,
	604, 605, 0, 0, -2, 496, 0, 583, 0, 0,
	485, 485, 489, 487, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 622, 0, 623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 742, 0, 472, 0, 643,
	644, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	1745, 1746, 0, 620, 621, 0, 0, 0, 471, 471,
	0, 0, 0, 0, 471, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 1643, 0, 0, 222, 223,
	1621, 0, -2, 0, 786, 0, 0, 0, 1738, 1738,
	1738, 0, 1737, 794, 0, 0, 0, 799, 0, 0,
	800, 0, 863, 863, 861, 862, 802, 803, 804, 805,
	866, 0, 0, 480, 481, 482, 863, 866, 0, 866,
	866, 866, 866, 863, 863, 863, 866, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2438, 869, 866, 0,
	833, 0, 834, 835, 836, 837, 840, 841, 843, 2439,
	2440, 1755, 1756, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823,
	1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833,
	1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843,
	1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853,
	1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863,
	1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873,
	1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893,
	1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913,
	1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923,
	1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933,
	2438, 2438, 847, 851, 855, 853, 1728, 878, 884, 886,
	887, 0, 0, 897, 900, 919, 110, 2046, 905, 110,
	907, 908, 909, 910, 911, 937, 938, 943, 0, 0,
	0, 0, 949, 950, 951, 0, 0, 954, 955, 956,
	0, 0, 0, 0, 0, 1106, 0, 0, 1232, 1233,
	1234, 1235, 1236, 1237, 1238, 1239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1131, 1132, 0, 0, 0, 1156,
	1157, 1158, 1159, 1162, 0, 1173, 0, 1175, 1573, -2,
	0, 0, 0, 1167, 1168, 0, 0, 0, 1748, 1748,
	0, 0, 0, 1565, 0, 0, 1258, 0, 1259, 1261,
	1262, 1263, 0, 1264, 1265, 972, 972, 972, 972, 972,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1748,
	0, 0, 1748, 1748, 0, 0, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 310, 311, 312,
	313, 314, 369, 315, 316, 317, 1243, 0, 0, 962,
	0, 107, 927, 928, 0, 1049, 1748, 0, 0, 978,
	0, 1763, 118, 127, 129, 1602, 122, 1602, 0, 982,
	0, 0, -2, -2, 983, 984, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 115, 2436, 116, 0, 135,
	1625, 0, 1620, 1643, 0, 0, 0, 0, 1740, 1644,
	0, 0, 0, 109, 0, 140, 141, 1711, 1715, 0,
	1654, 0, 1657, 0, 0, 0, 444, 1661, 0, 0,
	0, 1595, 1596, 1599, 0, 1000, 2146, 1004, 0, 1006,
	1007, 0, 0, 164, 0, 1083, 0, 0, 0, 175,
	0, 177, 178, 0, 0, 0, 455, 1731, 1732, 1733,
	-2, 478, 0, 455, 439, 377, 378, 379, 430, 381,
	430, 430, 430, 430, 430, 444, 444, 444, 430, 413,
	414, 415, 416, 0, 430, 0, 398, 430, 430, 430,
	430, 420, 421, 422, 423, 424, 425, 426, 427, 382,
	383, 384, 385, 386, 387, 388, 389, 390, 432, 432,
	432, 432, 432, 436, 436, 0, 1201, 0, 459, 0,
	1599, 0, 0, 1629, 1024, 0, 0, 0, 0, 646,
	692, 597, 634, 647, 0, 600, 601, -2, 0, 0,
	582, 0, 584, 0, 479, 0, -2, 0, 489, 0,
	485, 489, 486, 489, 477, 490, 624, 625, 626, 0,
	628, 629, 722, 1035, 0, 0, 0, 0, 0, 728,
	729, 730, 0, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 635, 636, 637, 638, 639, 640, 641,
	642, 0, 0, 0, 0, 584, 0, 631, 0, 0,
	535, 536, 537, 0, 0, 540, 541, 542, 543, 0,
	0, 546, 547, 548, 1052, 1053, 549, 550, 575, 576,
	577, 551, 552, 553, 554, 555, 556, 557, 569, 570,
	571, 572, 573, 574, 558, 559, 560, 561, 562, 563,
	566, 0, 215, 1625, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1738, 0, 0, 0, 0, 0, 981, 1085, 1761,
	1762, 796, 0, 0, 867, 868, 0, 483, 484, 866,
	866, 806, 848, 0, 866, 810, 849, 811, 813, 812,
	814, 827, 828, 866, 817, 864, 865, 818, 819, 820,
	821, 822, 823, 824, 844, 829, 830, 831, 870, 0,
	874, 875, 845, 846, 0, 856, 0, 0, 0, 890,
	891, 0, 898, 922, 920, 921, 923, 915, 916, 917,
	918, 0, 924, 0, 0, 940, 160, 945, 946, 947,
	948, 960, 953, 1245, 1103, 1104, 1105, 0, 1107, 1113,
	0, 1228, 1230, 1111, 1112, 1115, 0, 0, 0, 1109,
	1120, 1240, 1241, 1242, 0, 0, 0, 0, 0, 1124,
	1128, 1133, 1134, 1135, 1136, 1137, 0, 1138, 0, 1141,
	1142, 1143, 1144, 1145, 1146, 1152, 1541, 1542, 1543, 1171,
	370, 371, 0, 1172, 0, 0, 0, 0, 0, 0,
	0, 0, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1244, 0, 1749, 0, 0, 0, 1571, 1568,
	0, 0, 0, 1527, 1529, 0, 0, 0, 973, 974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1508, 1509, 1510,
	1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520,
	1521, 1522, 1523, 1524, 1525, 0, 0, 1544, 0, 0,
	0, 0, 0, 0, 0, 1564, 0, 1177, 1178, 1179,
	0, 0, 0, 0, 0, 0, 1306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 206, 207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1452, 1453, 1454, 1455, 0, 0, 0, 0,
	0, 0, 0, 1575, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1477, 0, 0, 0, 0, 0, 0, 1719, 0, 0,
	930, 931, 933, 0, 1087, 0, 1050, 0, 0, 936,
	0, 977, 0, 980, 121, 123, 986, 987, 0, 1008,
	997, 985, 117, 1740, 0, 0, 1740, 1643, 1625, 1750,
	0, 0, 0, 0, 0, 196, 0, 112, 0, 0,
	0, 1655, 1658, 1659, 444, 1686, 0, 453, 453, 450,
	1664, 1605, 1606, 0, 1598, 1600, 1601, 142, 1005, 1001,
	0, 1101, 0, 0, 1082, 0, 1011, 1013, 1014, 1015,
	1047, 0, 1018, 1019, 0, 0, 0, 0, 0, 162,
	1084, 168, 0, 176, 0, 0, 181, 182, 169, 170,
	171, 172, 0, 681, -2, 530, 247, 249, 250, 251,
	242, -2, 442, 440, 441, 380, 444, 444, 406, 407,
	444, 409, 410, 411, 412, 0, 418, 0, 399, 400,
	401, 402, 391, 0, 392, 393, 394, 434, 0, 395,
	396, 0, 397, 497, 0, 1607, 460, 461, 463, 471,
	0, 466, 467, 0, 471, 471, 0, 492, 493, 0,
	1599, 194, 1631, 1028, 235, 236, 237, 238, 239, 240,
	717, 0, 0, 693, 715, 716, 233, 0, 0, 243,
	586, 585, 0, 749, 0, 495, 0, 0, 489, 489,
	474, 475, 627, 0, 0, 724, 725, 726, 727, 0,
	0, 0, 613, 524, 0, 614, 615, 584, 586, 0,
	0, 455, 538, 539, 544, 545, 564, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 662, 663, 665,
	668, 0, 672, 588, 676, 678, 0, 664, 667, 669,
	0, 673, 588, 677, 679, 1622, 1623, 1624, 0, 0,
	787, 0, 0, 521, 158, 1739, 792, 793, 797, 798,
	863, 816, 850, 863, 808, 815, 838, 852, 854, 888,
	889, 894, 902, 903, 904, 944, 0, 0, 0, 0,
	952, 0, 0, 1114, 1229, 1231, 1116, 1117, 1118, 1121,
	0, 1125, 1129, 0, 0, 0, 0, 0, 1176, 1174,
	1575, 0, 0, 0, 1225, 0, 0, 1248, 1249, 0,
	0, 0, 0, 1569, 0, 0, 1256, 0, 1530, 1206,
	0, 0, 0, 0, 0, 1206, 1206, 1206, 1206, 1206,
	1206, 1206, 1206, 1206, 1206, 1593, 1283, 0, 0, 0,
	0, 0, 1288, 1289, 1290, 1206, 0, 1293, 1294, 0,
	1296, 0, 1297, 0, 0, 0, 0, 1304, 1305, 1307,
	0, 0, 1310, 1311, 0, 1313, 0, 1315, 1316, 1317,
	1318, 1319, 1320, 0, 1322, 0, 1324, 1325, 1326, 0,
	1328, 0, 1330, 1331, 0, 1333, 0, 1335, 0, 1338,
	0, 1341, 0, 1344, 0, 1347, 0, 1350, 0, 1353,
	0, 1356, 0, 1359, 0, 1362, 0, 1365, 0, 1368,
	0, 1371, 0, 1374, 0, 1377, 0, 1380, 0, 1383,
	1384, 1385, 0, 1387, 0, 1389, 0, 1392, 1393, 0,
	1395, 0, 1398, 0, 1401, 0, 0, 1402, 0, 0,
	0, 1406, 0, 0, 0, 0, 1415, 1416, 1417, 1418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1429, 1430, 1431, 1432, 1433, 1434, 0, 1436, 0, 1207,
	0, 0, 1207, 0, 0, 0, 0, 0, 1246, 1748,
	0, 1531, 1532, 1533, 1534, 1535, 0, 0, 0, 0,
	0, 0, 1475, 1476, 1478, 0, 0, 1481, 0, 1483,
	0, 1720, 929, 932, 934, 1021, 1088, 1089, 0, 0,
	0, 0, 1051, 1747, 975, 976, 979, 1029, 0, 1579,
	0, 0, 1008, 1101, 0, 1009, 0, 0, 0, 0,
	0, 1625, 0, 0, 1751, 1750, 1750, 1750, 220, 0,
	1645, 1646, 1651, 1649, 1650, 114, 1712, 1716, 1668, 1662,
	1680, 1693, 453, 453, 447, 448, 454, 449, 451, 452,
	1597, 0, 1602, 0, 1709, 0, 0, 1696, 0, 1700,
	-2, 0, 0, 0, 0, 0, 0, 0, 1054, 0,
	0, 0, 0, 1063, 0, 0, 0, 0, 1048, 1019,
	0, 1020, 0, -2, 0, 0, 156, 157, 0, 0,
	0, 179, 180, 0, 0, 186, 456, 457, 224, 233,
	532, 248, 505, 0, 0, 376, 443, 403, 404, 405,
	408, 0, 428, 0, 0, 0, 0, 526, 193, 1611,
	1610, 471, 471, 462, 0, 465, 0, 0, 0, 1752,
	431, 494, 0, 1632, 1633, 687, 0, 0, 694, 0,
	0, 0, 595, 0, 606, 607, 0, 721, -2, 783,
	459, 0, 473, 476, 1036, 0, 0, 608, 0, 611,
	612, 525, 586, 617, 618, 632, 619, 567, 568, 565,
	0, 197, 653, 655, 659, 654, 658, 0, 0, 0,
	670, 590, 0, 680, 671, 590, 651, 0, 521, 1607,
	0, 791, 522, 523, 866, 866, 939, 161, 0, 942,
	0, 0, 0, 0, 1122, 1126, 1139, 1140, 1536, 1562,
	430, 430, 1549, 430, 436, 1552, 430, 1554, 430, 1557,
	430, 1560, 1561, 0, 0, 1169, 0, 0, 0, 0,
	1255, 1572, 0, 0, 1266, 1205, 1206, 1206, 1206, 1206,
	1206, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
	1281, 1566, 0, 0, 0, 1287, 0, 0, 1291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 209,
	0, 0, 0, 0, 0, 0, 1486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1200, 1204,
	0, 1208, 1209, 0, 0, 1438, 0, 0, 1456, 0,
	0, 0, 0, 0, 0, 0, 1576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1090, 1097, 0,
	1097, 0, 1097, 0, 0, 0, 1734, 1735, 1580, 1581,
	1101, 1582, 998, 1010, 0, 212, 1626, 1627, 1628, 211,
	0, 0, 0, 0, 0, 0, 1741, 0, 1648, 1652,
	1686, 0, 1679, 0, -2, 1688, 0, 0, 0, 1694,
	445, 446, 1002, 143, 1102, 147, 0, 1709, 1724, 0,
	1706, 1713, 1717, 0, 0, 0, 1702, 0, 1101, 1012,
	1043, 1045, 0, 1040, 1055, 0, 0, 0, 0, 1056,
	0, 1060, 1061, 1064, 0, 0, 1072, 0, 0, 1080,
	1081, 0, 1023, 1017, 0, 164, 0, 1101, 1101, 163,
	0, 1086, 183, 184, 185, 531, 252, 257, 0, 0,
	0, 262, 0, 264, 0, 0, 0, 269, 270, 471,
	471, 506, 0, 373, 375, 0, 0, 255, 444, 0,
	444, 0, 435, 437, 0, 507, 527, 1608, 1609, 0,
	0, 464, 468, 469, 470, 0, 690, 0, 718, 0,
	0, 0, 0, 0, 0, 244, 587, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 0, 471, 0, 0,
	0, 471, 471, 471, 0, 775, 458, 0, 0, 746,
	743, 609, 0, 288, 289, 296, 297, 299, 0, 0,
	0, 0, 0, 616, 1023, 200, 0, 0, 0, 0,
	661, 666, 674, 0, 589, 675, 788, 789, 790, 159,
	801, 807, 941, 961, 1110, 1123, 1127, 0, 0, 0,
	0, 1563, 1547, 444, 1550, 1551, 1553, 1555, 1556, 1558,
	1559, 1165, 1166, 1170, 0, 1252, 0, 1254, 0, 1570,
	0, 1267, 1268, 1269, 1270, 1271, 1602, 0, 0, 0,
	1286, 0, 0, 1206, 0, 1299, 1298, 1300, 0, 1302,
	1303, 1308, 1309, 1312, 1314, 1321, 1323, 1327, 1329, 1332,
	1334, 1336, 0, 1339, 0, 1342, 0, 1345, 0, 1348,
	0, 1351, 0, 1354, 0, 1357, 0, 1360, 0, 1363,
	0, 1366, 0, 1369, 0, 1372, 0, 1375, 0, 1378,
	0, 1381, 0, 1386, 1388, 0, 1391, 1394, 1396, 0,
	1399, 0, 1403, 0, 1405, 1407, 1408, 0, 0, 0,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1435, 0, 1198, 1437, 1210, 1211, 1216, 1440, 0, 0,
	0, 1443, 0, 0, 0, 1447, 1247, 1458, 0, 1463,
	0, 0, 1469, 0, 1473, 0, 1479, 1480, 1482, 1484,
	0, 0, 0, 0, 0, 0, 0, 1049, 1030, 125,
	1582, 1586, 0, -2, 0, 214, 216, 0, 0, 0,
	1647, 1673, 1671, 1671, 1681, 1682, 0, 0, 1689, 0,
	0, 0, 0, 148, 0, 0, 1695, 0, 0, 1718,
	0, 0, 0, 1701, 0, 165, 1593, 1037, 1044, 0,
	0, 1038, 0, 1039, 1058, 0, 1062, 1065, 0, 0,
	1073, 0, 0, 1057, 1066, 1068, 0, 1074, 1076, 0,
	1016, 0, 1101, 1101, 154, 155, 0, 258, 0, 260,
	0, 263, 265, 266, 267, 273, 274, 275, 276, 268,
	0, 0, 372, 374, 0, 0, 417, 429, 419, 0,
	0, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1630,
	682, 0, 692, 0, 1025, 0, 685, 0, 598, 0,
	0, 0, 471, 471, 471, 0, 0, 0, 0, 760,
	0, 0, 723, 0, 731, 0, 0, 0, 300, 301,
	0, 652, 0, 198, 199, 0, 0, 657, 591, 592,
	1163, 0, 0, 0, 1164, 1548, 0, 0, 0, 0,
	0, 1567, 0, 0, 0, 0, 1292, 1295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1411, 0, 0, 0, 712, 713, 0, 1487, 1203, 1593,
	0, 1207, 1217, 1218, 0, 1207, 1457, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1098, 0,
	0, 0, 1031, 1032, 0, 0, 0, 1087, 1586, 1591,
	0, 0, 0, 1635, 1636, 0, 1640, 1641, 1642, 213,
	217, 218, 219, 1676, 0, 1669, 1672, 1670, 1683, 0,
	0, 1690, 0, 1692, 0, 1725, 1726, 1714, 1707, 0,
	1699, 1704, 1706, 1703, 1602, 1041, 0, 1046, 1059, 1067,
	1069, 0, 1075, 1077, 0, 1070, 1078, 0, 1593, 153,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 272, 0, 0, 433, 438, 0,
	0, 683, 0, 1026, 695, 686, 0, 773, 0, 777,
	0, 0, 0, 780, 781, 782, 759, 0, 763, 499,
	747, 744, 745, 610, 0, 201, 202, 0, 0, 0,
	1537, 0, 1540, 1250, 1253, 1251, 0, 1282, 1284, 1285,
	1545, 1546, 1301, 1337, 1340, 1343, 1346, 1349, 1352, 1355,
	1358, 1361, 1364, 1367, 1370, 1373, 1376, 1379, 1382, 1390,
	1397, 1400, 1404, 1409, 0, 1412, 0, 0, 1413, 0,
	714, 1194, 0, 0, 1214, 1215, 0, 1442, 1444, 1445,
	1446, 1459, 0, 1464, 1465, 0, 1470, 0, 1474, 1485,
	0, 1092, 1099, 1100, 0, 1095, 0, 1096, 0, 1022,
	1591, 145, 1592, 1589, 0, 1587, 1584, 110, 1639, 0,
	1660, 0, 1674, 1675, 1684, 1685, 1691, 0, 0, 1706,
	0, 1698, 151, 0, 1071, 1079, 0, 0, 1602, 259,
	0, 279, 691, 0, 694, 684, 771, 772, 0, 784,
	776, 778, 779, 761, -2, 1629, 0, 0, 0, 660,
	1538, 0, 0, 1414, 0, 710, 711, 1202, 1195, 0,
	1180, 1181, 1199, 1439, 1441, 0, 0, 0, 1091, 1033,
	1034, 1093, 1094, 144, 0, 1588, 1222, 0, 1583, 0,
	210, 89, 90, 43, -2, 0, 0, 0, 1637, 1638,
	1677, 1678, 1710, 0, 1697, 1705, 1042, 1049, 0, 152,
	512, 505, 0, 0, 0, 764, 765, 766, 767, 768,
	769, 770, 649, 203, 204, 0, 579, 580, 581, 197,
	0, 1257, 1410, 1196, 0, 0, 0, 0, 0, 1460,
	0, 1466, 0, 1471, 0, 1590, 0, 0, 1585, 88,
	0, -2, 93, 0, 0, 0, 0, 1027, 67, 68,
	69, 50, 74, 75, 83, 77, 1708, 696, 0, 698,
	0, -2, 500, 513, 0, 253, 280, 281, 0, 0,
	284, 0, 286, 287, 277, 278, 0, 0, 785, 0,
	200, 0, 0, 1187, 1188, 1189, 1190, 1192, 0, 0,
	0, 0, 1223, 1200, 44, 94, 110, 85, 0, 0,
	49, 51, 0, 0, 84, 697, 0, 0, 455, 0,
	707, 501, 502, 0, 508, 509, 510, 511, 282, 283,
	285, 719, 0, 578, 656, 1539, 0, 0, 1461, 0,
	1467, 0, 1472, 0, -2, 46, 0, 0, 0, 52,
	0, 55, 56, 57, 58, 59, 60, 61, 62, 63,
	64, 65, 66, 53, 76, 699, 700, 708, 0, 503,
	0, 504, 0, 0, 0, 688, 0, 719, 1197, 1191,
	1193, 0, 0, 1221, 95, 98, 100, 0, 0, 87,
	110, 71, 78, 79, 80, 0, 82, 72, 73, 48,
	0, 0, 709, 705, 514, 516, 517, 0, 0, 515,
	720, 689, 1462, 1468, 0, 110, 99, 0, 0, 47,
	0, 81, 54, 0, 518, 519, 520, 0, -2, 110,
	86, 70, 701, 45, -2, 702, 703, 704,
}

var yyTok1 = [...]int16{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 158, 3, 3, 3, 188, 180, 3,
	95, 97, 185, 183, 96, 184, 238, 186, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 789,
	167, 166, 168, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 190, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 154, 3, 191,
}

var yyTok2 = [...]int16{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 144,
	145, 146, 147, 148, 149, 150, 151, 152, 153, 155,
	156, 157, 159, 160, 161, 162, 163, 164, 165, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	181, 182, 187, 189, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]uint16{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 58046, 721, 58047, 722, 58048, 723, 58049, 724,
	58050, 725, 58051, 726, 58052, 727, 58053, 728, 58054, 729,
	58055, 730, 58056, 731, 58057, 732, 58058, 733, 58059, 734,
	58060, 735, 58061, 736, 58062, 737, 58063, 738, 58064, 739,
	58065, 740, 58066, 741, 58067, 742, 58068, 743, 58069, 744,
	58070, 745, 58071, 746, 58072, 747, 58073, 748, 58074, 749,
	58075, 750, 58076, 751, 58077, 752, 58078, 753, 58079, 754,
	58080, 755, 58081, 756, 58082, 757, 58083, 758, 58084, 759,
	58085, 760, 58086, 761, 58087, 762, 58088, 763, 58089, 764,
	58090, 765, 58091, 766, 58092, 767, 58093, 768, 58094, 769,
	58095, 770, 58096, 771, 58097, 772, 58098, 773, 58099, 774,
	58100, 775, 58101, 776, 58102, 777, 58103, 778, 58104, 779,
	58105, 780, 58106, 781, 58107, 782, 58108, 783, 58109, 784,
	58110, 785, 58111, 786, 58112, 787, 58113, 788, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(yyPact[state])
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && int(yyChk[int(yyAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || int(yyExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := int(yyExca[i])
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(yyTok1[0])
		goto out
	}
	if char < len(yyTok1) {
		token = int(yyTok1[char])
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = int(yyTok2[char-yyPrivate])
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = int(yyTok3[i+0])
		if token == char {
			token = int(yyTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(yyTok2[1]) /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = int(yyPact[yystate])
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = int(yyAct[yyn])
	if int(yyChk[yyn]) == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = int(yyDef[yystate])
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && int(yyExca[xi+1]) == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = int(yyExca[xi+0])
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = int(yyExca[xi+1])
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = int(yyPact[yyS[yyp].yys]) + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = int(yyAct[yyn]) /* simulate a shift of "error" */
					if int(yyChk[yystate]) == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= int(yyR2[yyn])
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = int(yyR1[yyn])
	yyg := int(yyPgo[yyn])
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = int(yyAct[yyg])
	} else {
		yystate = int(yyAct[yyj])
		if int(yyChk[yystate]) != -yyn {
			yystate = int(yyAct[yyg])
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:673
		{
			setParseTrees(yylex, yyDollar[1].statements)
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:679
		{
			yyVAL.statements = []Statement{yyDollar[1].statement}
			resetTokenizer(yylex)
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:684
		{
			yyVAL.statements = append(yyDollar[1].statements, yyDollar[3].statement)
			resetTokenizer(yylex)
		}
	case 4:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:691
		{
			yyVAL.statement = yyDollar[2].statement
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if yyVAL.statement == nil && yyDollar[1].strs != nil {
				yyVAL.statement = &CommentOnly{Comments: yyDollar[1].strs}
			}
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:704
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:708
		{
			yyVAL.statement = nil
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:714
		{
			yyVAL.statement = yyDollar[1].tableStmt
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:755
		{
			yyVAL.compoundStatement = &SingleStatement{Statement: yyDollar[1].statement}
		}
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:759
		{
			yyVAL.compoundStatement = &BeginEndStatement{Statements: yyDollar[2].compoundStatements}
		}
	case 45:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:763
		{
			yyVAL.compoundStatement = &IfStatement{SearchCondition: yyDollar[2].expr, ThenStatements: yyDollar[4].compoundStatements, ElseIfBlocks: yyDollar[5].elseIfs, ElseStatements: yyDollar[6].compoundStatements}
		}
	case 46:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:767
		{
			yyDollar[3].columnType.Options = yyDollar[4].columnTypeOptions
			yyVAL.compoundStatement = &DeclareVar{VarNames: yyDollar[2].columns, Type: yyDollar[3].columnType}
		}
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:772
		{
			yyVAL.compoundStatement = &DeclareHandler{Action: yyDollar[2].handlerAction, Conditions: yyDollar[5].handlerConditions, Statement: yyDollar[6].compoundStatement}
		}
	case 48:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:776
		{
			yyVAL.compoundStatement = &DeclareCondition{Name: yyDollar[2].identifierCI, Condition: yyDollar[5].handlerCondition}
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:780
		{
			yyVAL.compoundStatement = &Signal{Condition: yyDollar[2].handlerCondition, SetValues: yyDollar[3].signalSets}
		}
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:785
		{
			yyVAL.signalSets = nil
		}
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:792
		{
			yyVAL.signalSets = append(yyDollar[1].signalSets, yyDollar[2].signalSet)
		}
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:796
		{
			yyVAL.signalSets = []*SignalSet{yyDollar[2].signalSet}
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:802
		{
			yyVAL.signalSet = &SignalSet{ConditionName: yyDollar[1].signalConditionName, Value: yyDollar[3].expr}
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:808
		{
			yyVAL.signalConditionName = ClassOriginType
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:812
		{
			yyVAL.signalConditionName = SubclassOriginType
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:816
		{
			yyVAL.signalConditionName = MessageTextType
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:820
		{
			yyVAL.signalConditionName = MySQLErrNoType
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:824
		{
			yyVAL.signalConditionName = ConstraintCatalogType
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:828
		{
			yyVAL.signalConditionName = ConstraintSchemaType
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:832
		{
			yyVAL.signalConditionName = ConstraintNameType
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:836
		{
			yyVAL.signalConditionName = CatalogNameType
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:840
		{
			yyVAL.signalConditionName = SchemaNameType
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:844
		{
			yyVAL.signalConditionName = TableNameType
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:848
		{
			yyVAL.signalConditionName = ColumnNameType
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:852
		{
			yyVAL.signalConditionName = CursorNameType
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:858
		{
			yyVAL.handlerAction = ContinueAction
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:862
		{
			yyVAL.handlerAction = ExitAction
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:866
		{
			yyVAL.handlerAction = UndoAction
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:872
		{
			yyVAL.handlerConditions = append(yyDollar[1].handlerConditions, yyDollar[3].handlerCondition)
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:876
		{
			yyVAL.handlerConditions = []HandlerCondition{yyDollar[1].handlerCondition}
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:882
		{
			yyVAL.handlerCondition = &HandlerConditionErrorCode{ErrorCode: convertStringToInt(yyDollar[1].str)}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:886
		{
			yyVAL.handlerCondition = yyDollar[1].handlerCondition
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:896
		{
			yyVAL.handlerCondition = &HandlerConditionSQLState{SQLStateValue: NewStrLiteral(yyDollar[3].str)}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:902
		{
			yyVAL.handlerCondition = &HandlerConditionNamed{Name: yyDollar[1].identifierCI}
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:908
		{
			yyVAL.handlerCondition = yyDollar[1].handlerCondition
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:912
		{
			yyVAL.handlerCondition = yyDollar[1].handlerCondition
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:916
		{
			yyVAL.handlerCondition = &HandlerConditionSQLWarning{}
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:920
		{
			yyVAL.handlerCondition = &HandlerConditionNotFound{}
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:924
		{
			yyVAL.handlerCondition = &HandlerConditionSQLException{}
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:929
		{
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:933
		{
			yyVAL.columnTypeOptions = nil
		}
	case 86:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:937
		{
			yyVAL.columnTypeOptions = &ColumnTypeOptions{Default: yyDollar[3].expr}
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:941
		{
			yyVAL.columnTypeOptions = &ColumnTypeOptions{Default: yyDollar[2].expr, DefaultLiteral: true}
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:947
		{
			yyVAL.compoundStatement = yyDollar[1].compoundStatement
		}
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:956
		{
			yyVAL.compoundStatements = nil
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:960
		{
			yyVAL.compoundStatements = yyDollar[1].compoundStatements
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:966
		{
			yyVAL.compoundStatements = &CompoundStatements{Statements: []CompoundStatement{yyDollar[1].compoundStatement}}
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:970
		{
			yyDollar[1].compoundStatements.Statements = append(yyDollar[1].compoundStatements.Statements, yyDollar[2].compoundStatement)
			yyVAL.compoundStatements = yyDollar[1].compoundStatements
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:976
		{
			yyVAL.compoundStatements = nil
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:980
		{
			yyVAL.compoundStatements = yyDollar[2].compoundStatements
		}
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:985
		{
			yyVAL.elseIfs = nil
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:989
		{
			yyVAL.elseIfs = yyDollar[1].elseIfs
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:995
		{
			yyVAL.elseIfs = append(yyDollar[1].elseIfs, yyDollar[2].elseIf)
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:999
		{
			yyVAL.elseIfs = []*ElseIfBlock{yyDollar[1].elseIf}
		}
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1005
		{
			yyVAL.elseIf = &ElseIfBlock{SearchCondition: yyDollar[2].expr, ThenStatements: yyDollar[4].compoundStatements}
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1011
		{
			yyVAL.variable = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1017
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1023
		{
			yyVAL.variable = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1027
		{
			yyVAL.variable = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1033
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1039
		{
			yyVAL.statement = &Load{}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1045
		{
			yyVAL.with = &With{CTEs: yyDollar[2].ctes, Recursive: false}
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1049
		{
			yyVAL.with = &With{CTEs: yyDollar[3].ctes, Recursive: true}
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1054
		{
			yyVAL.with = nil
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1058
		{
			yyVAL.with = yyDollar[1].with
		}
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1064
		{
			yyVAL.ctes = append(yyDollar[1].ctes, yyDollar[3].cte)
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1068
		{
			yyVAL.ctes = []*CommonTableExpr{yyDollar[1].cte}
		}
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1074
		{
			yyVAL.cte = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columns, Subquery: yyDollar[4].subquery.Select}
		}
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1080
		{
			yyVAL.tableStmt = yyDollar[2].tableStmt
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1084
		{
			yyVAL.tableStmt = yyDollar[2].tableStmt
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1088
		{
			setLockIfPossible(yylex, yyDollar[2].tableStmt, yyDollar[3].lock)
			yyVAL.tableStmt = yyDollar[2].tableStmt
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1111
		{
			yyDollar[1].tableStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].tableStmt.SetLimit(yyDollar[3].limit)
			yyVAL.tableStmt = yyDollar[1].tableStmt
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1117
		{
			yyDollar[1].tableStmt.SetLimit(yyDollar[2].limit)
			yyVAL.tableStmt = yyDollar[1].tableStmt
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1122
		{
			yyDollar[1].tableStmt.SetOrderBy(yyDollar[2].orderBy)
			yyDollar[1].tableStmt.SetLimit(yyDollar[3].limit)
			yyVAL.tableStmt = yyDollar[1].tableStmt
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1128
		{
			yyDollar[2].tableStmt.SetWith(yyDollar[1].with)
			yyDollar[2].tableStmt.SetOrderBy(yyDollar[3].orderBy)
			yyDollar[2].tableStmt.SetLimit(yyDollar[4].limit)
			yyVAL.tableStmt = yyDollar[2].tableStmt
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1135
		{
			yyDollar[2].tableStmt.SetWith(yyDollar[1].with)
			yyDollar[2].tableStmt.SetLimit(yyDollar[3].limit)
			yyVAL.tableStmt = yyDollar[2].tableStmt
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1141
		{
			yyDollar[2].tableStmt.SetWith(yyDollar[1].with)
			yyDollar[2].tableStmt.SetOrderBy(yyDollar[3].orderBy)
			yyDollar[2].tableStmt.SetLimit(yyDollar[4].limit)
			yyVAL.tableStmt = yyDollar[2].tableStmt
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1148
		{
			yyDollar[2].tableStmt.SetWith(yyDollar[1].with)
		}
	case 125:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:1152
		{
			yyVAL.tableStmt = NewSelect(Comments(yyDollar[2].strs), &SelectExprs{Exprs: []SelectExpr{&Nextval{Expr: yyDollar[5].expr}}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1158
		{
			yyVAL.tableStmt = yyDollar[1].tableStmt
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1162
		{
			yyVAL.tableStmt = &Union{Left: yyDollar[1].tableStmt, Distinct: yyDollar[2].boolean, Right: yyDollar[3].tableStmt}
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1166
		{
			yyVAL.tableStmt = &Union{Left: yyDollar[1].tableStmt, Distinct: yyDollar[2].boolean, Right: yyDollar[3].tableStmt}
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1170
		{
			yyVAL.tableStmt = &Union{Left: yyDollar[1].tableStmt, Distinct: yyDollar[2].boolean, Right: yyDollar[3].tableStmt}
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1174
		{
			yyVAL.tableStmt = &Union{Left: yyDollar[1].tableStmt, Distinct: yyDollar[2].boolean, Right: yyDollar[3].tableStmt}
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1180
		{
			yyVAL.tableStmt = yyDollar[1].tableStmt
		}
	case 132:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1184
		{
			setLockIfPossible(yylex, yyDollar[1].tableStmt, yyDollar[2].lock)
			yyVAL.tableStmt = yyDollar[1].tableStmt
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1189
		{
			yyVAL.tableStmt = yyDollar[1].tableStmt
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1193
		{
			yyVAL.tableStmt = yyDollar[1].tableStmt
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1199
		{
			yyVAL.tableStmt = yyDollar[2].tableStmt
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1203
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmt, yyDollar[2].selectInto)
			yyVAL.tableStmt = yyDollar[1].tableStmt
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1208
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmt, yyDollar[2].selectInto)
			setLockIfPossible(yylex, yyDollar[1].tableStmt, yyDollar[3].lock)
			yyVAL.tableStmt = yyDollar[1].tableStmt
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1214
		{
			setLockIfPossible(yylex, yyDollar[1].tableStmt, yyDollar[2].lock)
			setIntoIfPossible(yylex, yyDollar[1].tableStmt, yyDollar[3].selectInto)
			yyVAL.tableStmt = yyDollar[1].tableStmt
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1220
		{
			setIntoIfPossible(yylex, yyDollar[1].tableStmt, yyDollar[2].selectInto)
			yyVAL.tableStmt = yyDollar[1].tableStmt
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1227
		{
			yyVAL.tableStmt = &ValuesStatement{Comments: Comments(yyDollar[2].strs).Parsed(), ListArg: ListArg(yyDollar[3].str[2:])}
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1231
		{
			yyVAL.tableStmt = &ValuesStatement{Comments: Comments(yyDollar[2].strs).Parsed(), Rows: yyDollar[3].values}
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:1237
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 143:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:1243
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 144:
		yyDollar = yyS[yypt-10 : yypt+1]
//line .\sql.y:1251
		{
			yyVAL.tableStmt = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectInto /*into*/, yyDollar[6].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[7].expr), yyDollar[8].groupBy, NewWhere(HavingClause, yyDollar[9].expr), yyDollar[10].namedWindows)
		}
	case 145:
		yyDollar = yyS[yypt-9 : yypt+1]
//line .\sql.y:1255
		{
			yyVAL.tableStmt = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), yyDollar[7].groupBy, NewWhere(HavingClause, yyDollar[8].expr), yyDollar[9].namedWindows)
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1259
		{
			yyVAL.tableStmt = yyDollar[1].tableStmt
		}
	case 147:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:1265
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignore
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 148:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:1277
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignore, Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1289
		{
			yyVAL.insertAction = InsertAct
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1293
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 151:
		yyDollar = yyS[yypt-10 : yypt+1]
//line .\sql.y:1299
		{
			yyVAL.statement = &Update{With: yyDollar[1].with, Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignore, TableExprs: yyDollar[5].tableExprs, Exprs: yyDollar[7].updateExprs, Where: NewWhere(WhereClause, yyDollar[8].expr), OrderBy: yyDollar[9].orderBy, Limit: yyDollar[10].limit}
		}
	case 152:
		yyDollar = yyS[yypt-11 : yypt+1]
//line .\sql.y:1305
		{
			yyVAL.statement = &Delete{With: yyDollar[1].with, Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitions, Where: NewWhere(WhereClause, yyDollar[9].expr), OrderBy: yyDollar[10].orderBy, Limit: yyDollar[11].limit}
		}
	case 153:
		yyDollar = yyS[yypt-9 : yypt+1]
//line .\sql.y:1309
		{
			yyVAL.statement = &Delete{With: yyDollar[1].with, Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignore, Targets: yyDollar[6].tableNames, TableExprs: yyDollar[8].tableExprs, Where: NewWhere(WhereClause, yyDollar[9].expr)}
		}
	case 154:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:1313
		{
			yyVAL.statement = &Delete{With: yyDollar[1].with, Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 155:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:1317
		{
			yyVAL.statement = &Delete{With: yyDollar[1].with, Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1322
		{
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1323
		{
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1327
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1331
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1337
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1341
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1347
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1351
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1356
		{
			yyVAL.partitions = nil
		}
	case 165:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1360
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1366
		{
			yyVAL.statement = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprs)
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1372
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1376
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1382
		{
			yyVAL.setExpr = &SetExpr{Var: yyDollar[1].variable, Expr: NewStrLiteral("on")}
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1386
		{
			yyVAL.setExpr = &SetExpr{Var: yyDollar[1].variable, Expr: NewStrLiteral("off")}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1390
		{
			yyVAL.setExpr = &SetExpr{Var: yyDollar[1].variable, Expr: yyDollar[3].expr}
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1394
		{
			yyVAL.setExpr = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].expr}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1400
		{
			yyVAL.variable = NewSetVariable(string(yyDollar[1].str), NoScope)
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1404
		{
			yyVAL.variable = yyDollar[1].variable
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1408
		{
			yyVAL.variable = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scope)
		}
	case 176:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:1414
		{
			yyVAL.statement = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprs, yyDollar[3].scope))
		}
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1418
		{
			yyVAL.statement = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprs)
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1424
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1428
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1434
		{
			yyVAL.setExpr = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1438
		{
			yyVAL.setExpr = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1442
		{
			yyVAL.setExpr = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1448
		{
			yyVAL.str = RepeatableReadStr
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1452
		{
			yyVAL.str = ReadCommittedStr
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1456
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1460
		{
			yyVAL.str = SerializableStr
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1466
		{
			yyVAL.scope = SessionScope
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1470
		{
			yyVAL.scope = SessionScope
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1474
		{
			yyVAL.scope = GlobalScope
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1480
		{
			yyDollar[1].createTable.TableSpec = yyDollar[2].tableSpec
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1486
		{
			// Create table [name] like [name]
			yyDollar[1].createTable.OptLike = yyDollar[2].optLike
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1493
		{
			yyVAL.statement = yyDollar[1].createProcedure
		}
	case 193:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:1497
		{
			indexDef := yyDollar[1].alterTable.AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumns
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptions...)
			yyDollar[1].alterTable.AlterOptions = append(yyDollar[1].alterTable.AlterOptions, yyDollar[6].alterOptions...)
			yyDollar[1].alterTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 194:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:1506
		{
			yyDollar[1].createView.Columns = yyDollar[2].columns
			yyDollar[1].createView.Select = yyDollar[4].tableStmt
			yyDollar[1].createView.CheckOption = yyDollar[5].str
			yyVAL.statement = yyDollar[1].createView
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1513
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].databaseOptions
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1521
		{
			yyVAL.boolean = true
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1526
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1530
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1536
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1541
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1546
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1552
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1557
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1563
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1568
		{
			yyVAL.jsonObjectParams = nil
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1572
		{
			yyVAL.jsonObjectParams = yyDollar[1].jsonObjectParams
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1578
		{
			yyVAL.jsonObjectParams = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1582
		{
			yyVAL.jsonObjectParams = append(yyVAL.jsonObjectParams, yyDollar[3].jsonObjectParam)
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1588
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].expr, Value: yyDollar[3].expr}
		}
	case 210:
		yyDollar = yyS[yypt-10 : yypt+1]
//line .\sql.y:1594
		{
			yyVAL.createProcedure = &CreateProcedure{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[6].tableName, IfNotExists: yyDollar[5].boolean, Definer: yyDollar[3].definer, Params: yyDollar[8].procParams, Body: yyDollar[10].compoundStatement}
		}
	case 211:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:1600
		{
			yyVAL.createTable = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].boolean, Temp: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createTable)
		}
	case 212:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:1616
		{
			yyVAL.createView = &CreateView{ViewName: yyDollar[6].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Definer: yyDollar[3].definer, Security: yyDollar[4].str}
		}
	case 213:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:1620
		{
			yyVAL.createView = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].boolean, Algorithm: yyDollar[4].str, Definer: yyDollar[5].definer, Security: yyDollar[6].str}
		}
	case 214:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:1624
		{
			yyVAL.createView = &CreateView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definer, Security: yyDollar[5].str}
		}
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1631
		{
			yyVAL.alterTable = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 216:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:1638
		{
			yyVAL.alterTable = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI}, Options: yyDollar[5].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 217:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:1643
		{
			yyVAL.alterTable = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeFullText}, Options: yyDollar[6].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 218:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:1648
		{
			yyVAL.alterTable = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeSpatial}, Options: yyDollar[6].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 219:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:1653
		{
			yyVAL.alterTable = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: IndexTypeUnique}, Options: yyDollar[6].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 220:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:1660
		{
			yyVAL.createDatabase = &CreateDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfNotExists: yyDollar[4].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1667
		{
			yyVAL.alterDatabase = &AlterDatabase{Comments: Comments(yyDollar[2].strs).Parsed()}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 224:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:1678
		{
			yyVAL.tableSpec = yyDollar[2].tableSpec
			yyVAL.tableSpec.Options = yyDollar[4].tableOptions
			yyVAL.tableSpec.PartitionOption = yyDollar[5].partitionOption
		}
	case 225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1685
		{
			yyVAL.databaseOptions = nil
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1689
		{
			yyVAL.databaseOptions = yyDollar[1].databaseOptions
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1695
		{
			yyVAL.databaseOptions = []DatabaseOption{yyDollar[1].databaseOption}
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1699
		{
			yyVAL.databaseOptions = []DatabaseOption{yyDollar[1].databaseOption}
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1703
		{
			yyVAL.databaseOptions = []DatabaseOption{yyDollar[1].databaseOption}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1707
		{
			yyVAL.databaseOptions = append(yyDollar[1].databaseOptions, yyDollar[2].databaseOption)
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1711
		{
			yyVAL.databaseOptions = append(yyDollar[1].databaseOptions, yyDollar[2].databaseOption)
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1715
		{
			yyVAL.databaseOptions = append(yyDollar[1].databaseOptions, yyDollar[2].databaseOption)
		}
	case 233:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1721
		{
			yyVAL.boolean = false
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1725
		{
			yyVAL.boolean = true
		}
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1731
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].boolean}
		}
	case 236:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1735
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].boolean}
		}
	case 237:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1741
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].boolean}
		}
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1745
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].boolean}
		}
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1751
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].boolean}
		}
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1755
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].boolean}
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1761
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1765
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1771
		{
			yyVAL.columnDefinitions = []*ColumnDefinition{yyDollar[1].columnDefinition}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1775
		{
			yyVAL.columnDefinitions = append(yyDollar[1].columnDefinitions, yyDollar[3].columnDefinition)
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1781
		{
			yyVAL.tableSpec = &TableSpec{}
			yyVAL.tableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1786
		{
			yyVAL.tableSpec = &TableSpec{}
			yyVAL.tableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1791
		{
			yyVAL.tableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 248:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1795
		{
			yyVAL.tableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.tableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1800
		{
			yyVAL.tableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1804
		{
			yyVAL.tableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1808
		{
			yyVAL.tableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 252:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:1819
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptions
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinition
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
	case 253:
		yyDollar = yyS[yypt-10 : yypt+1]
//line .\sql.y:1828
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptions
			yyDollar[2].columnType.Options.As = yyDollar[7].expr
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinition
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
	case 254:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1837
		{
			yyVAL.str = ""
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1841
		{
			yyVAL.str = ""
		}
	case 256:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1850
		{
			yyVAL.columnTypeOptions = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1854
		{
			yyDollar[1].columnTypeOptions.Null = ptr.Of(true)
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1859
		{
			yyDollar[1].columnTypeOptions.Null = ptr.Of(false)
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:1864
		{
			yyDollar[1].columnTypeOptions.Default = yyDollar[4].expr
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1869
		{
			yyDollar[1].columnTypeOptions.Default = yyDollar[3].expr
			yyDollar[1].columnTypeOptions.DefaultLiteral = true
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1875
		{
			yyDollar[1].columnTypeOptions.OnUpdate = yyDollar[4].expr
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1880
		{
			yyDollar[1].columnTypeOptions.Autoincrement = true
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1885
		{
			yyDollar[1].columnTypeOptions.Comment = NewStrLiteral(yyDollar[3].str)
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1890
		{
			yyDollar[1].columnTypeOptions.KeyOpt = yyDollar[2].colKeyOpt
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1895
		{
			yyDollar[1].columnTypeOptions.Collate = encodeSQLString(yyDollar[3].str)
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1899
		{
			yyDollar[1].columnTypeOptions.Collate = string(yyDollar[3].identifierCI.String())
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1904
		{
			yyDollar[1].columnTypeOptions.Format = yyDollar[3].columnFormat
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1908
		{
			yyDollar[1].columnTypeOptions.SRID = NewIntLiteral(yyDollar[3].str)
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1913
		{
			yyDollar[1].columnTypeOptions.Invisible = ptr.Of(false)
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1918
		{
			yyDollar[1].columnTypeOptions.Invisible = ptr.Of(true)
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1923
		{
			yyDollar[1].columnTypeOptions.EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:1927
		{
			yyDollar[1].columnTypeOptions.SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1933
		{
			yyVAL.columnFormat = FixedFormat
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1937
		{
			yyVAL.columnFormat = DynamicFormat
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1941
		{
			yyVAL.columnFormat = DefaultFormat
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1945
		{
			yyVAL.columnFormat = CompressedFormat
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1951
		{
			yyVAL.columnStorage = VirtualStorage
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:1955
		{
			yyVAL.columnStorage = StoredStorage
		}
	case 279:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:1960
		{
			yyVAL.columnTypeOptions = &ColumnTypeOptions{}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1964
		{
			yyDollar[1].columnTypeOptions.Storage = yyDollar[2].columnStorage
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1969
		{
			yyDollar[1].columnTypeOptions.Null = ptr.Of(true)
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1974
		{
			yyDollar[1].columnTypeOptions.Null = ptr.Of(false)
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1979
		{
			yyDollar[1].columnTypeOptions.Comment = NewStrLiteral(yyDollar[3].str)
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1984
		{
			yyDollar[1].columnTypeOptions.KeyOpt = yyDollar[2].colKeyOpt
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:1989
		{
			yyDollar[1].columnTypeOptions.SRID = NewIntLiteral(yyDollar[3].str)
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1994
		{
			yyDollar[1].columnTypeOptions.Invisible = ptr.Of(false)
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:1999
		{
			yyDollar[1].columnTypeOptions.Invisible = ptr.Of(true)
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2006
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2013
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integer}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2017
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integer}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2021
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integer}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2025
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integer}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2029
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integer}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2033
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integer}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2043
		{
			yyVAL.expr = &NullVal{}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2050
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2054
		{
			yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2060
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2064
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2068
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2072
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].str)
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2076
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].str)
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2080
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].str)
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2084
		{
			yyVAL.expr = NewBitLiteral("0b" + yyDollar[1].str)
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2088
		{
			yyVAL.expr = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2092
		{
			yyVAL.expr = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral("0b" + yyDollar[2].str)}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2096
		{
			yyVAL.expr = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2100
		{
			yyVAL.expr = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2104
		{
			yyVAL.expr = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2108
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyVAL.expr = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2113
		{
			yyVAL.expr = NewDateLiteral(yyDollar[2].str)
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2117
		{
			yyVAL.expr = NewTimeLiteral(yyDollar[2].str)
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2121
		{
			yyVAL.expr = NewTimestampLiteral(yyDollar[2].str)
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2127
		{
			yyVAL.str = Armscii8Str
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2131
		{
			yyVAL.str = ASCIIStr
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2135
		{
			yyVAL.str = Big5Str
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2139
		{
			yyVAL.str = UBinaryStr
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2143
		{
			yyVAL.str = Cp1250Str
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2147
		{
			yyVAL.str = Cp1251Str
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2151
		{
			yyVAL.str = Cp1256Str
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2155
		{
			yyVAL.str = Cp1257Str
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2159
		{
			yyVAL.str = Cp850Str
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2163
		{
			yyVAL.str = Cp852Str
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2167
		{
			yyVAL.str = Cp866Str
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2171
		{
			yyVAL.str = Cp932Str
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2175
		{
			yyVAL.str = Dec8Str
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2179
		{
			yyVAL.str = EucjpmsStr
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2183
		{
			yyVAL.str = EuckrStr
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2187
		{
			yyVAL.str = Gb18030Str
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2191
		{
			yyVAL.str = Gb2312Str
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2195
		{
			yyVAL.str = GbkStr
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2199
		{
			yyVAL.str = Geostd8Str
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2203
		{
			yyVAL.str = GreekStr
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2207
		{
			yyVAL.str = HebrewStr
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2211
		{
			yyVAL.str = Hp8Str
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2215
		{
			yyVAL.str = Keybcs2Str
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2219
		{
			yyVAL.str = Koi8rStr
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2223
		{
			yyVAL.str = Koi8uStr
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2227
		{
			yyVAL.str = Latin1Str
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2231
		{
			yyVAL.str = Latin2Str
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2235
		{
			yyVAL.str = Latin5Str
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2239
		{
			yyVAL.str = Latin7Str
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2243
		{
			yyVAL.str = MacceStr
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2247
		{
			yyVAL.str = MacromanStr
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2251
		{
			yyVAL.str = SjisStr
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2255
		{
			yyVAL.str = Swe7Str
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2259
		{
			yyVAL.str = Tis620Str
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2263
		{
			yyVAL.str = Ucs2Str
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2267
		{
			yyVAL.str = UjisStr
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2271
		{
			yyVAL.str = Utf16Str
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2275
		{
			yyVAL.str = Utf16leStr
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2279
		{
			yyVAL.str = Utf32Str
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2283
		{
			yyVAL.str = Utf8mb3Str
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2287
		{
			yyVAL.str = Utf8mb4Str
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2291
		{
			yyVAL.str = Utf8mb3Str
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2301
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].str)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2305
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].str)
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2309
		{
			yyVAL.expr = NewDecimalLiteral(yyDollar[1].str)
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2315
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2319
		{
			yyVAL.expr = AppendString(yyDollar[1].expr, yyDollar[2].str)
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2325
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].str)
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2329
		{
			yyVAL.expr = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2333
		{
			yyVAL.expr = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2339
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2343
		{
			yyVAL.expr = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2349
		{
			yyVAL.colKeyOpt = ColKeyPrimary
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2353
		{
			yyVAL.colKeyOpt = ColKeyUnique
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2357
		{
			yyVAL.colKeyOpt = ColKeyUniqueKey
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2361
		{
			yyVAL.colKeyOpt = ColKey
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2367
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2378
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].intPtr
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2383
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2389
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2393
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2397
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2401
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2405
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2409
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2413
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2417
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2421
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2427
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2433
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2439
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2445
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2451
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2457
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2463
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2471
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2475
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtr}
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2479
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtr}
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2483
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtr}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2487
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtr}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2493
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtr, Charset: yyDollar[3].columnCharset}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2497
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].intPtr}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2503
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtr, Charset: yyDollar[3].columnCharset}
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2507
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtr}
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2511
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtr}
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2515
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtr, Charset: yyDollar[3].columnCharset}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2519
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2523
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2527
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2531
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtr}
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2535
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2539
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2543
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2547
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:2551
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2555
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtr}
		}
	case 419:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:2560
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2566
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2570
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2574
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2578
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2582
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2586
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2590
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2594
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2600
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2605
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2610
		{
			yyVAL.intPtr = nil
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2614
		{
			yyVAL.intPtr = ptr.Of(convertStringToInt(yyDollar[2].str))
		}
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2619
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 433:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:2623
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2632
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2636
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2643
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2647
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
			}
		}
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:2653
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: ptr.Of(convertStringToInt(yyDollar[2].str)),
				Scale:  ptr.Of(convertStringToInt(yyDollar[4].str)),
			}
		}
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2661
		{
			yyVAL.boolean = false
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2665
		{
			yyVAL.boolean = true
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2669
		{
			yyVAL.boolean = false
		}
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2674
		{
			yyVAL.boolean = false
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2678
		{
			yyVAL.boolean = true
		}
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2683
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2687
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].boolean}
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2691
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].boolean}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2695
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2699
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].boolean}
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2704
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].boolean}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2709
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2714
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2719
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2725
		{
			yyVAL.boolean = false
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2729
		{
			yyVAL.boolean = true
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2734
		{
			yyVAL.str = ""
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2738
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2742
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:2748
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2753
		{
			yyVAL.indexOptions = nil
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2757
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2763
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2767
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2773
		{
			yyVAL.indexOption = yyDollar[1].indexOption
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2777
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2782
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2786
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].str)}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2790
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].str)}
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2794
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2798
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2802
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2808
		{
			yyVAL.str = ""
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2812
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:2818
		{
			yyVAL.indexInfo = &IndexInfo{Type: IndexTypePrimary, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY")}
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2822
		{
			yyVAL.indexInfo = &IndexInfo{Type: IndexTypeSpatial, Name: NewIdentifierCI(yyDollar[3].str)}
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2826
		{
			yyVAL.indexInfo = &IndexInfo{Type: IndexTypeFullText, Name: NewIdentifierCI(yyDollar[3].str)}
		}
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:2830
		{
			yyVAL.indexInfo = &IndexInfo{Type: IndexTypeUnique, ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str)}
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2834
		{
			yyVAL.indexInfo = &IndexInfo{Type: IndexTypeDefault, Name: NewIdentifierCI(yyDollar[2].str)}
		}
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2839
		{
			yyVAL.str = ""
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2843
		{
			yyVAL.str = yyDollar[2].str
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2849
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2853
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2857
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2863
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2867
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2872
		{
			yyVAL.str = ""
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2876
		{
			yyVAL.str = yyDollar[1].str
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2882
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2886
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2891
		{
			yyVAL.str = ""
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2895
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2901
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2905
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2911
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].intPtr, Direction: yyDollar[3].orderDirection}
		}
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:2915
		{
			yyVAL.indexColumn = &IndexColumn{Expression: yyDollar[2].expr, Direction: yyDollar[4].orderDirection}
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2921
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfo}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2925
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:2931
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfo}
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2935
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 499:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:2941
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columns, ReferenceDefinition: yyDollar[7].referenceDefinition}
		}
	case 500:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:2947
		{
			yyVAL.referenceDefinition = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columns, Match: yyDollar[6].matchAction}
		}
	case 501:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:2951
		{
			yyVAL.referenceDefinition = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columns, Match: yyDollar[6].matchAction, OnDelete: yyDollar[7].referenceAction}
		}
	case 502:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:2955
		{
			yyVAL.referenceDefinition = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columns, Match: yyDollar[6].matchAction, OnUpdate: yyDollar[7].referenceAction}
		}
	case 503:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:2959
		{
			yyVAL.referenceDefinition = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columns, Match: yyDollar[6].matchAction, OnDelete: yyDollar[7].referenceAction, OnUpdate: yyDollar[8].referenceAction}
		}
	case 504:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:2963
		{
			yyVAL.referenceDefinition = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columns, Match: yyDollar[6].matchAction, OnUpdate: yyDollar[7].referenceAction, OnDelete: yyDollar[8].referenceAction}
		}
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:2968
		{
			yyVAL.referenceDefinition = nil
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2972
		{
			yyVAL.referenceDefinition = yyDollar[1].referenceDefinition
		}
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:2978
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:2984
		{
			yyVAL.matchAction = yyDollar[2].matchAction
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2990
		{
			yyVAL.matchAction = Full
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2994
		{
			yyVAL.matchAction = Partial
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:2998
		{
			yyVAL.matchAction = Simple
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3003
		{
			yyVAL.matchAction = DefaultMatch
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3007
		{
			yyVAL.matchAction = yyDollar[1].matchAction
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3013
		{
			yyVAL.referenceAction = yyDollar[3].referenceAction
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3019
		{
			yyVAL.referenceAction = yyDollar[3].referenceAction
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3025
		{
			yyVAL.referenceAction = Restrict
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3029
		{
			yyVAL.referenceAction = Cascade
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3033
		{
			yyVAL.referenceAction = NoAction
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3037
		{
			yyVAL.referenceAction = SetDefault
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3041
		{
			yyVAL.referenceAction = SetNull
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3046
		{
			yyVAL.str = ""
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3050
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3054
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3060
		{
			yyVAL.boolean = true
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3064
		{
			yyVAL.boolean = false
		}
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3069
		{
			yyVAL.boolean = true
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3073
		{
			yyVAL.boolean = yyDollar[1].boolean
		}
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3078
		{
			yyVAL.tableOptions = nil
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3082
		{
			yyVAL.tableOptions = yyDollar[1].tableOptions
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3088
		{
			yyVAL.tableOptions = TableOptions{yyDollar[1].tableOption}
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3092
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[3].tableOption)
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3096
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[2].tableOption)
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3102
		{
			yyVAL.tableOptions = TableOptions{yyDollar[1].tableOption}
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3106
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[2].tableOption)
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3112
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3116
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3120
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:3124
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:3128
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3132
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3136
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3140
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3144
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:3148
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:3152
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3156
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3160
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3164
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3168
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3172
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3176
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3180
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3184
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3188
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3192
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3196
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3200
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3204
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3208
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3212
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3216
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3220
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3224
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:3228
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str), CaseSensitive: true}
		}
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3232
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNames}
		}
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3237
		{
			yyVAL.str = ""
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3241
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3245
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3264
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3268
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3272
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3276
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3281
		{
			yyVAL.str = ""
		}
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3287
		{
			yyVAL.boolean = false
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3291
		{
			yyVAL.boolean = true
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3296
		{
			yyVAL.colName = nil
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3300
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3305
		{
			yyVAL.str = ""
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3309
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3314
		{
			yyVAL.literal = nil
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3318
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].str)
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3322
		{
			yyVAL.literal = NewDecimalLiteral(yyDollar[2].str)
		}
	case 593:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3327
		{
			yyVAL.alterOptions = nil
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3331
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3335
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, &OrderByOption{Cols: yyDollar[5].columns})
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3339
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3343
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOptions...)
		}
	case 598:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:3347
		{
			yyVAL.alterOptions = append(append(yyDollar[1].alterOptions, yyDollar[3].alterOptions...), &OrderByOption{Cols: yyDollar[7].columns})
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3353
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3357
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3361
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3367
		{
			yyVAL.alterOption = yyDollar[1].tableOptions
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3371
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3375
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3379
		{
			yyVAL.alterOption = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinition}
		}
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3383
		{
			yyVAL.alterOption = &AddColumns{Columns: yyDollar[4].columnDefinitions}
		}
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3387
		{
			yyVAL.alterOption = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinition}, First: yyDollar[4].boolean, After: yyDollar[5].colName}
		}
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3391
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: true}
		}
	case 609:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:3395
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: false, DefaultVal: yyDollar[6].expr, DefaultLiteral: true}
		}
	case 610:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:3399
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: false, DefaultVal: yyDollar[7].expr}
		}
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3403
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, Invisible: ptr.Of(false)}
		}
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3407
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, Invisible: ptr.Of(true)}
		}
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:3411
		{
			yyVAL.alterOption = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].boolean}
		}
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:3415
		{
			yyVAL.alterOption = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:3419
		{
			yyVAL.alterOption = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
	case 616:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:3423
		{
			yyVAL.alterOption = &ChangeColumn{OldColumn: yyDollar[3].colName, NewColDefinition: yyDollar[4].columnDefinition, First: yyDollar[5].boolean, After: yyDollar[6].colName}
		}
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3427
		{
			yyVAL.alterOption = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinition, First: yyDollar[4].boolean, After: yyDollar[5].colName}
		}
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3431
		{
			yyVAL.alterOption = &RenameColumn{OldName: yyDollar[3].colName, NewName: yyDollar[5].colName}
		}
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3435
		{
			yyVAL.alterOption = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3439
		{
			yyVAL.alterOption = &KeyState{Enable: false}
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3443
		{
			yyVAL.alterOption = &KeyState{Enable: true}
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3447
		{
			yyVAL.alterOption = &TablespaceOperation{Import: false}
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3451
		{
			yyVAL.alterOption = &TablespaceOperation{Import: true}
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3455
		{
			yyVAL.alterOption = &DropColumn{Name: yyDollar[3].colName}
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3459
		{
			yyVAL.alterOption = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3463
		{
			yyVAL.alterOption = &DropKey{Type: PrimaryKeyType}
		}
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:3467
		{
			yyVAL.alterOption = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3471
		{
			yyVAL.alterOption = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3475
		{
			yyVAL.alterOption = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3479
		{
			yyVAL.alterOption = &Force{}
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3483
		{
			yyVAL.alterOption = &RenameTableName{Table: yyDollar[3].tableName}
		}
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3487
		{
			yyVAL.alterOption = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3493
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3497
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3503
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].str))
		}
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3507
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].str))
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3511
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].str))
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3515
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].str))
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3519
		{
			yyVAL.alterOption = &LockOption{Type: DefaultType}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3523
		{
			yyVAL.alterOption = &LockOption{Type: NoneType}
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3527
		{
			yyVAL.alterOption = &LockOption{Type: SharedType}
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3531
		{
			yyVAL.alterOption = &LockOption{Type: ExclusiveType}
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3535
		{
			yyVAL.alterOption = &Validation{With: true}
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3539
		{
			yyVAL.alterOption = &Validation{With: false}
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3545
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyDollar[1].alterTable.PartitionOption = yyDollar[3].partitionOption
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:3552
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyDollar[1].alterTable.PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:3559
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyDollar[1].alterTable.PartitionSpec = yyDollar[4].partSpec
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3566
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.PartitionSpec = yyDollar[2].partSpec
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 649:
		yyDollar = yyS[yypt-11 : yypt+1]
//line .\sql.y:3572
		{
			yyVAL.statement = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definer, Security: yyDollar[5].str, Columns: yyDollar[8].columns, Select: yyDollar[10].tableStmt, CheckOption: yyDollar[11].str}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3582
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].databaseOptions
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 651:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:3589
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 652:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:3596
		{
			yyVAL.statement = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParams,
				},
			}
		}
	case 653:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:3608
		{
			yyVAL.statement = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
	case 654:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:3618
		{
			yyVAL.statement = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
	case 655:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:3622
		{
			yyVAL.statement = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
	case 656:
		yyDollar = yyS[yypt-13 : yypt+1]
//line .\sql.y:3626
		{
			yyVAL.statement = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParams,
				},
				VindexCols: yyDollar[10].columns,
			}
		}
	case 657:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:3639
		{
			yyVAL.statement = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
	case 658:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:3649
		{
			yyVAL.statement = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
	case 659:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:3653
		{
			yyVAL.statement = &AlterVschema{Action: DropSequenceDDLAction, Table: yyDollar[6].tableName}
		}
	case 660:
		yyDollar = yyS[yypt-10 : yypt+1]
//line .\sql.y:3657
		{
			yyVAL.statement = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
	case 661:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:3668
		{
			yyVAL.statement = &AlterVschema{
				Action: DropAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
			}
		}
	case 662:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3675
		{
			yyVAL.statement = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
	case 663:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3682
		{
			yyVAL.statement = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
	case 664:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3689
		{
			yyVAL.statement = &AlterMigration{
				Type: CleanupAllMigrationType,
			}
		}
	case 665:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3695
		{
			yyVAL.statement = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
	case 666:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:3702
		{
			yyVAL.statement = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3710
		{
			yyVAL.statement = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
	case 668:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3716
		{
			yyVAL.statement = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
	case 669:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3723
		{
			yyVAL.statement = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
	case 670:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:3729
		{
			yyVAL.statement = &AlterMigration{
				Type: PostponeCompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
	case 671:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:3736
		{
			yyVAL.statement = &AlterMigration{
				Type: PostponeCompleteAllMigrationType,
			}
		}
	case 672:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3742
		{
			yyVAL.statement = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
	case 673:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3749
		{
			yyVAL.statement = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
	case 674:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:3755
		{
			yyVAL.statement = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literal,
			}
		}
	case 675:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:3764
		{
			yyVAL.statement = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literal,
			}
		}
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3772
		{
			yyVAL.statement = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
	case 677:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3779
		{
			yyVAL.statement = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3785
		{
			yyVAL.statement = &AlterMigration{
				Type: ForceCutOverMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3792
		{
			yyVAL.statement = &AlterMigration{
				Type: ForceCutOverAllMigrationType,
			}
		}
	case 680:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:3798
		{
			yyVAL.statement = &AlterMigration{
				Type:      SetCutOverThresholdMigrationType,
				UUID:      string(yyDollar[4].str),
				Threshold: yyDollar[6].str,
			}
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3807
		{
			yyVAL.partitionOption = nil
		}
	case 682:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:3811
		{
			yyDollar[3].partitionOption.Partitions = yyDollar[4].integer
			yyDollar[3].partitionOption.SubPartition = yyDollar[5].subPartition
			yyDollar[3].partitionOption.Definitions = yyDollar[6].partDefs
			yyVAL.partitionOption = yyDollar[3].partitionOption
		}
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3820
		{
			yyVAL.partitionOption = &PartitionOption{
				IsLinear: yyDollar[1].boolean,
				Type:     HashType,
				Expr:     yyDollar[4].expr,
			}
		}
	case 684:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:3828
		{
			yyVAL.partitionOption = &PartitionOption{
				IsLinear:     yyDollar[1].boolean,
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integer,
				ColList:      yyDollar[5].columns,
			}
		}
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:3837
		{
			yyVAL.partitionOption = &PartitionOption{
				Type: yyDollar[1].partitionByType,
				Expr: yyDollar[3].expr,
			}
		}
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:3844
		{
			yyVAL.partitionOption = &PartitionOption{
				Type:    yyDollar[1].partitionByType,
				ColList: yyDollar[4].columns,
			}
		}
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3852
		{
			yyVAL.subPartition = nil
		}
	case 688:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:3856
		{
			yyVAL.subPartition = &SubPartition{
				IsLinear:      yyDollar[3].boolean,
				Type:          HashType,
				Expr:          yyDollar[6].expr,
				SubPartitions: yyDollar[8].integer,
			}
		}
	case 689:
		yyDollar = yyS[yypt-9 : yypt+1]
//line .\sql.y:3865
		{
			yyVAL.subPartition = &SubPartition{
				IsLinear:      yyDollar[3].boolean,
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integer,
				ColList:       yyDollar[7].columns,
				SubPartitions: yyDollar[9].integer,
			}
		}
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3876
		{
			yyVAL.partDefs = nil
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3880
		{
			yyVAL.partDefs = yyDollar[2].partDefs
		}
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3885
		{
			yyVAL.boolean = false
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3889
		{
			yyVAL.boolean = true
		}
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3894
		{
			yyVAL.integer = 0
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3898
		{
			yyVAL.integer = convertStringToInt(yyDollar[3].str)
		}
	case 696:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:3904
		{
			yyVAL.tableExpr = &JSONTableExpr{Expr: yyDollar[3].expr, Filter: yyDollar[5].expr, Columns: yyDollar[6].jtColumnList, Alias: yyDollar[8].identifierCS}
		}
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:3910
		{
			yyVAL.jtColumnList = yyDollar[3].jtColumnList
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3916
		{
			yyVAL.jtColumnList = []*JtColumnDefinition{yyDollar[1].jtColumnDefinition}
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3920
		{
			yyVAL.jtColumnList = append(yyDollar[1].jtColumnList, yyDollar[3].jtColumnDefinition)
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3926
		{
			yyVAL.jtColumnDefinition = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
	case 701:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:3930
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].boolean, Path: yyDollar[6].expr}
			yyVAL.jtColumnDefinition = &JtColumnDefinition{JtPath: jtPath}
		}
	case 702:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:3936
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].boolean, Path: yyDollar[6].expr, EmptyOnResponse: yyDollar[7].jtOnResponse}
			yyVAL.jtColumnDefinition = &JtColumnDefinition{JtPath: jtPath}
		}
	case 703:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:3942
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].boolean, Path: yyDollar[6].expr, ErrorOnResponse: yyDollar[7].jtOnResponse}
			yyVAL.jtColumnDefinition = &JtColumnDefinition{JtPath: jtPath}
		}
	case 704:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:3948
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].boolean, Path: yyDollar[6].expr, EmptyOnResponse: yyDollar[7].jtOnResponse, ErrorOnResponse: yyDollar[8].jtOnResponse}
			yyVAL.jtColumnDefinition = &JtColumnDefinition{JtPath: jtPath}
		}
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:3954
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].expr, Columns: yyDollar[4].jtColumnList}
			yyVAL.jtColumnDefinition = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3960
		{
			yyVAL.boolean = false
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3964
		{
			yyVAL.boolean = true
		}
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:3968
		{
			yyVAL.boolean = false
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3972
		{
			yyVAL.boolean = true
		}
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3978
		{
			yyVAL.jtOnResponse = yyDollar[1].jtOnResponse
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:3984
		{
			yyVAL.jtOnResponse = yyDollar[1].jtOnResponse
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3990
		{
			yyVAL.jtOnResponse = &JtOnResponse{ResponseType: ErrorJSONType}
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:3994
		{
			yyVAL.jtOnResponse = &JtOnResponse{ResponseType: NullJSONType}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:3998
		{
			yyVAL.jtOnResponse = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].expr}
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4004
		{
			yyVAL.partitionByType = RangeType
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4008
		{
			yyVAL.partitionByType = ListType
		}
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:4013
		{
			yyVAL.integer = -1
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4017
		{
			yyVAL.integer = convertStringToInt(yyDollar[2].str)
		}
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:4022
		{
			yyVAL.integer = -1
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4026
		{
			yyVAL.integer = convertStringToInt(yyDollar[2].str)
		}
	case 721:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:4032
		{
			yyVAL.partSpec = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDef}}
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4036
		{
			yyVAL.partSpec = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitions}
		}
	case 723:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:4040
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitions, Definitions: yyDollar[6].partDefs}
		}
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4044
		{
			yyVAL.partSpec = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitions}
		}
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4048
		{
			yyVAL.partSpec = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4052
		{
			yyVAL.partSpec = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitions}
		}
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4056
		{
			yyVAL.partSpec = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4060
		{
			yyVAL.partSpec = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitions}
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4064
		{
			yyVAL.partSpec = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4068
		{
			yyVAL.partSpec = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
	case 731:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:4072
		{
			yyVAL.partSpec = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].boolean}
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4076
		{
			yyVAL.partSpec = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitions}
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4080
		{
			yyVAL.partSpec = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4084
		{
			yyVAL.partSpec = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitions}
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4088
		{
			yyVAL.partSpec = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4092
		{
			yyVAL.partSpec = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitions}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4096
		{
			yyVAL.partSpec = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4100
		{
			yyVAL.partSpec = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitions}
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4104
		{
			yyVAL.partSpec = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4108
		{
			yyVAL.partSpec = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitions}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4112
		{
			yyVAL.partSpec = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4116
		{
			yyVAL.partSpec = &PartitionSpec{Action: UpgradeAction}
		}
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:4121
		{
			yyVAL.boolean = false
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4125
		{
			yyVAL.boolean = false
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4129
		{
			yyVAL.boolean = true
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4135
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4139
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4145
		{
			yyVAL.partDef.Options = yyDollar[2].partitionDefinitionOptions
		}
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:4150
		{
			yyVAL.partitionDefinitionOptions = &PartitionDefinitionOptions{}
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4154
		{
			yyDollar[1].partitionDefinitionOptions.ValueRange = yyDollar[2].partitionValueRange
			yyVAL.partitionDefinitionOptions = yyDollar[1].partitionDefinitionOptions
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4159
		{
			yyDollar[1].partitionDefinitionOptions.Comment = yyDollar[2].literal
			yyVAL.partitionDefinitionOptions = yyDollar[1].partitionDefinitionOptions
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4164
		{
			yyDollar[1].partitionDefinitionOptions.Engine = yyDollar[2].partitionEngine
			yyVAL.partitionDefinitionOptions = yyDollar[1].partitionDefinitionOptions
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4169
		{
			yyDollar[1].partitionDefinitionOptions.DataDirectory = yyDollar[2].literal
			yyVAL.partitionDefinitionOptions = yyDollar[1].partitionDefinitionOptions
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4174
		{
			yyDollar[1].partitionDefinitionOptions.IndexDirectory = yyDollar[2].literal
			yyVAL.partitionDefinitionOptions = yyDollar[1].partitionDefinitionOptions
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4179
		{
			yyDollar[1].partitionDefinitionOptions.MaxRows = ptr.Of(yyDollar[2].integer)
			yyVAL.partitionDefinitionOptions = yyDollar[1].partitionDefinitionOptions
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4184
		{
			yyDollar[1].partitionDefinitionOptions.MinRows = ptr.Of(yyDollar[2].integer)
			yyVAL.partitionDefinitionOptions = yyDollar[1].partitionDefinitionOptions
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4189
		{
			yyDollar[1].partitionDefinitionOptions.TableSpace = yyDollar[2].str
			yyVAL.partitionDefinitionOptions = yyDollar[1].partitionDefinitionOptions
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4194
		{
			yyDollar[1].partitionDefinitionOptions.SubPartitionDefinitions = yyDollar[2].subPartitionDefinitions
			yyVAL.partitionDefinitionOptions = yyDollar[1].partitionDefinitionOptions
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4200
		{
			yyVAL.subPartitionDefinitions = yyDollar[2].subPartitionDefinitions
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4206
		{
			yyVAL.subPartitionDefinitions = SubPartitionDefinitions{yyDollar[1].subPartitionDefinition}
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4210
		{
			yyVAL.subPartitionDefinitions = append(yyDollar[1].subPartitionDefinitions, yyDollar[3].subPartitionDefinition)
		}
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4216
		{
			yyVAL.subPartitionDefinition = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptions}
		}
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:4221
		{
			yyVAL.subPartitionDefinitionOptions = &SubPartitionDefinitionOptions{}
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4225
		{
			yyDollar[1].subPartitionDefinitionOptions.Comment = yyDollar[2].literal
			yyVAL.subPartitionDefinitionOptions = yyDollar[1].subPartitionDefinitionOptions
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4230
		{
			yyDollar[1].subPartitionDefinitionOptions.Engine = yyDollar[2].partitionEngine
			yyVAL.subPartitionDefinitionOptions = yyDollar[1].subPartitionDefinitionOptions
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4235
		{
			yyDollar[1].subPartitionDefinitionOptions.DataDirectory = yyDollar[2].literal
			yyVAL.subPartitionDefinitionOptions = yyDollar[1].subPartitionDefinitionOptions
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4240
		{
			yyDollar[1].subPartitionDefinitionOptions.IndexDirectory = yyDollar[2].literal
			yyVAL.subPartitionDefinitionOptions = yyDollar[1].subPartitionDefinitionOptions
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4245
		{
			yyDollar[1].subPartitionDefinitionOptions.MaxRows = ptr.Of(yyDollar[2].integer)
			yyVAL.subPartitionDefinitionOptions = yyDollar[1].subPartitionDefinitionOptions
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4250
		{
			yyDollar[1].subPartitionDefinitionOptions.MinRows = ptr.Of(yyDollar[2].integer)
			yyVAL.subPartitionDefinitionOptions = yyDollar[1].subPartitionDefinitionOptions
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4255
		{
			yyDollar[1].subPartitionDefinitionOptions.TableSpace = yyDollar[2].str
			yyVAL.subPartitionDefinitionOptions = yyDollar[1].subPartitionDefinitionOptions
		}
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4262
		{
			yyVAL.partitionValueRange = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTuple,
			}
		}
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4269
		{
			yyVAL.partitionValueRange = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4276
		{
			yyVAL.partitionValueRange = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTuple,
			}
		}
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:4284
		{
			yyVAL.boolean = false
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4288
		{
			yyVAL.boolean = true
		}
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4294
		{
			yyVAL.partitionEngine = &PartitionEngine{Storage: yyDollar[1].boolean, Name: yyDollar[4].identifierCS.String()}
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4300
		{
			yyVAL.literal = NewStrLiteral(yyDollar[3].str)
		}
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4306
		{
			yyVAL.literal = NewStrLiteral(yyDollar[4].str)
		}
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4312
		{
			yyVAL.literal = NewStrLiteral(yyDollar[4].str)
		}
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4318
		{
			yyVAL.integer = convertStringToInt(yyDollar[3].str)
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4324
		{
			yyVAL.integer = convertStringToInt(yyDollar[3].str)
		}
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4330
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4336
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4342
		{
			yyVAL.str = ""
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4346
		{
			yyVAL.str = ""
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4352
		{
			yyVAL.statement = &RenameTable{TablePairs: yyDollar[3].renameTablePairs}
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4358
		{
			yyVAL.renameTablePairs = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
	case 788:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:4362
		{
			yyVAL.renameTablePairs = append(yyDollar[1].renameTablePairs, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 789:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:4368
		{
			yyVAL.statement = &DropTable{FromTables: yyDollar[6].tableNames, IfExists: yyDollar[5].boolean, Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].boolean}
		}
	case 790:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:4372
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyVAL.statement = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptions...)}
			} else {
				yyVAL.statement = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptions...)}
			}
		}
	case 791:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:4381
		{
			yyVAL.statement = &DropView{FromTables: yyDollar[5].tableNames, Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].boolean}
		}
	case 792:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:4385
		{
			yyVAL.statement = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].boolean}
		}
	case 793:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:4389
		{
			yyVAL.statement = &DropProcedure{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[5].tableName, IfExists: yyDollar[4].boolean}
		}
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4395
		{
			yyVAL.statement = &TruncateTable{Table: yyDollar[3].tableName}
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4399
		{
			yyVAL.statement = &TruncateTable{Table: yyDollar[2].tableName}
		}
	case 796:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4405
		{
			yyVAL.statement = &Analyze{IsLocal: yyDollar[2].boolean, Table: yyDollar[4].tableName}
		}
	case 797:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:4411
		{
			yyVAL.statement = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
	case 798:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:4415
		{
			yyVAL.statement = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4421
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilter}}
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4425
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilter}}
		}
	case 801:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:4429
		{
			yyVAL.statement = &Show{&ShowBasic{Full: yyDollar[2].boolean, Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilter}}
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4433
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4437
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4441
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilter}}
		}
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4445
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilter}}
		}
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4449
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilter}}
		}
	case 807:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:4453
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilter}}
		}
	case 808:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:4457
		{
			yyVAL.statement = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilter}}
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4461
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Privilege}}
		}
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4465
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilter}}
		}
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4469
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilter}}
		}
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4473
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4477
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilter}}
		}
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4481
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 815:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:4485
		{
			yyVAL.statement = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilter}}
		}
	case 816:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:4489
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].boolean, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilter}}
		}
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4493
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilter}}
		}
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4497
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4501
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4505
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4509
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
	case 822:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4513
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4517
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4521
		{
			yyVAL.statement = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4525
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Engines}}
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4529
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Plugins}}
		}
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4533
		{
			yyVAL.statement = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4537
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4541
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilter}}
		}
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4545
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilter, DbName: yyDollar[3].identifierCS}}
		}
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4549
		{
			yyVAL.statement = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4553
		{
			yyVAL.statement = &ShowThrottledApps{}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4557
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilter}}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4561
		{
			yyVAL.statement = &ShowThrottlerStatus{}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4565
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VschemaTables}}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4569
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VschemaKeyspaces}}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4573
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
	case 838:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:4577
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4581
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Warnings}}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4585
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilter}}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4589
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilter}}
		}
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4593
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VitessTarget}}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4600
		{
			yyVAL.statement = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4604
		{
			yyVAL.statement = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4608
		{
			yyVAL.statement = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4612
		{
			yyVAL.statement = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4616
		{
			yyVAL.statement = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4620
		{
			yyVAL.statement = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4624
		{
			yyVAL.statement = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
	case 850:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:4628
		{
			yyVAL.statement = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4632
		{
			yyVAL.statement = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
	case 852:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:4636
		{
			yyVAL.statement = &Show{&ShowTransactionStatus{TransactionID: string(yyDollar[5].str)}}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4640
		{
			yyVAL.statement = &Show{&ShowTransactionStatus{}}
		}
	case 854:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:4644
		{
			yyVAL.statement = &Show{&ShowTransactionStatus{Keyspace: yyDollar[5].identifierCS.String()}}
		}
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:4649
		{
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4651
		{
		}
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:4655
		{
			yyVAL.str = ""
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4659
		{
			yyVAL.str = "extended "
		}
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:4665
		{
			yyVAL.boolean = false
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4669
		{
			yyVAL.boolean = true
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4675
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4679
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:4685
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4689
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4693
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:4699
		{
			yyVAL.showFilter = nil
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4703
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].str)}
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4707
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:4713
		{
			yyVAL.showFilter = nil
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4717
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].str)}
		}
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:4723
		{
			yyVAL.empty = struct{}{}
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4727
		{
			yyVAL.empty = struct{}{}
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4731
		{
			yyVAL.empty = struct{}{}
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4737
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4741
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4747
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].identifierCS}
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4751
		{
			yyVAL.statement = &Use{DBName: IdentifierCS{v: ""}}
		}
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4755
		{
			yyVAL.statement = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4762
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4766
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4770
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4774
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4781
		{
			yyVAL.statement = &Begin{}
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4785
		{
			yyVAL.statement = &Begin{TxAccessModes: yyDollar[3].txAccessModes}
		}
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:4790
		{
			yyVAL.txAccessModes = nil
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4794
		{
			yyVAL.txAccessModes = yyDollar[1].txAccessModes
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4800
		{
			yyVAL.txAccessModes = []TxAccessMode{yyDollar[1].txAccessMode}
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4804
		{
			yyVAL.txAccessModes = append(yyDollar[1].txAccessModes, yyDollar[3].txAccessMode)
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4810
		{
			yyVAL.txAccessMode = WithConsistentSnapshot
		}
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4814
		{
			yyVAL.txAccessMode = ReadWrite
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4818
		{
			yyVAL.txAccessMode = ReadOnly
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4825
		{
			yyVAL.statement = &Commit{}
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4831
		{
			yyVAL.statement = &Rollback{}
		}
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:4835
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].identifierCI}
		}
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:4840
		{
			yyVAL.empty = struct{}{}
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4842
		{
			yyVAL.empty = struct{}{}
		}
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:4845
		{
			yyVAL.empty = struct{}{}
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4847
		{
			yyVAL.empty = struct{}{}
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4851
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].identifierCI}
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4857
		{
			yyVAL.statement = &Release{Name: yyDollar[3].identifierCI}
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:4862
		{
			yyVAL.explainType = EmptyType
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4866
		{
			yyVAL.explainType = JSONType
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4870
		{
			yyVAL.explainType = TreeType
		}
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4874
		{
			yyVAL.explainType = TraditionalType
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4878
		{
			yyVAL.explainType = AnalyzeType
		}
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:4883
		{
			yyVAL.vexplainType = PlanVExplainType
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4887
		{
			yyVAL.vexplainType = PlanVExplainType
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4891
		{
			yyVAL.vexplainType = AllVExplainType
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4895
		{
			yyVAL.vexplainType = QueriesVExplainType
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4899
		{
			yyVAL.vexplainType = TraceVExplainType
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4903
		{
			yyVAL.vexplainType = KeysVExplainType
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4909
		{
			yyVAL.str = yyDollar[1].str
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4913
		{
			yyVAL.str = yyDollar[1].str
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4917
		{
			yyVAL.str = yyDollar[1].str
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4923
		{
			yyVAL.statement = yyDollar[1].tableStmt
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4927
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4931
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4935
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:4940
		{
			yyVAL.str = ""
		}
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4944
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4948
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 922:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4954
		{
			yyVAL.statement = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4958
		{
			yyVAL.statement = &ExplainStmt{Type: yyDollar[3].explainType, Statement: yyDollar[4].statement, Comments: Comments(yyDollar[2].strs).Parsed()}
		}
	case 924:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:4964
		{
			yyVAL.statement = &VExplainStmt{Type: yyDollar[3].vexplainType, Statement: yyDollar[4].statement, Comments: Comments(yyDollar[2].strs).Parsed()}
		}
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4970
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4974
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4980
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:4986
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:4990
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:4996
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: yyDollar[1].aliasedTableName, Lock: yyDollar[2].lockType}
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5002
		{
			yyVAL.lockType = Read
		}
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5006
		{
			yyVAL.lockType = ReadLocal
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5010
		{
			yyVAL.lockType = Write
		}
	case 934:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5014
		{
			yyVAL.lockType = LowPriorityWrite
		}
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5020
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 936:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:5026
		{
			yyVAL.statement = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5032
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, FlushOptions: yyDollar[3].strs}
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5036
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean}
		}
	case 939:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:5040
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, WithLock: true}
		}
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:5044
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, TableNames: yyDollar[4].tableNames}
		}
	case 941:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:5048
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, TableNames: yyDollar[4].tableNames, WithLock: true}
		}
	case 942:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:5052
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, TableNames: yyDollar[4].tableNames, ForExport: true}
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5058
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5062
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5068
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5072
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5076
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5080
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5084
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5088
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5092
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5096
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5100
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5104
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5108
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5112
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:5117
		{
			yyVAL.boolean = false
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5121
		{
			yyVAL.boolean = true
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5125
		{
			yyVAL.boolean = true
		}
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:5130
		{
			yyVAL.str = ""
		}
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5134
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:5139
		{
			setAllowComments(yylex, true)
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5143
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:5149
		{
			yyVAL.strs = nil
		}
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5153
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5159
		{
			yyVAL.boolean = true
		}
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5163
		{
			yyVAL.boolean = false
		}
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5167
		{
			yyVAL.boolean = true
		}
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:5172
		{
			yyVAL.str = ""
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5176
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5180
		{
			yyVAL.str = SQLCacheStr
		}
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:5185
		{
			yyVAL.boolean = false
		}
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5189
		{
			yyVAL.boolean = true
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5193
		{
			yyVAL.boolean = true
		}
	case 975:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:5199
		{
			yyVAL.statement = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].expr}
		}
	case 976:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:5203
		{
			yyVAL.statement = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variable,
			}
		}
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:5213
		{
			yyVAL.statement = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variables}
		}
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:5218
		{
			yyVAL.variables = nil
		}
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5222
		{
			yyVAL.variables = yyDollar[2].variables
		}
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:5228
		{
			yyVAL.statement = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
	case 981:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:5232
		{
			yyVAL.statement = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:5237
		{
			yyVAL.strs = nil
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5241
		{
			yyVAL.strs = yyDollar[1].strs
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5247
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5251
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5257
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5261
		{
			yyVAL.str = SQLCacheStr
		}
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5265
		{
			yyVAL.str = DistinctStr
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5269
		{
			yyVAL.str = DistinctStr
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5273
		{
			yyVAL.str = HighPriorityStr
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5277
		{
			yyVAL.str = StraightJoinHint
		}
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5281
		{
			yyVAL.str = SQLBufferResultStr
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5285
		{
			yyVAL.str = SQLSmallResultStr
		}
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5289
		{
			yyVAL.str = SQLBigResultStr
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5293
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5297
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5303
		{
			yyVAL.selectExprs = &SelectExprs{Exprs: []SelectExpr{yyDollar[1].selectExpr}}
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5307
		{
			res := yyDollar[1].selectExprs
			res.Exprs = append(res.Exprs, yyDollar[3].selectExpr)
			yyVAL.selectExprs = res
		}
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5315
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5319
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].identifierCI}
		}
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5323
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
	case 1002:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:5327
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:5332
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5336
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5340
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5347
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:5352
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5356
		{
			yyVAL.tableExprs = yyDollar[1].tableExprs
		}
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5362
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5368
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5372
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5382
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:5386
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].identifierCS, Columns: yyDollar[4].columns}
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5390
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5394
		{
			yyVAL.tableExpr = yyDollar[1].tableExpr
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5400
		{
			yyVAL.derivedTable = &DerivedTable{Lateral: false, Select: yyDollar[1].tableStmt}
		}
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5404
		{
			yyVAL.derivedTable = &DerivedTable{Lateral: true, Select: yyDollar[2].tableStmt}
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5410
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHints}
		}
	case 1022:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:5414
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHints}
		}
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:5419
		{
			yyVAL.columns = nil
		}
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5423
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:5428
		{
			yyVAL.columns = nil
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5432
		{
			yyVAL.columns = yyDollar[1].columns
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5438
		{
			yyVAL.columns = Columns{yyDollar[1].identifierCI}
		}
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5442
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].identifierCI)
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5448
		{
			yyVAL.variables = []*Variable{yyDollar[1].variable}
		}
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5452
		{
			yyVAL.variables = append(yyVAL.variables, yyDollar[3].variable)
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5458
		{
			yyVAL.columns = Columns{yyDollar[1].identifierCI}
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5462
		{
			yyVAL.columns = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5466
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].identifierCI)
		}
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5470
		{
			yyVAL.columns = append(yyVAL.columns, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5476
		{
			yyVAL.partitions = Partitions{yyDollar[1].identifierCI}
		}
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5480
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].identifierCI)
		}
	case 1037:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:5493
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:5497
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:5501
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 1040:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5505
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5511
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].expr}
		}
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:5513
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columns}
		}
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:5517
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5519
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:5523
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5525
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].expr}
		}
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:5528
		{
			yyVAL.empty = struct{}{}
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5530
		{
			yyVAL.empty = struct{}{}
		}
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:5533
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5537
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5541
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5548
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5554
		{
			yyVAL.joinType = NormalJoinType
		}
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5558
		{
			yyVAL.joinType = ParallelNormalJoinType
		}
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5562
		{
			yyVAL.joinType = NormalJoinType
		}
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5566
		{
			yyVAL.joinType = HashJoinType
		}
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5570
		{
			yyVAL.joinType = ParallelNormalJoinType
		}
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:5574
		{
			yyVAL.joinType = ParallelHashJoinType
		}
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5578
		{
			yyVAL.joinType = NormalJoinType
		}
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5582
		{
			yyVAL.joinType = HashJoinType
		}
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5586
		{
			yyVAL.joinType = ParallelHashJoinType
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5593
		{
			yyVAL.joinType = StraightJoinType
		}
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5599
		{
			yyVAL.joinType = LeftJoinType
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5603
		{
			yyVAL.joinType = ParallelLeftJoinType
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5607
		{
			yyVAL.joinType = LeftHashJoinType
		}
	case 1067:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:5611
		{
			yyVAL.joinType = ParallelLeftHashJoinType
		}
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5615
		{
			yyVAL.joinType = LeftJoinType
		}
	case 1069:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:5619
		{
			yyVAL.joinType = ParallelLeftJoinType
		}
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:5623
		{
			yyVAL.joinType = LeftHashJoinType
		}
	case 1071:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:5627
		{
			yyVAL.joinType = ParallelLeftHashJoinType
		}
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5631
		{
			yyVAL.joinType = RightJoinType
		}
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5635
		{
			yyVAL.joinType = ParallelRightJoinType
		}
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5639
		{
			yyVAL.joinType = RightHashJoinType
		}
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:5643
		{
			yyVAL.joinType = ParallelRightHashJoinType
		}
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5647
		{
			yyVAL.joinType = RightJoinType
		}
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:5651
		{
			yyVAL.joinType = ParallelRightJoinType
		}
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:5655
		{
			yyVAL.joinType = RightHashJoinType
		}
	case 1079:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:5659
		{
			yyVAL.joinType = ParallelRightHashJoinType
		}
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5665
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5669
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5679
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5683
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5689
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5693
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5699
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:5704
		{
			yyVAL.indexHints = nil
		}
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5708
		{
			yyVAL.indexHints = yyDollar[1].indexHints
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5714
		{
			yyVAL.indexHints = IndexHints{yyDollar[1].indexHint}
		}
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5718
		{
			yyVAL.indexHints = append(yyDollar[1].indexHints, yyDollar[2].indexHint)
		}
	case 1091:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:5724
		{
			yyVAL.indexHint = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForType, Indexes: yyDollar[5].columns}
		}
	case 1092:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:5728
		{
			yyVAL.indexHint = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForType}
		}
	case 1093:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:5732
		{
			yyVAL.indexHint = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForType, Indexes: yyDollar[5].columns}
		}
	case 1094:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:5736
		{
			yyVAL.indexHint = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForType, Indexes: yyDollar[5].columns}
		}
	case 1095:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:5740
		{
			yyVAL.indexHint = &IndexHint{Type: UseVindexOp, Indexes: yyDollar[4].columns}
		}
	case 1096:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:5744
		{
			yyVAL.indexHint = &IndexHint{Type: IgnoreVindexOp, Indexes: yyDollar[4].columns}
		}
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:5749
		{
			yyVAL.indexHintForType = NoForType
		}
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5753
		{
			yyVAL.indexHintForType = JoinForType
		}
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5757
		{
			yyVAL.indexHintForType = OrderByForType
		}
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5761
		{
			yyVAL.indexHintForType = GroupByForType
		}
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:5767
		{
			yyVAL.expr = nil
		}
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5771
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5778
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5782
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5786
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5790
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5794
		{
			yyVAL.expr = &IsExpr{Left: yyDollar[1].expr, Right: yyDollar[3].isExprOperator}
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5798
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5802
		{
			yyVAL.expr = &AssignmentExpr{Left: yyDollar[1].variable, Right: yyDollar[3].expr}
		}
	case 1110:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:5806
		{
			yyVAL.expr = &MemberOfExpr{Value: yyDollar[1].expr, JSONArr: yyDollar[5].expr}
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5812
		{
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5815
		{
		}
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5820
		{
			yyVAL.expr = &IsExpr{Left: yyDollar[1].expr, Right: IsNullOp}
		}
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:5824
		{
			yyVAL.expr = &IsExpr{Left: yyDollar[1].expr, Right: IsNotNullOp}
		}
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5828
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:5832
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Modifier: Any, Right: yyDollar[4].subquery}
		}
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:5836
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Modifier: Any, Right: yyDollar[4].subquery}
		}
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:5840
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Modifier: All, Right: yyDollar[4].subquery}
		}
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5844
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5850
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 1121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:5854
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 1122:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:5858
		{
			yyVAL.expr = &BetweenExpr{Left: yyDollar[1].expr, IsBetween: true, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 1123:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:5862
		{
			yyVAL.expr = &BetweenExpr{Left: yyDollar[1].expr, IsBetween: false, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5866
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr}
		}
	case 1125:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:5870
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr}
		}
	case 1126:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:5874
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[5].expr}
		}
	case 1127:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:5878
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[6].expr}
		}
	case 1128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5882
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:5886
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5890
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5896
		{
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5899
		{
		}
	case 1133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5905
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5909
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5913
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5917
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5921
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 1138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5925
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 1139:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:5929
		{
			yyVAL.expr = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAdd, Date: yyDollar[1].expr, Unit: yyDollar[5].intervalType, Interval: yyDollar[4].expr}
		}
	case 1140:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:5933
		{
			yyVAL.expr = &IntervalDateExpr{Syntax: IntervalDateExprBinarySub, Date: yyDollar[1].expr, Unit: yyDollar[5].intervalType, Interval: yyDollar[4].expr}
		}
	case 1141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5937
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5941
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 1143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5945
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5949
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 1145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5953
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5957
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5961
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5967
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5971
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5975
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5979
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:5983
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Collation: yyDollar[3].str}
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5987
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5991
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:5995
		{
			yyVAL.expr = yyDollar[1].variable
		}
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:5999
		{
			yyVAL.expr = yyDollar[2].expr // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
	case 1157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:6003
		{
			yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
		}
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:6007
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:6011
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6015
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6019
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:6023
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 1163:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:6027
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[2].colNames, Expr: yyDollar[5].expr, Option: yyDollar[6].matchExprOption}
		}
	case 1164:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:6031
		{
			yyVAL.expr = &CastExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType, Array: yyDollar[6].boolean}
		}
	case 1165:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6035
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 1166:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6039
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 1167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:6043
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[2].expr, Type: &ConvertType{Type: yyDollar[1].str}}
		}
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:6051
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 1169:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:6055
		{
			yyVAL.expr = &IntervalDateExpr{Syntax: IntervalDateExprBinaryAddLeft, Date: yyDollar[5].expr, Unit: yyDollar[3].intervalType, Interval: yyDollar[2].expr}
		}
	case 1170:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6059
		{
			yyVAL.expr = &IntervalFuncExpr{Expr: yyDollar[3].expr, Exprs: yyDollar[5].exprs}
		}
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:6063
		{
			yyVAL.expr = &JSONExtractExpr{JSONDoc: yyDollar[1].expr, PathList: []Expr{yyDollar[3].expr}}
		}
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:6067
		{
			yyVAL.expr = &JSONUnquoteExpr{JSONValue: &JSONExtractExpr{JSONDoc: yyDollar[1].expr, PathList: []Expr{yyDollar[3].expr}}}
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6073
		{
			yyVAL.colNames = yyDollar[1].colNames
		}
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:6077
		{
			yyVAL.colNames = yyDollar[2].colNames
		}
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6083
		{
			yyVAL.colNames = []*ColName{yyDollar[1].colName}
		}
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:6087
		{
			yyVAL.colNames = append(yyDollar[1].colNames, yyDollar[3].colName)
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6093
		{
			yyVAL.trimType = BothTrimType
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6097
		{
			yyVAL.trimType = LeadingTrimType
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6101
		{
			yyVAL.trimType = TrailingTrimType
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6107
		{
			yyVAL.frameUnitType = FrameRowsType
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6111
		{
			yyVAL.frameUnitType = FrameRangeType
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6118
		{
			yyVAL.argumentLessWindowExprType = CumeDistExprType
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6122
		{
			yyVAL.argumentLessWindowExprType = DenseRankExprType
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6126
		{
			yyVAL.argumentLessWindowExprType = PercentRankExprType
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6130
		{
			yyVAL.argumentLessWindowExprType = RankExprType
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6134
		{
			yyVAL.argumentLessWindowExprType = RowNumberExprType
		}
	case 1187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:6140
		{
			yyVAL.framePoint = &FramePoint{Type: CurrentRowType}
		}
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:6144
		{
			yyVAL.framePoint = &FramePoint{Type: UnboundedPrecedingType}
		}
	case 1189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:6148
		{
			yyVAL.framePoint = &FramePoint{Type: UnboundedFollowingType}
		}
	case 1190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:6152
		{
			yyVAL.framePoint = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].expr}
		}
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6156
		{
			yyVAL.framePoint = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].expr, Unit: yyDollar[3].intervalType}
		}
	case 1192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:6160
		{
			yyVAL.framePoint = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].expr}
		}
	case 1193:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6164
		{
			yyVAL.framePoint = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].expr, Unit: yyDollar[3].intervalType}
		}
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:6169
		{
			yyVAL.frameClause = nil
		}
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6173
		{
			yyVAL.frameClause = yyDollar[1].frameClause
		}
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:6179
		{
			yyVAL.frameClause = &FrameClause{Unit: yyDollar[1].frameUnitType, Start: yyDollar[2].framePoint}
		}
	case 1197:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:6183
		{
			yyVAL.frameClause = &FrameClause{Unit: yyDollar[1].frameUnitType, Start: yyDollar[3].framePoint, End: yyDollar[5].framePoint}
		}
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:6188
		{
			yyVAL.exprs = nil
		}
	case 1199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:6192
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:6197
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6201
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6207
		{
			yyVAL.windowSpecification = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprs, OrderClause: yyDollar[3].orderBy, FrameClause: yyDollar[4].frameClause}
		}
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6213
		{
			yyVAL.overClause = &OverClause{WindowSpec: yyDollar[3].windowSpecification}
		}
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:6217
		{
			yyVAL.overClause = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6223
		{
			yyVAL.overClause = yyDollar[1].overClause
		}
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:6227
		{
			yyVAL.overClause = nil
		}
	case 1207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:6232
		{
			yyVAL.nullTreatmentClause = nil
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6239
		{
			yyVAL.nullTreatmentClause = &NullTreatmentClause{yyDollar[1].nullTreatmentType}
		}
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:6245
		{
			yyVAL.nullTreatmentType = RespectNullsType
		}
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:6249
		{
			yyVAL.nullTreatmentType = IgnoreNullsType
		}
	case 1212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6255
		{
			yyVAL.firstOrLastValueExprType = FirstValueExprType
		}
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6259
		{
			yyVAL.firstOrLastValueExprType = LastValueExprType
		}
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:6265
		{
			yyVAL.fromFirstLastType = FromFirstType
		}
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:6269
		{
			yyVAL.fromFirstLastType = FromLastType
		}
	case 1216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:6274
		{
			yyVAL.fromFirstLastClause = nil
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6281
		{
			yyVAL.fromFirstLastClause = &FromFirstLastClause{yyDollar[1].fromFirstLastType}
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6287
		{
			yyVAL.lagLeadExprType = LagExprType
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6291
		{
			yyVAL.lagLeadExprType = LeadExprType
		}
	case 1221:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:6297
		{
			yyVAL.windowDefinition = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecification}
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6303
		{
			yyVAL.windowDefinitions = WindowDefinitions{yyDollar[1].windowDefinition}
		}
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:6307
		{
			yyVAL.windowDefinitions = append(yyDollar[1].windowDefinitions, yyDollar[3].windowDefinition)
		}
	case 1224:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:6313
		{
			yyVAL.str = ""
		}
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:6317
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6323
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6327
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6334
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:6338
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6342
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:6346
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6352
		{
			yyVAL.comparisonExprOperator = yyDollar[1].comparisonExprOperator
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6356
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6362
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6366
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6370
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6374
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6378
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6382
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6388
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6392
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6396
		{
			yyVAL.colTuple = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6403
		{
			yyVAL.subquery = &Subquery{yyDollar[1].tableStmt}
		}
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6409
		{
			yyVAL.exprs = []Expr{yyDollar[1].expr}
		}
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:6413
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 1246:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6423
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].exprs}
		}
	case 1247:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6427
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].exprs}
		}
	case 1248:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6437
		{
			yyVAL.expr = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].exprs}
		}
	case 1249:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6441
		{
			yyVAL.expr = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].exprs}
		}
	case 1250:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:6445
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].expr, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1251:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:6449
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].expr, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1252:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6453
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].expr, From: yyDollar[5].expr}
		}
	case 1253:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:6457
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].expr, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 1254:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6461
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].expr, From: yyDollar[5].expr}
		}
	case 1255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:6465
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 1256:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6469
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 1257:
		yyDollar = yyS[yypt-10 : yypt+1]
//line .\sql.y:6473
		{
			yyVAL.expr = &InsertExpr{Str: yyDollar[3].expr, Pos: yyDollar[5].expr, Len: yyDollar[7].expr, NewStr: yyDollar[9].expr}
		}
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:6477
		{
			yyVAL.expr = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:6488
		{
			yyVAL.expr = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:6492
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:6498
		{
			yyVAL.expr = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
	case 1262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:6502
		{
			yyVAL.expr = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
	case 1263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:6506
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integer}
		}
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:6511
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integer}
		}
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:6516
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integer}
		}
	case 1266:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:6520
		{
			yyVAL.expr = &CountStar{OverClause: yyDollar[5].overClause}
		}
	case 1267:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6524
		{
			yyVAL.expr = &Count{Distinct: yyDollar[3].boolean, Args: yyDollar[4].exprs, OverClause: yyDollar[6].overClause}
		}
	case 1268:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6528
		{
			yyVAL.expr = &Max{Distinct: yyDollar[3].boolean, Arg: yyDollar[4].expr, OverClause: yyDollar[6].overClause}
		}
	case 1269:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6532
		{
			yyVAL.expr = &Min{Distinct: yyDollar[3].boolean, Arg: yyDollar[4].expr, OverClause: yyDollar[6].overClause}
		}
	case 1270:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6536
		{
			yyVAL.expr = &Sum{Distinct: yyDollar[3].boolean, Arg: yyDollar[4].expr, OverClause: yyDollar[6].overClause}
		}
	case 1271:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6540
		{
			yyVAL.expr = &Avg{Distinct: yyDollar[3].boolean, Arg: yyDollar[4].expr, OverClause: yyDollar[6].overClause}
		}
	case 1272:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:6544
		{
			yyVAL.expr = &BitAnd{Arg: yyDollar[3].expr, OverClause: yyDollar[5].overClause}
		}
	case 1273:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:6548
		{
			yyVAL.expr = &BitOr{Arg: yyDollar[3].expr, OverClause: yyDollar[5].overClause}
		}
	case 1274:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:6552
		{
			yyVAL.expr = &BitXor{Arg: yyDollar[3].expr, OverClause: yyDollar[5].overClause}
		}
	case 1275:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:6556
		{
			yyVAL.expr = &Std{Arg: yyDollar[3].expr, OverClause: yyDollar[5].overClause}
		}
	case 1276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:6560
		{
			yyVAL.expr = &StdDev{Arg: yyDollar[3].expr, OverClause: yyDollar[5].overClause}
		}
	case 1277:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:6564
		{
			yyVAL.expr = &StdPop{Arg: yyDollar[3].expr, OverClause: yyDollar[5].overClause}
		}
	case 1278:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:6568
		{
			yyVAL.expr = &StdSamp{Arg: yyDollar[3].expr, OverClause: yyDollar[5].overClause}
		}
	case 1279:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:6572
		{
			yyVAL.expr = &VarPop{Arg: yyDollar[3].expr, OverClause: yyDollar[5].overClause}
		}
	case 1280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:6576
		{
			yyVAL.expr = &VarSamp{Arg: yyDollar[3].expr, OverClause: yyDollar[5].overClause}
		}
	case 1281:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:6580
		{
			yyVAL.expr = &Variance{Arg: yyDollar[3].expr, OverClause: yyDollar[5].overClause}
		}
	case 1282:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:6584
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].exprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6588
		{
			yyVAL.expr = &AnyValue{Arg: yyDollar[3].expr}
		}
	case 1284:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:6592
		{
			yyVAL.expr = &IntervalDateExpr{Syntax: IntervalDateExprTimestampadd, Date: yyDollar[7].expr, Interval: yyDollar[5].expr, Unit: yyDollar[3].intervalType}
		}
	case 1285:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:6596
		{
			yyVAL.expr = &TimestampDiffExpr{Unit: yyDollar[3].intervalType, Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 1286:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6600
		{
			yyVAL.expr = &ExtractFuncExpr{IntervalType: yyDollar[3].intervalType, Expr: yyDollar[5].expr}
		}
	case 1287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:6604
		{
			yyVAL.expr = &WeightStringFuncExpr{Expr: yyDollar[3].expr, As: yyDollar[4].convertType}
		}
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6608
		{
			yyVAL.expr = &JSONPrettyExpr{JSONVal: yyDollar[3].expr}
		}
	case 1289:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6612
		{
			yyVAL.expr = &JSONStorageFreeExpr{JSONVal: yyDollar[3].expr}
		}
	case 1290:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6616
		{
			yyVAL.expr = &JSONStorageSizeExpr{JSONVal: yyDollar[3].expr}
		}
	case 1291:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:6620
		{
			yyVAL.expr = &JSONArrayAgg{Expr: yyDollar[3].expr, OverClause: yyDollar[5].overClause}
		}
	case 1292:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:6624
		{
			yyVAL.expr = &JSONObjectAgg{Key: yyDollar[3].expr, Value: yyDollar[5].expr, OverClause: yyDollar[7].overClause}
		}
	case 1293:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6628
		{
			yyVAL.expr = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].expr}
		}
	case 1294:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6632
		{
			yyVAL.expr = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].expr}
		}
	case 1295:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:6636
		{
			yyVAL.expr = &TrimFuncExpr{Type: yyDollar[3].trimType, TrimArg: yyDollar[4].expr, StringArg: yyDollar[6].expr}
		}
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6640
		{
			yyVAL.expr = &TrimFuncExpr{StringArg: yyDollar[3].expr}
		}
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6644
		{
			yyVAL.expr = &CharExpr{Exprs: yyDollar[3].exprs}
		}
	case 1298:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6648
		{
			yyVAL.expr = &CharExpr{Exprs: yyDollar[3].exprs, Charset: yyDollar[5].str}
		}
	case 1299:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6652
		{
			yyVAL.expr = &TrimFuncExpr{TrimArg: yyDollar[3].expr, StringArg: yyDollar[5].expr}
		}
	case 1300:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6656
		{
			yyVAL.expr = &LocateExpr{SubStr: yyDollar[3].expr, Str: yyDollar[5].expr}
		}
	case 1301:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:6660
		{
			yyVAL.expr = &LocateExpr{SubStr: yyDollar[3].expr, Str: yyDollar[5].expr, Pos: yyDollar[7].expr}
		}
	case 1302:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6664
		{
			yyVAL.expr = &LocateExpr{SubStr: yyDollar[3].expr, Str: yyDollar[5].expr}
		}
	case 1303:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6668
		{
			yyVAL.expr = &LockingFunc{Type: GetLock, Name: yyDollar[3].expr, Timeout: yyDollar[5].expr}
		}
	case 1304:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6672
		{
			yyVAL.expr = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].expr}
		}
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6676
		{
			yyVAL.expr = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].expr}
		}
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:6680
		{
			yyVAL.expr = &LockingFunc{Type: ReleaseAllLocks}
		}
	case 1307:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6684
		{
			yyVAL.expr = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].expr}
		}
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6688
		{
			yyVAL.expr = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].expr, Document: yyDollar[5].expr}
		}
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6692
		{
			yyVAL.expr = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].expr, Document: yyDollar[5].expr}
		}
	case 1310:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6696
		{
			yyVAL.expr = &JSONArrayExpr{Params: yyDollar[3].exprs}
		}
	case 1311:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6700
		{
			yyVAL.expr = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].expr}
		}
	case 1312:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6704
		{
			yyVAL.expr = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].expr, AxisOrderOpt: yyDollar[5].expr}
		}
	case 1313:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6708
		{
			yyVAL.expr = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].expr}
		}
	case 1314:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6712
		{
			yyVAL.expr = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].expr, AxisOrderOpt: yyDollar[5].expr}
		}
	case 1315:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6716
		{
			yyVAL.expr = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].expr}
		}
	case 1316:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6720
		{
			yyVAL.expr = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].expr}
		}
	case 1317:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6724
		{
			yyVAL.expr = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].expr}
		}
	case 1318:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6728
		{
			yyVAL.expr = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].expr}
		}
	case 1319:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6732
		{
			yyVAL.expr = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].expr}
		}
	case 1320:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6736
		{
			yyVAL.expr = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].expr}
		}
	case 1321:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6740
		{
			yyVAL.expr = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].expr, ValueToSet: yyDollar[5].expr}
		}
	case 1322:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6744
		{
			yyVAL.expr = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].expr}
		}
	case 1323:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6748
		{
			yyVAL.expr = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].expr, ValueToSet: yyDollar[5].expr}
		}
	case 1324:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6752
		{
			yyVAL.expr = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].expr}
		}
	case 1325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6756
		{
			yyVAL.expr = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].expr}
		}
	case 1326:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6760
		{
			yyVAL.expr = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].expr}
		}
	case 1327:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6764
		{
			yyVAL.expr = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].expr, PropertyDefArg: yyDollar[5].expr}
		}
	case 1328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6768
		{
			yyVAL.expr = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].expr}
		}
	case 1329:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6772
		{
			yyVAL.expr = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].expr, PropertyDefArg: yyDollar[5].expr}
		}
	case 1330:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6776
		{
			yyVAL.expr = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].expr}
		}
	case 1331:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6780
		{
			yyVAL.expr = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].expr}
		}
	case 1332:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6784
		{
			yyVAL.expr = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].expr, ValueToSet: yyDollar[5].expr}
		}
	case 1333:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6788
		{
			yyVAL.expr = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].expr}
		}
	case 1334:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6792
		{
			yyVAL.expr = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].expr, ValueToSet: yyDollar[5].expr}
		}
	case 1335:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6796
		{
			yyVAL.expr = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].expr}
		}
	case 1336:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6800
		{
			yyVAL.expr = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].expr, Srid: yyDollar[5].expr}
		}
	case 1337:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:6804
		{
			yyVAL.expr = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].expr, Srid: yyDollar[5].expr, AxisOrderOpt: yyDollar[7].expr}
		}
	case 1338:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6808
		{
			yyVAL.expr = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].expr}
		}
	case 1339:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6812
		{
			yyVAL.expr = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].expr, Srid: yyDollar[5].expr}
		}
	case 1340:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:6816
		{
			yyVAL.expr = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].expr, Srid: yyDollar[5].expr, AxisOrderOpt: yyDollar[7].expr}
		}
	case 1341:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6820
		{
			yyVAL.expr = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].expr}
		}
	case 1342:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6824
		{
			yyVAL.expr = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].expr, Srid: yyDollar[5].expr}
		}
	case 1343:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:6828
		{
			yyVAL.expr = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].expr, Srid: yyDollar[5].expr, AxisOrderOpt: yyDollar[7].expr}
		}
	case 1344:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6832
		{
			yyVAL.expr = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].expr}
		}
	case 1345:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6836
		{
			yyVAL.expr = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].expr, Srid: yyDollar[5].expr}
		}
	case 1346:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:6840
		{
			yyVAL.expr = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].expr, Srid: yyDollar[5].expr, AxisOrderOpt: yyDollar[7].expr}
		}
	case 1347:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6844
		{
			yyVAL.expr = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].expr}
		}
	case 1348:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6848
		{
			yyVAL.expr = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].expr, Srid: yyDollar[5].expr}
		}
	case 1349:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:6852
		{
			yyVAL.expr = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].expr, Srid: yyDollar[5].expr, AxisOrderOpt: yyDollar[7].expr}
		}
	case 1350:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6856
		{
			yyVAL.expr = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].expr}
		}
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6860
		{
			yyVAL.expr = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].expr, Srid: yyDollar[5].expr}
		}
	case 1352:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:6864
		{
			yyVAL.expr = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].expr, Srid: yyDollar[5].expr, AxisOrderOpt: yyDollar[7].expr}
		}
	case 1353:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6868
		{
			yyVAL.expr = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].expr}
		}
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6872
		{
			yyVAL.expr = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].expr, Srid: yyDollar[5].expr}
		}
	case 1355:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:6876
		{
			yyVAL.expr = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].expr, Srid: yyDollar[5].expr, AxisOrderOpt: yyDollar[7].expr}
		}
	case 1356:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6880
		{
			yyVAL.expr = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].expr}
		}
	case 1357:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6884
		{
			yyVAL.expr = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].expr, Srid: yyDollar[5].expr}
		}
	case 1358:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:6888
		{
			yyVAL.expr = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].expr, Srid: yyDollar[5].expr, AxisOrderOpt: yyDollar[7].expr}
		}
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6892
		{
			yyVAL.expr = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].expr}
		}
	case 1360:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6896
		{
			yyVAL.expr = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].expr, Srid: yyDollar[5].expr}
		}
	case 1361:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:6900
		{
			yyVAL.expr = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].expr, Srid: yyDollar[5].expr, AxisOrderOpt: yyDollar[7].expr}
		}
	case 1362:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6904
		{
			yyVAL.expr = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].expr}
		}
	case 1363:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6908
		{
			yyVAL.expr = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].expr, Srid: yyDollar[5].expr}
		}
	case 1364:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:6912
		{
			yyVAL.expr = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].expr, Srid: yyDollar[5].expr, AxisOrderOpt: yyDollar[7].expr}
		}
	case 1365:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6916
		{
			yyVAL.expr = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].expr}
		}
	case 1366:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6920
		{
			yyVAL.expr = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].expr, Srid: yyDollar[5].expr}
		}
	case 1367:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:6924
		{
			yyVAL.expr = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].expr, Srid: yyDollar[5].expr, AxisOrderOpt: yyDollar[7].expr}
		}
	case 1368:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6928
		{
			yyVAL.expr = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].expr}
		}
	case 1369:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6932
		{
			yyVAL.expr = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].expr, Srid: yyDollar[5].expr}
		}
	case 1370:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:6936
		{
			yyVAL.expr = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].expr, Srid: yyDollar[5].expr, AxisOrderOpt: yyDollar[7].expr}
		}
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6940
		{
			yyVAL.expr = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].expr}
		}
	case 1372:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6944
		{
			yyVAL.expr = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].expr, Srid: yyDollar[5].expr}
		}
	case 1373:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:6948
		{
			yyVAL.expr = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].expr, Srid: yyDollar[5].expr, AxisOrderOpt: yyDollar[7].expr}
		}
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6952
		{
			yyVAL.expr = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].expr}
		}
	case 1375:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6956
		{
			yyVAL.expr = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].expr, Srid: yyDollar[5].expr}
		}
	case 1376:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:6960
		{
			yyVAL.expr = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].expr, Srid: yyDollar[5].expr, AxisOrderOpt: yyDollar[7].expr}
		}
	case 1377:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6964
		{
			yyVAL.expr = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].expr}
		}
	case 1378:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6968
		{
			yyVAL.expr = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].expr, Srid: yyDollar[5].expr}
		}
	case 1379:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:6972
		{
			yyVAL.expr = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].expr, Srid: yyDollar[5].expr, AxisOrderOpt: yyDollar[7].expr}
		}
	case 1380:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6976
		{
			yyVAL.expr = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].expr}
		}
	case 1381:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:6980
		{
			yyVAL.expr = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].expr, Srid: yyDollar[5].expr}
		}
	case 1382:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:6984
		{
			yyVAL.expr = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].expr, Srid: yyDollar[5].expr, AxisOrderOpt: yyDollar[7].expr}
		}
	case 1383:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6988
		{
			yyVAL.expr = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].expr}
		}
	case 1384:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6992
		{
			yyVAL.expr = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].expr}
		}
	case 1385:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:6996
		{
			yyVAL.expr = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].expr}
		}
	case 1386:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7000
		{
			yyVAL.expr = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].expr, PropertyDefArg: yyDollar[5].expr}
		}
	case 1387:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7004
		{
			yyVAL.expr = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].expr}
		}
	case 1388:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7008
		{
			yyVAL.expr = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].expr, PropertyDefArg: yyDollar[5].expr}
		}
	case 1389:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7012
		{
			yyVAL.expr = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].expr}
		}
	case 1390:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:7016
		{
			yyVAL.expr = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].expr, Latitude: yyDollar[5].expr, MaxLength: yyDollar[7].expr}
		}
	case 1391:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7020
		{
			yyVAL.expr = &GeoHashFromPointExpr{Point: yyDollar[3].expr, MaxLength: yyDollar[5].expr}
		}
	case 1392:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7024
		{
			yyVAL.expr = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].expr}
		}
	case 1393:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7028
		{
			yyVAL.expr = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].expr}
		}
	case 1394:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7032
		{
			yyVAL.expr = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].expr, SridOpt: yyDollar[5].expr}
		}
	case 1395:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7036
		{
			yyVAL.expr = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].expr}
		}
	case 1396:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7040
		{
			yyVAL.expr = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].expr, HigherDimHandlerOpt: yyDollar[5].expr}
		}
	case 1397:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:7044
		{
			yyVAL.expr = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].expr, HigherDimHandlerOpt: yyDollar[5].expr, Srid: yyDollar[7].expr}
		}
	case 1398:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7048
		{
			yyVAL.expr = &GeoJSONFromGeomExpr{Geom: yyDollar[3].expr}
		}
	case 1399:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7052
		{
			yyVAL.expr = &GeoJSONFromGeomExpr{Geom: yyDollar[3].expr, MaxDecimalDigits: yyDollar[5].expr}
		}
	case 1400:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:7056
		{
			yyVAL.expr = &GeoJSONFromGeomExpr{Geom: yyDollar[3].expr, MaxDecimalDigits: yyDollar[5].expr, Bitmask: yyDollar[7].expr}
		}
	case 1401:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7060
		{
			yyVAL.expr = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParams}
		}
	case 1402:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7064
		{
			yyVAL.expr = &JSONQuoteExpr{StringArg: yyDollar[3].expr}
		}
	case 1403:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7068
		{
			yyVAL.expr = &JSONContainsExpr{Target: yyDollar[3].expr, Candidate: yyDollar[5].exprs[0], PathList: yyDollar[5].exprs[1:]}
		}
	case 1404:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:7072
		{
			yyVAL.expr = &JSONContainsPathExpr{JSONDoc: yyDollar[3].expr, OneOrAll: yyDollar[5].expr, PathList: yyDollar[7].exprs}
		}
	case 1405:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7076
		{
			yyVAL.expr = &JSONExtractExpr{JSONDoc: yyDollar[3].expr, PathList: yyDollar[5].exprs}
		}
	case 1406:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7080
		{
			yyVAL.expr = &JSONKeysExpr{JSONDoc: yyDollar[3].expr}
		}
	case 1407:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7084
		{
			yyVAL.expr = &JSONKeysExpr{JSONDoc: yyDollar[3].expr, Path: yyDollar[5].expr}
		}
	case 1408:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7088
		{
			yyVAL.expr = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].expr, JSONDoc2: yyDollar[5].expr}
		}
	case 1409:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:7092
		{
			yyVAL.expr = &JSONSearchExpr{JSONDoc: yyDollar[3].expr, OneOrAll: yyDollar[5].expr, SearchStr: yyDollar[7].expr}
		}
	case 1410:
		yyDollar = yyS[yypt-10 : yypt+1]
//line .\sql.y:7096
		{
			yyVAL.expr = &JSONSearchExpr{JSONDoc: yyDollar[3].expr, OneOrAll: yyDollar[5].expr, SearchStr: yyDollar[7].expr, EscapeChar: yyDollar[9].exprs[0], PathList: yyDollar[9].exprs[1:]}
		}
	case 1411:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:7100
		{
			yyVAL.expr = &JSONValueExpr{JSONDoc: yyDollar[3].expr, Path: yyDollar[5].expr, ReturningType: yyDollar[6].convertType}
		}
	case 1412:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:7104
		{
			yyVAL.expr = &JSONValueExpr{JSONDoc: yyDollar[3].expr, Path: yyDollar[5].expr, ReturningType: yyDollar[6].convertType, EmptyOnResponse: yyDollar[7].jtOnResponse}
		}
	case 1413:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:7108
		{
			yyVAL.expr = &JSONValueExpr{JSONDoc: yyDollar[3].expr, Path: yyDollar[5].expr, ReturningType: yyDollar[6].convertType, ErrorOnResponse: yyDollar[7].jtOnResponse}
		}
	case 1414:
		yyDollar = yyS[yypt-9 : yypt+1]
//line .\sql.y:7112
		{
			yyVAL.expr = &JSONValueExpr{JSONDoc: yyDollar[3].expr, Path: yyDollar[5].expr, ReturningType: yyDollar[6].convertType, EmptyOnResponse: yyDollar[7].jtOnResponse, ErrorOnResponse: yyDollar[8].jtOnResponse}
		}
	case 1415:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7116
		{
			yyVAL.expr = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].expr}
		}
	case 1416:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7120
		{
			yyVAL.expr = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].expr}
		}
	case 1417:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7124
		{
			yyVAL.expr = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].expr}
		}
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7128
		{
			yyVAL.expr = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].expr}
		}
	case 1419:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7132
		{
			yyVAL.expr = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].expr, Path: yyDollar[5].expr}
		}
	case 1420:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7136
		{
			yyVAL.expr = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].expr, Params: yyDollar[5].jsonObjectParams}
		}
	case 1421:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7140
		{
			yyVAL.expr = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].expr, Params: yyDollar[5].jsonObjectParams}
		}
	case 1422:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7144
		{
			yyVAL.expr = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].expr, Params: yyDollar[5].jsonObjectParams}
		}
	case 1423:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7148
		{
			yyVAL.expr = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].expr, Params: yyDollar[5].jsonObjectParams}
		}
	case 1424:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7152
		{
			yyVAL.expr = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].expr, Params: yyDollar[5].jsonObjectParams}
		}
	case 1425:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7156
		{
			yyVAL.expr = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].expr, JSONDocList: yyDollar[5].exprs}
		}
	case 1426:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7160
		{
			yyVAL.expr = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].expr, JSONDocList: yyDollar[5].exprs}
		}
	case 1427:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7164
		{
			yyVAL.expr = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].expr, JSONDocList: yyDollar[5].exprs}
		}
	case 1428:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7168
		{
			yyVAL.expr = &JSONRemoveExpr{JSONDoc: yyDollar[3].expr, PathList: yyDollar[5].exprs}
		}
	case 1429:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7172
		{
			yyVAL.expr = &JSONUnquoteExpr{JSONValue: yyDollar[3].expr}
		}
	case 1430:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7176
		{
			yyVAL.expr = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprs}
		}
	case 1431:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7180
		{
			yyVAL.expr = &MultiPointExpr{PointParams: yyDollar[3].exprs}
		}
	case 1432:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7184
		{
			yyVAL.expr = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprs}
		}
	case 1433:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7188
		{
			yyVAL.expr = &PolygonExpr{LinestringParams: yyDollar[3].exprs}
		}
	case 1434:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7192
		{
			yyVAL.expr = &LineStringExpr{PointParams: yyDollar[3].exprs}
		}
	case 1435:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7196
		{
			yyVAL.expr = &PointExpr{XCordinate: yyDollar[3].expr, YCordinate: yyDollar[5].expr}
		}
	case 1436:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7200
		{
			yyVAL.expr = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprType, OverClause: yyDollar[4].overClause}
		}
	case 1437:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7204
		{
			yyVAL.expr = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprType, Expr: yyDollar[3].expr, NullTreatmentClause: yyDollar[5].nullTreatmentClause, OverClause: yyDollar[6].overClause}
		}
	case 1438:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:7208
		{
			yyVAL.expr = &NtileExpr{N: yyDollar[3].expr, OverClause: yyDollar[5].overClause}
		}
	case 1439:
		yyDollar = yyS[yypt-9 : yypt+1]
//line .\sql.y:7212
		{
			yyVAL.expr = &NTHValueExpr{Expr: yyDollar[3].expr, N: yyDollar[5].expr, FromFirstLastClause: yyDollar[7].fromFirstLastClause, NullTreatmentClause: yyDollar[8].nullTreatmentClause, OverClause: yyDollar[9].overClause}
		}
	case 1440:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7216
		{
			yyVAL.expr = &LagLeadExpr{Type: yyDollar[1].lagLeadExprType, Expr: yyDollar[3].expr, NullTreatmentClause: yyDollar[5].nullTreatmentClause, OverClause: yyDollar[6].overClause}
		}
	case 1441:
		yyDollar = yyS[yypt-9 : yypt+1]
//line .\sql.y:7220
		{
			yyVAL.expr = &LagLeadExpr{Type: yyDollar[1].lagLeadExprType, Expr: yyDollar[3].expr, N: yyDollar[5].expr, Default: yyDollar[6].expr, NullTreatmentClause: yyDollar[8].nullTreatmentClause, OverClause: yyDollar[9].overClause}
		}
	case 1442:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:7224
		{
			yyVAL.expr = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].expr, Interval: yyDollar[6].expr, Unit: yyDollar[7].intervalType}
		}
	case 1443:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7228
		{
			yyVAL.expr = &IntervalDateExpr{Syntax: IntervalDateExprAdddate, Date: yyDollar[3].expr, Interval: yyDollar[5].expr, Unit: IntervalNone}
		}
	case 1444:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:7232
		{
			yyVAL.expr = &IntervalDateExpr{Syntax: IntervalDateExprDateAdd, Date: yyDollar[3].expr, Interval: yyDollar[6].expr, Unit: yyDollar[7].intervalType}
		}
	case 1445:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:7236
		{
			yyVAL.expr = &IntervalDateExpr{Syntax: IntervalDateExprDateSub, Date: yyDollar[3].expr, Interval: yyDollar[6].expr, Unit: yyDollar[7].intervalType}
		}
	case 1446:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:7240
		{
			yyVAL.expr = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].expr, Interval: yyDollar[6].expr, Unit: yyDollar[7].intervalType}
		}
	case 1447:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7244
		{
			yyVAL.expr = &IntervalDateExpr{Syntax: IntervalDateExprSubdate, Date: yyDollar[3].expr, Interval: yyDollar[5].expr, Unit: IntervalNone}
		}
	case 1452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7254
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7258
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].str)
		}
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7262
		{
			yyVAL.expr = yyDollar[1].variable
		}
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7266
		{
			yyVAL.expr = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
	case 1456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:7271
		{
			yyVAL.expr = nil
		}
	case 1457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:7275
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1458:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7281
		{
			yyVAL.expr = &RegexpInstrExpr{Expr: yyDollar[3].expr, Pattern: yyDollar[5].expr}
		}
	case 1459:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:7285
		{
			yyVAL.expr = &RegexpInstrExpr{Expr: yyDollar[3].expr, Pattern: yyDollar[5].expr, Position: yyDollar[7].expr}
		}
	case 1460:
		yyDollar = yyS[yypt-10 : yypt+1]
//line .\sql.y:7289
		{
			yyVAL.expr = &RegexpInstrExpr{Expr: yyDollar[3].expr, Pattern: yyDollar[5].expr, Position: yyDollar[7].expr, Occurrence: yyDollar[9].expr}
		}
	case 1461:
		yyDollar = yyS[yypt-12 : yypt+1]
//line .\sql.y:7293
		{
			yyVAL.expr = &RegexpInstrExpr{Expr: yyDollar[3].expr, Pattern: yyDollar[5].expr, Position: yyDollar[7].expr, Occurrence: yyDollar[9].expr, ReturnOption: yyDollar[11].expr}
		}
	case 1462:
		yyDollar = yyS[yypt-14 : yypt+1]
//line .\sql.y:7297
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyVAL.expr = &RegexpInstrExpr{Expr: yyDollar[3].expr, Pattern: yyDollar[5].expr, Position: yyDollar[7].expr, Occurrence: yyDollar[9].expr, ReturnOption: yyDollar[11].expr, MatchType: yyDollar[13].expr}
		}
	case 1463:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7302
		{
			yyVAL.expr = &RegexpLikeExpr{Expr: yyDollar[3].expr, Pattern: yyDollar[5].expr}
		}
	case 1464:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:7306
		{
			yyVAL.expr = &RegexpLikeExpr{Expr: yyDollar[3].expr, Pattern: yyDollar[5].expr, MatchType: yyDollar[7].expr}
		}
	case 1465:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:7310
		{
			yyVAL.expr = &RegexpReplaceExpr{Expr: yyDollar[3].expr, Pattern: yyDollar[5].expr, Repl: yyDollar[7].expr}
		}
	case 1466:
		yyDollar = yyS[yypt-10 : yypt+1]
//line .\sql.y:7314
		{
			yyVAL.expr = &RegexpReplaceExpr{Expr: yyDollar[3].expr, Pattern: yyDollar[5].expr, Repl: yyDollar[7].expr, Position: yyDollar[9].expr}
		}
	case 1467:
		yyDollar = yyS[yypt-12 : yypt+1]
//line .\sql.y:7318
		{
			yyVAL.expr = &RegexpReplaceExpr{Expr: yyDollar[3].expr, Pattern: yyDollar[5].expr, Repl: yyDollar[7].expr, Position: yyDollar[9].expr, Occurrence: yyDollar[11].expr}
		}
	case 1468:
		yyDollar = yyS[yypt-14 : yypt+1]
//line .\sql.y:7322
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyVAL.expr = &RegexpReplaceExpr{Expr: yyDollar[3].expr, Pattern: yyDollar[5].expr, Repl: yyDollar[7].expr, Position: yyDollar[9].expr, Occurrence: yyDollar[11].expr, MatchType: yyDollar[13].expr}
		}
	case 1469:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7327
		{
			yyVAL.expr = &RegexpSubstrExpr{Expr: yyDollar[3].expr, Pattern: yyDollar[5].expr}
		}
	case 1470:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:7331
		{
			yyVAL.expr = &RegexpSubstrExpr{Expr: yyDollar[3].expr, Pattern: yyDollar[5].expr, Position: yyDollar[7].expr}
		}
	case 1471:
		yyDollar = yyS[yypt-10 : yypt+1]
//line .\sql.y:7335
		{
			yyVAL.expr = &RegexpSubstrExpr{Expr: yyDollar[3].expr, Pattern: yyDollar[5].expr, Position: yyDollar[7].expr, Occurrence: yyDollar[9].expr}
		}
	case 1472:
		yyDollar = yyS[yypt-12 : yypt+1]
//line .\sql.y:7339
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyVAL.expr = &RegexpSubstrExpr{Expr: yyDollar[3].expr, Pattern: yyDollar[5].expr, Position: yyDollar[7].expr, Occurrence: yyDollar[9].expr, MatchType: yyDollar[11].expr}
		}
	case 1473:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7346
		{
			yyVAL.expr = &ExtractValueExpr{Fragment: yyDollar[3].expr, XPathExpr: yyDollar[5].expr}
		}
	case 1474:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:7350
		{
			yyVAL.expr = &UpdateXMLExpr{Target: yyDollar[3].expr, XPathExpr: yyDollar[5].expr, NewXML: yyDollar[7].expr}
		}
	case 1475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7356
		{
			yyVAL.expr = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].expr}
		}
	case 1476:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7360
		{
			yyVAL.expr = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].expr}
		}
	case 1477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:7364
		{
			yyVAL.expr = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
	case 1478:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7368
		{
			yyVAL.expr = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].expr}
		}
	case 1479:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7374
		{
			yyVAL.expr = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].expr, Set2: yyDollar[5].expr}
		}
	case 1480:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7378
		{
			yyVAL.expr = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].expr, Set2: yyDollar[5].expr}
		}
	case 1481:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7382
		{
			yyVAL.expr = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].expr}
		}
	case 1482:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7386
		{
			yyVAL.expr = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].expr, Timeout: yyDollar[5].expr}
		}
	case 1483:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7390
		{
			yyVAL.expr = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].expr}
		}
	case 1484:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:7394
		{
			yyVAL.expr = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].expr, Timeout: yyDollar[5].expr}
		}
	case 1485:
		yyDollar = yyS[yypt-8 : yypt+1]
//line .\sql.y:7398
		{
			yyVAL.expr = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].expr, Timeout: yyDollar[5].expr, Channel: yyDollar[7].expr}
		}
	case 1486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:7403
		{
			yyVAL.convertType = nil
		}
	case 1487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:7407
		{
			yyVAL.convertType = yyDollar[2].convertType
		}
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7413
		{
			yyVAL.intervalType = IntervalDayHour
		}
	case 1489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7417
		{
			yyVAL.intervalType = IntervalDayMicrosecond
		}
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7421
		{
			yyVAL.intervalType = IntervalDayMinute
		}
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7425
		{
			yyVAL.intervalType = IntervalDaySecond
		}
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7429
		{
			yyVAL.intervalType = IntervalHourMicrosecond
		}
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7433
		{
			yyVAL.intervalType = IntervalHourMinute
		}
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7437
		{
			yyVAL.intervalType = IntervalHourSecond
		}
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7441
		{
			yyVAL.intervalType = IntervalMinuteMicrosecond
		}
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7445
		{
			yyVAL.intervalType = IntervalMinuteSecond
		}
	case 1497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7449
		{
			yyVAL.intervalType = IntervalSecondMicrosecond
		}
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7453
		{
			yyVAL.intervalType = IntervalYearMonth
		}
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7457
		{
			yyVAL.intervalType = IntervalDay
		}
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7461
		{
			yyVAL.intervalType = IntervalWeek
		}
	case 1501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7465
		{
			yyVAL.intervalType = IntervalHour
		}
	case 1502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7469
		{
			yyVAL.intervalType = IntervalMinute
		}
	case 1503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7473
		{
			yyVAL.intervalType = IntervalMonth
		}
	case 1504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7477
		{
			yyVAL.intervalType = IntervalQuarter
		}
	case 1505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7481
		{
			yyVAL.intervalType = IntervalSecond
		}
	case 1506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7485
		{
			yyVAL.intervalType = IntervalMicrosecond
		}
	case 1507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7489
		{
			yyVAL.intervalType = IntervalYear
		}
	case 1508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7495
		{
			yyVAL.intervalType = IntervalDay
		}
	case 1509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7499
		{
			yyVAL.intervalType = IntervalWeek
		}
	case 1510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7503
		{
			yyVAL.intervalType = IntervalHour
		}
	case 1511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7507
		{
			yyVAL.intervalType = IntervalMinute
		}
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7511
		{
			yyVAL.intervalType = IntervalMonth
		}
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7515
		{
			yyVAL.intervalType = IntervalQuarter
		}
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7519
		{
			yyVAL.intervalType = IntervalSecond
		}
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7523
		{
			yyVAL.intervalType = IntervalMicrosecond
		}
	case 1516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7527
		{
			yyVAL.intervalType = IntervalYear
		}
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7531
		{
			yyVAL.intervalType = IntervalDay
		}
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7535
		{
			yyVAL.intervalType = IntervalWeek
		}
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7539
		{
			yyVAL.intervalType = IntervalHour
		}
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7543
		{
			yyVAL.intervalType = IntervalMinute
		}
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7547
		{
			yyVAL.intervalType = IntervalMonth
		}
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7551
		{
			yyVAL.intervalType = IntervalQuarter
		}
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7555
		{
			yyVAL.intervalType = IntervalSecond
		}
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7559
		{
			yyVAL.intervalType = IntervalMicrosecond
		}
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7563
		{
			yyVAL.intervalType = IntervalYear
		}
	case 1528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:7573
		{
			yyVAL.integer = 0
		}
	case 1529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:7577
		{
			yyVAL.integer = 0
		}
	case 1530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:7581
		{
			yyVAL.integer = convertStringToInt(yyDollar[2].str)
		}
	case 1531:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7591
		{
			yyVAL.expr = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].exprs}
		}
	case 1532:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7595
		{
			yyVAL.expr = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].exprs}
		}
	case 1533:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7599
		{
			yyVAL.expr = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].exprs}
		}
	case 1534:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7603
		{
			yyVAL.expr = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].exprs}
		}
	case 1535:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7607
		{
			yyVAL.expr = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].exprs}
		}
	case 1536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:7613
		{
			yyVAL.matchExprOption = NoOption
		}
	case 1537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:7617
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 1538:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7621
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 1539:
		yyDollar = yyS[yypt-7 : yypt+1]
//line .\sql.y:7625
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 1540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:7629
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7635
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7639
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7643
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1544:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:7649
		{
			yyVAL.convertType = nil
		}
	case 1545:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:7653
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
	case 1546:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:7657
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[2].str), Length: ptr.Of(convertStringToInt(yyDollar[4].str))}
		}
	case 1547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:7663
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtr}
		}
	case 1548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:7667
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtr, Charset: yyDollar[3].columnCharset}
		}
	case 1549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7671
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str)}
		}
	case 1550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:7675
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtr}
		}
	case 1551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:7679
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7685
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str)}
		}
	case 1553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:7689
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtr}
		}
	case 1554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7693
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str)}
		}
	case 1555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:7697
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str)}
		}
	case 1556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:7701
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtr}
		}
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7705
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str)}
		}
	case 1558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:7709
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str)}
		}
	case 1559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:7713
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].intPtr}
		}
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7717
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str)}
		}
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7721
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].str)}
		}
	case 1562:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:7727
		{
			yyVAL.boolean = false
		}
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7731
		{
			yyVAL.boolean = true
		}
	case 1564:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:7736
		{
			yyVAL.expr = nil
		}
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7740
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 1566:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:7745
		{
			yyVAL.str = string("")
		}
	case 1567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:7749
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7755
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 1569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:7759
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 1570:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7765
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 1571:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:7770
		{
			yyVAL.expr = nil
		}
	case 1572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:7774
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7780
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].identifierCI}
		}
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7784
		{
			yyVAL.colName = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
	case 1575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:7788
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
	case 1576:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:7792
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
	case 1577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7798
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7802
		{
			yyVAL.expr = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
	case 1579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7808
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral("1")
		}
	case 1580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:7817
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].str)
		}
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:7821
		{
			yyVAL.expr = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
	case 1582:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:7826
		{
			yyVAL.groupBy = nil
		}
	case 1583:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7830
		{
			yyVAL.groupBy = &GroupBy{Exprs: yyDollar[3].exprs, WithRollup: yyDollar[4].boolean}
		}
	case 1584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:7835
		{
			yyVAL.boolean = false
		}
	case 1585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:7839
		{
			yyVAL.boolean = true
		}
	case 1586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:7845
		{
			yyVAL.expr = nil
		}
	case 1587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:7849
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 1588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:7855
		{
			yyVAL.namedWindow = &NamedWindow{yyDollar[2].windowDefinitions}
		}
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7861
		{
			yyVAL.namedWindows = NamedWindows{yyDollar[1].namedWindow}
		}
	case 1590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:7865
		{
			yyVAL.namedWindows = append(yyDollar[1].namedWindows, yyDollar[3].namedWindow)
		}
	case 1591:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:7870
		{
			yyVAL.namedWindows = nil
		}
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7874
		{
			yyVAL.namedWindows = yyDollar[1].namedWindows
		}
	case 1593:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:7879
		{
			yyVAL.orderBy = nil
		}
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7883
		{
			yyVAL.orderBy = yyDollar[1].orderBy
		}
	case 1595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:7889
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 1596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7895
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 1597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:7899
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 1598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:7905
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 1599:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:7910
		{
			yyVAL.orderDirection = AscOrder
		}
	case 1600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7914
		{
			yyVAL.orderDirection = AscOrder
		}
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7918
		{
			yyVAL.orderDirection = DescOrder
		}
	case 1602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:7923
		{
			yyVAL.limit = nil
		}
	case 1603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7927
		{
			yyVAL.limit = yyDollar[1].limit
		}
	case 1604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:7933
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 1605:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7937
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 1606:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:7941
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 1607:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:7946
		{
			yyVAL.alterOptions = nil
		}
	case 1608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:7950
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption, yyDollar[2].alterOption}
		}
	case 1609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:7954
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption, yyDollar[2].alterOption}
		}
	case 1610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7958
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 1611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:7962
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 1612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:7969
		{
			yyVAL.alterOption = &LockOption{Type: DefaultType}
		}
	case 1613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:7973
		{
			yyVAL.alterOption = &LockOption{Type: NoneType}
		}
	case 1614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:7977
		{
			yyVAL.alterOption = &LockOption{Type: SharedType}
		}
	case 1615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:7981
		{
			yyVAL.alterOption = &LockOption{Type: ExclusiveType}
		}
	case 1616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:7987
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].str)
		}
	case 1617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:7991
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].str)
		}
	case 1618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:7995
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].str)
		}
	case 1619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:7999
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].str)
		}
	case 1620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:8004
		{
			yyVAL.str = ""
		}
	case 1622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8011
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8015
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8019
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1625:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:8024
		{
			yyVAL.str = ""
		}
	case 1626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8028
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8034
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8038
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1629:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:8043
		{
			yyVAL.str = ""
		}
	case 1630:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:8047
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1631:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:8052
		{
			yyVAL.str = "cascaded"
		}
	case 1632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8056
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8060
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1634:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:8065
		{
			yyVAL.procParams = nil
		}
	case 1635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8069
		{
			yyVAL.procParams = yyDollar[1].procParams
		}
	case 1636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8075
		{
			yyVAL.procParams = []*ProcParameter{yyDollar[1].procParam}
		}
	case 1637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8079
		{
			yyVAL.procParams = append(yyVAL.procParams, yyDollar[3].procParam)
		}
	case 1638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8085
		{
			yyVAL.procParam = &ProcParameter{Mode: yyDollar[1].procParamMode, Name: yyDollar[2].identifierCI, Type: yyDollar[3].columnType}
		}
	case 1639:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:8090
		{
			yyVAL.procParamMode = InMode
		}
	case 1640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8094
		{
			yyVAL.procParamMode = InMode
		}
	case 1641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8098
		{
			yyVAL.procParamMode = InoutMode
		}
	case 1642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8102
		{
			yyVAL.procParamMode = OutMode
		}
	case 1643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:8107
		{
			yyVAL.definer = nil
		}
	case 1645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8114
		{
			yyVAL.definer = yyDollar[3].definer
		}
	case 1646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8120
		{
			yyVAL.definer = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
	case 1647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8126
		{
			yyVAL.definer = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
	case 1648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:8132
		{
			yyVAL.definer = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
	case 1649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8141
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8145
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:8150
		{
			yyVAL.str = ""
		}
	case 1652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8154
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:8160
		{
			yyVAL.lock = ForUpdateLock
		}
	case 1654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8164
		{
			yyVAL.lock = ForUpdateLockNoWait
		}
	case 1655:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:8168
		{
			yyVAL.lock = ForUpdateLockSkipLocked
		}
	case 1656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:8172
		{
			yyVAL.lock = ForShareLock
		}
	case 1657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8176
		{
			yyVAL.lock = ForShareLockNoWait
		}
	case 1658:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:8180
		{
			yyVAL.lock = ForShareLockSkipLocked
		}
	case 1659:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:8184
		{
			yyVAL.lock = ShareModeLock
		}
	case 1660:
		yyDollar = yyS[yypt-9 : yypt+1]
//line .\sql.y:8190
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 1661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8194
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 1662:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:8198
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 1663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:8202
		{
			yyVAL.selectInto = &SelectInto{Type: IntoVariables, VarList: yyDollar[2].variables}
		}
	case 1664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8208
		{
			yyVAL.variables = append(yyDollar[1].variables, yyDollar[3].variable)
		}
	case 1665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8212
		{
			yyVAL.variables = []*Variable{yyDollar[1].variable}
		}
	case 1666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8218
		{
			yyVAL.variable = yyDollar[1].variable
		}
	case 1667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8222
		{
			yyVAL.variable = &Variable{Name: createIdentifierCI(yyDollar[1].str), Scope: NoScope}
		}
	case 1668:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:8227
		{
			yyVAL.str = ""
		}
	case 1669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8231
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8235
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1671:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:8240
		{
			yyVAL.str = ""
		}
	case 1672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8244
		{
			yyVAL.str = " header"
		}
	case 1673:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:8249
		{
			yyVAL.str = ""
		}
	case 1674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:8253
		{
			yyVAL.str = " manifest on"
		}
	case 1675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:8257
		{
			yyVAL.str = " manifest off"
		}
	case 1676:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:8262
		{
			yyVAL.str = ""
		}
	case 1677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:8266
		{
			yyVAL.str = " overwrite on"
		}
	case 1678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:8270
		{
			yyVAL.str = " overwrite off"
		}
	case 1679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:8276
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1680:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:8281
		{
			yyVAL.str = ""
		}
	case 1681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:8285
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8291
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:8295
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8301
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8305
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1686:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:8310
		{
			yyVAL.str = ""
		}
	case 1687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:8314
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8320
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:8324
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8330
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1691:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:8334
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8338
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1693:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:8343
		{
			yyVAL.str = ""
		}
	case 1694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8347
		{
			yyVAL.str = " optionally"
		}
	case 1695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8360
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values, RowAlias: yyDollar[3].rowAlias}
		}
	case 1696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8364
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].tableStmt}
		}
	case 1697:
		yyDollar = yyS[yypt-6 : yypt+1]
//line .\sql.y:8368
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values, RowAlias: yyDollar[6].rowAlias}
		}
	case 1698:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:8372
		{
			yyVAL.ins = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].values, RowAlias: yyDollar[5].rowAlias}
		}
	case 1699:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:8376
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].tableStmt}
		}
	case 1702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8386
		{
			yyVAL.columns = Columns{yyDollar[1].identifierCI}
		}
	case 1703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8390
		{
			yyVAL.columns = Columns{yyDollar[3].identifierCI}
		}
	case 1704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8394
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].identifierCI)
		}
	case 1705:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:8398
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].identifierCI)
		}
	case 1706:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:8403
		{
			yyVAL.rowAlias = nil
		}
	case 1707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:8407
		{
			yyVAL.rowAlias = &RowAlias{TableName: yyDollar[2].identifierCS}
		}
	case 1708:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:8411
		{
			yyVAL.rowAlias = &RowAlias{TableName: yyDollar[2].identifierCS, Columns: yyDollar[4].columns}
		}
	case 1709:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:8416
		{
			yyVAL.updateExprs = nil
		}
	case 1710:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:8420
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 1711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8426
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1712:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8430
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8436
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 1714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8440
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 1715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8446
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8450
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8456
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 1718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:8460
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 1719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8466
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 1720:
		yyDollar = yyS[yypt-4 : yypt+1]
//line .\sql.y:8472
		{
			yyVAL.valTuple = ValTuple(yyDollar[3].exprs)
		}
	case 1723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8482
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 1724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8492
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 1725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8496
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 1726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8502
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 1728:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:8509
		{
			yyVAL.str = "charset"
		}
	case 1731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8519
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
	case 1732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8523
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].str)
		}
	case 1733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8527
		{
			yyVAL.expr = &Default{}
		}
	case 1736:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:8536
		{
			yyVAL.boolean = false
		}
	case 1737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8538
		{
			yyVAL.boolean = true
		}
	case 1738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:8541
		{
			yyVAL.boolean = false
		}
	case 1739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:8543
		{
			yyVAL.boolean = true
		}
	case 1740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:8546
		{
			yyVAL.boolean = false
		}
	case 1741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8548
		{
			yyVAL.boolean = true
		}
	case 1742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:8551
		{
			yyVAL.ignore = false
		}
	case 1743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8553
		{
			yyVAL.ignore = true
		}
	case 1744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:8556
		{
			yyVAL.empty = struct{}{}
		}
	case 1745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8558
		{
			yyVAL.empty = struct{}{}
		}
	case 1746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8560
		{
			yyVAL.empty = struct{}{}
		}
	case 1747:
		yyDollar = yyS[yypt-5 : yypt+1]
//line .\sql.y:8564
		{
			yyVAL.statement = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprs}
		}
	case 1748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:8569
		{
			yyVAL.exprs = nil
		}
	case 1749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8573
		{
			yyVAL.exprs = yyDollar[1].exprs
		}
	case 1750:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:8578
		{
			yyVAL.indexOptions = nil
		}
	case 1751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8580
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 1752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line .\sql.y:8584
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
	case 1753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8590
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8594
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8601
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8607
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8611
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1759:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:8617
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8621
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8628
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line .\sql.y:8634
		{
			yyVAL.statement = &Kill{Type: yyDollar[2].killType, ProcesslistID: convertStringToUInt64(yyDollar[3].str)}
		}
	case 1764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:8640
		{
			yyVAL.killType = ConnectionType
		}
	case 1765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8644
		{
			yyVAL.killType = ConnectionType
		}
	case 1766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:8648
		{
			yyVAL.killType = QueryType
		}
	case 2435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:9345
		{
		}
	case 2436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:9350
		{
		}
	case 2437:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:9354
		{
			skipToEnd(yylex)
		}
	case 2438:
		yyDollar = yyS[yypt-0 : yypt+1]
//line .\sql.y:9359
		{
			skipToEnd(yylex)
		}
	case 2439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:9363
		{
			skipToEnd(yylex)
		}
	case 2440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line .\sql.y:9367
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
